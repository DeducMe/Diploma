{"version":3,"sources":["components/Profile/Main/Main.js","components/Profile/Side/Side.js","components/Profile/Resumes/ResumeRedactPopup/ResumeRedactPopup.js","components/ResumePopup/ResumePopup.js","components/Profile/Resumes/Resumes.js","components/Profile/ProfileRedactPopup/ImageCropper.js","components/Profile/ProfileRedactPopup/MainPlaceholder.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionBaseInfo.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionExperience.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionImages.js","img/experience.svg","components/Profile/ProfileRedactPopup/ProfileRedactPopup.js","components/Profile/Profile.js"],"names":["Main","props","convertIntToDay","num","toggleMapPopup","state","mapPopupState","setState","redactProfile","onPopupRedactProfileActivate","this","userState","user","user_type","className","el","returnValue","console","log","userData","hasProfile","style","backgroundImage","checkOnEmpty","profile_background","personalBackground","src","photo_url","placeholderAvatar","alt","id","onClick","editIcon","name","about","birthday","substring","gender","address","LeafletMap","citizenship","phone","language","education","experience","length","map","index","href","grade","schedule","start_time","end_time","day","profession","university","type","start_year","end_year","position","company","goPhrase","plusIcon","Component","connect","dispatch","onSubjectChangeToEmployer","payload","Side","ResumeRedactPopup","changeVacancyName","e","check","checkStringInput","target","value","onVacancyNameChange","resumeIndex","onInputMistake","changeGradeValue","onGradeValueChange","changeSalary","checkIntInput","onSalaryValueChange","parseInt","resumePlaceholder","salary","changeIndustryValue","onIndustryValueChange","workTypeDelete","preventDefault","parentElement","dataset","key","onWorkTypeDelete","resumeWorkType","workTypeInput","indexOf","onWorkTypeAdd","changeAboutValue","onAboutValueChange","saveResumeFormChanges","data","cvPlaceholder","vacancy_name","industry","work_type","tags","bg_header_color","resumeData","cvs","onSaveResumeFormChanges","tagDelete","onTagDelete","tagInput","split","join","keyCode","resumeTags","onTagAdd","closeRedactPopup","onPopupRedactResumeDeactivate","deleteResume","onPopupRedactResumeDelete","changeResumeHeaderColor","onResumeHeaderColorChange","resumeState","addStyle","required","placeholder","onChange","bind","closeIcon","deleteIcon","industries","item","data-key","getWorkTypeValues","tag","onKeyDown","ownProps","newCv","onAddResume","addResume","then","newCvId","userId","getUserResumes","color","tagId","workType","workTypeId","text","resumeId","redactResume","mistakeStr","ResumePopup","onGetResume","onCloseResumePopup","Object","keys","openedResume","popupClose","getGradeValues","pub_date","slice","tabIndex","buf","getResume","Resumes","fetch","headers","response","json","onPopupNewResumeActivate","onPopupRedactResumeActivate","openResumeInfo","onOpenResumeInfo","logged","cvData","openedResumeId","newCvData","ImageCropper","cropUserImage","file","maxWidth","maxHeight","imageType","onDeactivateCropper","setTimeout","undefined","onActivateCropper","loadImageToFirebase","image","fileRef","fileUploader","storage","ref","child","put","getDownloadURL","onChangeAvatar","onChangePersonalBackground","getCropperData","cropperData","instance","croppedImage","dataURLtoBlob","getCroppedCanvas","toDataURL","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","loadUserImage","files","deactivateCropper","cropperFile","onSetCropperFile","cropperActive","background","width","height","overflow","avatar","backgroundColor","aspectRatio","cropperMaxWidth","cropperMaxHeight","preview","viewMode","dragMode","guides","minCropBoxHeight","minCropBoxWidth","responsive","autoCropArea","checkOrientation","onInitialized","setCropperInstance","uploadIcon","profile","cropper","fileUrl","MainPlaceholder","avatarPhoto","userName","userDescription","userBirthday","userGender","userCz","userAddress","userPhones","userLanguages","userEducation","userExperience","placeholderData","description","onUpdateUserName","profileState","LeafletMapData","leafletMap","onUsernameChange","username","onDescriptionChange","onBDayChange","onCzChange","onAddressChange","onSaveNewAddress","onChangeGenderToMale","onChangeGenderToFemale","onLanguageAdd","onLanguageGradeChange","onLanguageDelete","languageId","onScheduleAdd","onScheduleDayChange","onScheduleStartTimeChange","time","onScheduleEndTimeChange","onScheduleDelete","scheduleId","onPhoneAdd","onPhoneDelete","phoneId","onCityChange","changeGender","deleteLanguage","deleteSchedule","deletePhone","input","htmlFor","cz","lat","lng","onSubmit","phonesInput","languageInput","newLanguage","languageGrade","filter","newSchedule","scheduleStartTime","scheduleEndTime","scheduleDay","onEducationAdd","onEducationDelete","educationId","onExperienceAdd","onExperienceDelete","experienceId","educationDelete","experienceDelete","educationBlocksAmount","newEducation","professionInput","universityInput","educationTypeInput","educationStartDateInput","educationEndDateInput","newExperience","positionInput","companyInput","experienceTypeInput","experienceStartDateInput","experienceEndDateInput","dragOver","dragEnter","dragLeave","fileDrop","dataTransfer","onDragOver","onDragEnter","onDragLeave","onDrop","event","hidden","cropIcon","ProfileRedactPopup","saveRedactProfileFormChanges","onUpdateEmployee","onGetUserFetch","onHasProfile","onUpdateEmployer","onPopupRedactProfileDeactivate","section","onChangeSection","popupRedactActiveSection","changeSection","baseInfoIcon","experienceIcon","personalizationIcon","loaderActive","nav","popup","onActivateLoader","onDeactivateLoader","onCreateNewEmployee","createNewEmployee","onCreateNewEmployer","updateEmployee","getUserData","Profile","initPlaceholder","onInitializeProfileData","checkIfNotNull","profile_link","social_links","variable","def","userFetchId","String","onGetLoggedUserFetch","history","onGetResumes","Loader","active","params","push","fetchId"],"mappings":"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","file":"static/js/6.7b9cc9c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport LeafletMap from '../../leafletMap/LeafletMap'\r\n\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapPopupState:''\r\n        };\r\n    }\r\n\r\n    convertIntToDay = (num) =>{\r\n        const days = [\r\n            'Понедельник',\r\n            'Вторник',\r\n            'Среда',\r\n            'Четверг',\r\n            'Пятница',\r\n            'Суббота',\r\n            'Воскресенье',\r\n        ]\r\n\r\n        return days[num]\r\n    }\r\n\r\n    toggleMapPopup = () =>{\r\n        if (this.state.mapPopupState === ''){\r\n            this.setState({mapPopupState:'active'})\r\n        }\r\n        else this.setState({mapPopupState:''})\r\n    }\r\n    \r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log(this.props.userData)\r\n        if (this.props.userState.hasProfile){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                        <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                        \r\n                        {this.props.userState.user.id === this.props.userData.user ? (\r\n                            <button className=\"profile-redact-btn\"  onClick={this.redactProfile}>\r\n                                <img src={editIcon} alt=\"editIcon\"/>\r\n                            </button>\r\n                        ) : ('')}\r\n\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        <div className=\"info__common-info\">\r\n                            <p className=\"info__common-info__birthday\">{this.props.userData.birthday?.substring(0, 10)}</p>\r\n                            <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n                            {this.props.userData.address ?\r\n                                <div className=\"address__popup-block\">\r\n                                    <span className=\"living__place underline-link\" onClick={this.toggleMapPopup}>{this.props.userData.address.name}</span>\r\n\r\n                                    {this.state.mapPopupState === 'active' ? \r\n                                        <div className ={\"map-popup rounded\"}>\r\n                                            <button className=\"map-popup__closer-btn\" onClick={this.toggleMapPopup}>x</button>\r\n                                            <LeafletMap address={this.props.userData.address}></LeafletMap>\r\n                                        </div>\r\n                                    : ''}\r\n                                </div>\r\n                            : ''}\r\n                            <p className=\"living__cz\">{this.props.userData.citizenship}</p>\r\n\r\n                        </div>\r\n                        {this.props.userData.phone && this.props.userData.language && this.props.userData.education && this.props.userData.experience ?\r\n                            <div>\r\n                                {this.props.userData.phone.length !== 0 ? (\r\n                                <div className=\"info__contacts\">\r\n                                    <p>Контакты:</p>\r\n                                    <div className=\"info__contacts__phones\">\r\n                                        {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                                    </div>\r\n                                </div>):('')}\r\n\r\n                            {this.props.userData.language.length !== 0 ? (\r\n                            <div className=\"info__languages\">\r\n                                <p>Владение языками:</p>\r\n                                {this.props.userData.language.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                            </div>):('')}\r\n                            {this.props.userData.schedule.length !== 0 ? (\r\n                            <div className=\"info__languages\">\r\n                                <p>Желательный график:</p>\r\n                                {this.props.userData.schedule.map((schedule, index) => <a key={index} className=\"schedule-el\">{schedule.start_time + ' - ' + schedule.end_time + '(' + this.convertIntToDay(schedule.day) + ')'}</a> )}\r\n                            </div>):('')}\r\n                            {this.props.userData.education.length!== 0 ?(\r\n                                <div className=\"info__education\">\r\n                                    <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                    {this.props.userData.education.map((el, index)=>{\r\n                                        return (\r\n                                            <div className=\"education-block\" key={index}>\r\n                                                <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                                <div className=\"education-place\">\r\n                                                    <p className=\"education-place__institution\">{el.university},</p>\r\n                                                    <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                    <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>):('')}\r\n                                                \r\n                            {this.props.userData.experience.length!== 0 ? (\r\n                                <div className=\"info__work-experience\">\r\n                                    <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                    {this.props.userData.experience.map((el, index)=>{\r\n                                        return (\r\n                                            <div className=\"education-block\" key={index}>\r\n                                                <p className=\"education-name highlighted\">{el.position}</p>\r\n                                                <div className=\"education-place\">\r\n                                                    <p className=\"education-place__institution\">{el.company},</p>\r\n                                                    <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                    <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>):('')}\r\n                            </div>\r\n                         : ''}\r\n                        \r\n                        \r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user){\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-add-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )}\r\n        else\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Профиль пуст!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react'\r\nimport './side.css'\r\n\r\nexport default class Side extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side rounded\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addResume, redactResume, getUserResumes, deleteResume } from '../../../../actions/serverConnections'\r\nimport closeIcon from '../../../../img/close.svg'\r\nimport deleteIcon from '../../../../img/trash.svg'\r\nimport {checkStringInput, checkIntInput, getWorkTypeValues} from '../../../../scripts/commonScripts.js'\r\nimport industries from '../../../../jsonFiles/industries.json'\r\n\r\n\r\nclass ResumeRedactPopup extends Component {\r\n    changeVacancyName = (e) =>{\r\n        const check = checkStringInput(e.target.value, 35, 0);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onVacancyNameChange(e.target.value, this.props.resumeIndex) : \r\n        (this.props.onInputMistake(check, e.target));\r\n    }\r\n\r\n    changeGradeValue = (e) =>{\r\n        this.props.onGradeValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    changeSalary = (e) =>{\r\n        const check = checkIntInput(e.target.value, 9999999, null);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onSalaryValueChange(parseInt(e.target.value), this.props.resumeIndex):\r\n        (this.props.onInputMistake(check, e.target))\r\n        console.log(this.props.resumePlaceholder.salary)\r\n\r\n        if (e.target.value  === ''){\r\n            this.props.onSalaryValueChange(null, this.props.resumeIndex)\r\n        }\r\n    }\r\n\r\n    changeIndustryValue = (e) =>{\r\n        this.props.onIndustryValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    workTypeDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onWorkTypeDelete(this.props.resumeWorkType[e.target.parentElement.dataset.key], this.props.resumeIndex)\r\n    }\r\n\r\n    workTypeInput = (e) =>{\r\n        const value = e.target.value\r\n        e.preventDefault()\r\n        if(this.props.resumeWorkType.length > 5){\r\n\r\n        }\r\n        else if(this.props.resumeWorkType.indexOf(value) === -1){\r\n            this.props.onWorkTypeAdd(value, this.props.resumeIndex)\r\n            e.target.value = ''\r\n        }\r\n    }\r\n    \r\n\r\n    changeAboutValue = (e) =>{\r\n        this.props.onAboutValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    saveResumeFormChanges = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props.resumePlaceholder.salary)\r\n        let data = {\r\n            \"id\":this.props.cvPlaceholder.id,\r\n            \"user_id\": this.props.userData.id,\r\n            \"vacancy_name\": this.props.resumePlaceholder.vacancy_name,\r\n            \"industry\": this.props.resumePlaceholder.industry || 'Не указано',\r\n            \"grade\": this.props.resumePlaceholder.grade || 'internship',\r\n            \"salary\": this.props.resumePlaceholder.salary === null ? -1 : this.props.resumePlaceholder.salary,\r\n            \"work_type\": this.props.resumePlaceholder.work_type,\r\n            \"tags\": this.props.resumePlaceholder.tags,\r\n            \"about\": this.props.resumePlaceholder.about,\r\n            \"bg_header_color\": this.props.resumePlaceholder.bg_header_color,\r\n            \"portfolio\": [],\r\n        }\r\n        if (this.props.resumeData.cvs.length === this.props.resumeIndex || this.props.resumeData.cvs.length === 0){\r\n            this.props.onSaveResumeFormChanges(data, -1, this.props.userData.id, this.props.resumePlaceholder.vacancy_name)\r\n        }\r\n        else this.props.onSaveResumeFormChanges(data, this.props.resumeIndex, this.props.userData.id, this.props.cvPlaceholder.id)\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    tagDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onTagDelete(this.props.resumePlaceholder.tags[e.target.parentElement.dataset.key], this.props.resumeIndex)\r\n    }\r\n\r\n    tagInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.resumePlaceholder.tags.length > 10){\r\n\r\n            }\r\n            else if(this.props.resumeTags.indexOf(value) === -1){\r\n                this.props.onTagAdd(value, this.props.resumeIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    closeRedactPopup = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactResumeDeactivate(this.props.resumeIndex)\r\n    }\r\n\r\n    deleteResume = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactResumeDelete(this.props.resumeData.cvs[this.props.resumeIndex].id, this.props.userData.id)\r\n    }\r\n\r\n    changeResumeHeaderColor = (e) =>{\r\n\r\n        e.preventDefault()\r\n        this.props.onResumeHeaderColorChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={\"rounded resume-redact-block \"+this.props.resumeState} style={this.props.addStyle}>\r\n                <div className={\"resume__header white top-rounded \"+this.props.cvPlaceholder.bg_header_color}>\r\n                    <div className=\"resume__header-top\">\r\n                        <input required type=\"text\" className=\"resume__header__name bold f-large white\" placeholder=\"Название профессии\" onChange={this.changeVacancyName.bind(this)} value={this.props.resumePlaceholder.vacancy_name}/>\r\n                        <p className=\"resume__header__salary\"><input required type=\"number\" className=\"resume__header__salary-input bold f-pre white\" placeholder=\"Желаемая зарплата\" onChange={this.changeSalary.bind(this)} value={this.props.resumePlaceholder.salary === 0 || this.props.resumePlaceholder.salary === -1 || this.props.resumePlaceholder.salary === null ? '' :this.props.resumePlaceholder.salary }/><span className=\"bold f-pre\"> руб.</span></p>\r\n                    </div>\r\n                    <div className=\"resume__header-bottom\">\r\n                        <p className=\"resume__header__grade\">\r\n                            <select required className=\"white resume__header__grade-input bg-transparent\" id={\"resume-gradeInput-\"+this.props.index} name={\"resume-gradeInput-\"+this.props.index} onChange={this.changeGradeValue.bind(this)} value={this.props.resumePlaceholder.grade}>\r\n                                <option className=\"bg-light-black\" value=\"internship\">Стажер</option>\r\n                                <option className=\"bg-light-black\" value=\"junior\">Начинающий специалист</option>\r\n                                <option className=\"bg-light-black\" value=\"middle\">Специалист</option>\r\n                                <option className=\"bg-light-black\" value=\"senior\">Главный специалист</option>\r\n                                <option className=\"bg-light-black\" value=\"director\">Управляющий отдела</option>\r\n                                <option className=\"bg-light-black\" value=\"senior-director\">Генеральный директор</option>\r\n                            </select>\r\n                        </p>\r\n                        <ul className=\"resume__header-color\">\r\n                            <button className={\"resume__header-color-el bg-light-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-light-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-light-black\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-gray \" + (this.props.cvPlaceholder.bg_header_color === 'bg-blue-gray' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-blue-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-blue-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-blue-black\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-gray \" + (this.props.cvPlaceholder.bg_header_color === 'bg-violet-gray' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-violet-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-violet-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-violet-black\"/>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"resume-close-btn\"  onClick={this.closeRedactPopup}>\r\n                    <img src={closeIcon} alt=\"closeIcon\"/>\r\n                </button>\r\n                {this.props.resumeIndex !== this.props.resumeData.cvs.length ?(\r\n                    <button className=\"resume-delete-btn\"  onClick={this.deleteResume}>\r\n                        <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                    </button>\r\n                ):('')}\r\n                \r\n\r\n                <div className=\"resume__main-info rounded\">\r\n                    <p className=\"resume__industry f-pre\">\r\n                        <span className=\"semi f-medium\">Отрасль: </span>\r\n                        <select required id={\"resume-industryInput-\"+this.props.index} name={\"resume-industryInput-\"+this.props.index} onChange={this.changeIndustryValue.bind(this)} value={this.props.resumePlaceholder.industry}>\r\n                            {industries.map((item)=>{\r\n                                return <option value={item.name}>{item.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </p>\r\n\r\n                    <div className=\"resume__work-type-block input-list\">\r\n                        <p className=\"input-label semi f-medium\">Типы работ:</p>\r\n\r\n                        <ul className=\"resume__work-type-list\">\r\n                            {this.props.resumeWorkType.map((item, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{getWorkTypeValues(item)}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.workTypeDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"resume__work-type input-list\">\r\n                            Выберите, чтобы добавить...\r\n                            <select className=\"select-input\" name=\"workTypeInput\" id=\"workTypeInput\" onChange={this.workTypeInput.bind(this)}>\r\n                                <option value=\"part-day\">неполный день</option>\r\n                                <option value=\"full-day\">полный день</option>\r\n                                <option value=\"part-time\">частичная занятность</option>\r\n                                <option value=\"full-time\">полная занятность</option>\r\n                                <option value=\"volunteer\">волонтерство</option>\r\n                                <option value=\"one-time-job\">разовое задание</option>\r\n                                <option value=\"flexible-schedule\">гибкий график</option>\r\n                                <option value=\"shift-schedule\">сменный график</option>\r\n                                <option value=\"shift-method\">вахтовый метод</option>\r\n                                <option value=\"remote\">удаленная работа</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <p className=\"resume__about border-black rounded\"><textarea className=\"resume__about-input\" name=\"\" id=\"\" placeholder=\"Описание резюме\" onChange={this.changeAboutValue.bind(this)} value={this.props.resumePlaceholder.about}></textarea></p>\r\n\r\n                    {/* <ul className=\"resume__portfolio\">\r\n                        <li className=\"resume__portfolio-el\">\r\n                            <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                <img src=\"\" alt=\"\"/>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"resume__portfolio-el\">\r\n                            <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                <img src=\"\" alt=\"\"/>\r\n                            </a>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div className=\"resume__tags-block input-list\">\r\n                        <ul className=\"resume__tags-list\">\r\n                            {this.props.resumeTags.map((tag, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{tag}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.tagDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <input className=\"resume__tags-input input-list__input-block\" type=\"text\" onKeyDown={this.tagInput.bind(this)} placeholder=\"Введите тег и нажмите пробел...\"/>\r\n                    </div>\r\n                    \r\n                    <input type=\"submit\" className=\"form-submit-btn f-large rounded bold\" onClick={this.saveResumeFormChanges} value=\"Сохранить изменения\"/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    let cvPlaceholder\r\n    if (ownProps.index === state.cvs.cvs.length) {cvPlaceholder = state.cvs.newCv}\r\n    else {cvPlaceholder = state.cvs.placeholder[ownProps.index]}\r\n    return {\r\n        userData: state.user.user,\r\n        resumeData: state.cvs,\r\n        resumePlaceholder: cvPlaceholder,\r\n        resumeTags: cvPlaceholder.tags,\r\n        resumeWorkType:cvPlaceholder.work_type,\r\n        resumeState: cvPlaceholder.state,\r\n        resumeIndex: ownProps.index,\r\n        cvPlaceholder:cvPlaceholder\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddResume: (resumeData) => {\r\n            dispatch(addResume(resumeData))\r\n            .then((data)=>{\r\n                if (data.newCvId !== null && data.newCvId!=='404'){\r\n                }\r\n            })\r\n        },\r\n        onPopupRedactResumeDeactivate: (index) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DEACTIVATE', payload:index})\r\n        },\r\n        onPopupRedactResumeDelete: (index, userId) => {\r\n            dispatch(deleteResume(index))\r\n            .then(data => {\r\n                dispatch(getUserResumes(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onResumeHeaderColorChange: (color, resumeIndex) =>{\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_COLOR', payload:{'color': color, 'index': resumeIndex}})\r\n        },\r\n        onTagAdd: (tag, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ADD_TAG', payload:{'tag': tag, 'index': resumeIndex}})\r\n        },\r\n        onTagDelete: (tagId, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DELETE_TAG', payload:{'tagId': tagId, 'index': resumeIndex}})\r\n        },\r\n        onWorkTypeAdd: (workType, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ADD_WORK_TYPE', payload:{'workType': workType, 'index': resumeIndex}})\r\n        },\r\n        onWorkTypeDelete: (workTypeId, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DELETE_WORK_TYPE', payload:{'workTypeId': workTypeId, 'index': resumeIndex}})\r\n        },\r\n        onVacancyNameChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_VACANCY_NAME', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onGradeValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_GRADE_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onIndustryValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_INDUSTRY_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onAboutValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_ABOUT_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onSalaryValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_SALARY_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onSaveResumeFormChanges:(data, resumeIndex, userId, resumeId) => {\r\n            dispatch(resumeIndex===-1?(addResume(data)):(redactResume(data, resumeId)))\r\n            .then(data => dispatch({type : 'POPUP_REDACT_RESUME_DEACTIVATE', payload:resumeIndex}))\r\n            .then(data => {\r\n                dispatch(getUserResumes(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onInputMistake:(mistakeStr, el) => {\r\n            console.log(mistakeStr)\r\n        }\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumeRedactPopup);\r\n","import React, { Component } from 'react'\r\nimport {getResume} from '../../actions/serverConnections'\r\nimport {getGradeValues, getWorkTypeValues} from '../../scripts/commonScripts'\r\nimport { connect } from 'react-redux'\r\nimport './resumePopup.css'\r\n\r\nclass ResumePopup extends Component {\r\n    componentDidMount(){\r\n        this.props.onGetResume(this.props.id)\r\n    }\r\n\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onCloseResumePopup();\r\n    }\r\n\r\n    render() {\r\n        if (Object.keys(this.props.openedResume).length !== 0)\r\n        return (\r\n            <div className=\"blur-box active\" onClick={this.popupClose.bind(this)}>\r\n                <div className=\"resume resumes-list-el popup-wrapper rounded vacancy-info\">\r\n                    <section className=\"resume-main\">\r\n                        <div className={\"resume__header white top-rounded \" + this.props.openedResume.bg_header_color}>\r\n                            <div className=\"resume__header-top\">\r\n                                <h2 className=\"resume__header__name bold f-large\">{this.props.openedResume.vacancy_name}</h2>\r\n                                <p>\r\n                                    {this.props.openedResume.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                    <span className=\"resume__header__salary bold f-medium\">{this.props.openedResume.salary} руб.</span>}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"resume__header-bottom\">\r\n                                <p className=\"resume__header__grade\">{getGradeValues(this.props.openedResume.grade)}</p>\r\n\r\n                                <p className=\"resume__publication-date sup\">{this.props.openedResume.pub_date.slice(0,10)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"resume__main-info bottom-rounded full-width\">\r\n                            <p className=\"resume__industry f-pre\">{this.props.openedResume.industry}</p>\r\n\r\n                            <p className=\"resume__work-type\">{this.props.openedResume.work_type.map((el)=>getWorkTypeValues(el)).join(', ')}</p>\r\n\r\n                            <p>{this.props.openedResume.about}</p>\r\n                            \r\n                            <ul className=\"resume__tags-list\">\r\n                                {this.props.openedResume.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button className=\"close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        else return ''\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    openedResume:state.buf.openedResume,\r\n    id:ownProps.id\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onGetResume: (id) => {\r\n        dispatch(getResume(id))\r\n    },\r\n    onCloseResumePopup: () => {\r\n        dispatch({type : 'CLOSE_RESUME_POPUP', payload:null})\r\n\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumePopup);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {getWorkTypeValues, getGradeValues} from '../../../scripts/commonScripts'\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport ResumeRedactPopup from './ResumeRedactPopup/ResumeRedactPopup'\r\nimport editIcon from '../../../img/edit.svg'\r\nimport ResumePopup from '../../ResumePopup/ResumePopup'\r\n\r\nclass Resumes extends Component {\r\n    addResume = (e) => {\r\n        return fetch('../new_cv.json', {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            data.user = this.props.userData.user\r\n            return data\r\n        })\r\n        .then (data => {\r\n            this.props.onPopupNewResumeActivate(data)\r\n            // return this.props.onAddResume(data, this.props.onPopupRedactResumeActivate)\r\n        })\r\n    }\r\n\r\n    redactResume = (index) =>{\r\n        this.props.onPopupRedactResumeActivate(index)\r\n    }\r\n\r\n    openResumeInfo = (id) =>{\r\n        this.props.onOpenResumeInfo(id)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"resumes-block\">\r\n                {this.props.userState.logged ? (this.props.cvData.cvs.length !== 0 ?(<h2>Ваши Резюме:</h2>):('')):(this.props.cvData.cvs.length !== 0 ?(<h2>Резюме:</h2>):(''))}\r\n                <ul className=\"resumes-list\">\r\n                    {this.props.cvData.cvs.length !== 0 ? \r\n                    (this.props.cvData.cvs.map((el, index)=>\r\n                            (\r\n                            <li key={index} className=\"resume resumes-list-el rounded\">\r\n                                {el.state==='active' ? (<ResumeRedactPopup index={index}></ResumeRedactPopup>) : ('')}\r\n                                <section className={\"resume-main \" + (el.state === 'active' ? ('muted'):(''))}>\r\n                                    <div className={\"resume__header white top-rounded \" + el.bg_header_color}>\r\n                                        <div className=\"resume__header-top\">\r\n                                            <h2 className=\"resume__header__name bold f-large\" onClick={this.openResumeInfo.bind(this, el.id)}>{el.vacancy_name}</h2>\r\n                                            {el.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                            <span className=\"resume__header__salary bold f-medium\">{el.salary} руб.</span>}\r\n                                        </div>\r\n                                        <div className=\"resume__header-bottom\">\r\n                                            <p className=\"resume__header__grade\">{getGradeValues(el.grade)}</p>\r\n                                            <p className=\"resume__publication-date sup\">{el.pub_date.slice(0,10)}</p>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"resume__main-info rounded\">\r\n                                        <p className=\"resume__industry f-pre\">{el.industry}</p>\r\n            \r\n                                        <p className=\"resume__work-type\">{el.work_type.map((item)=>getWorkTypeValues(item)).join(', ')}</p>\r\n            \r\n                                        <p className=\"resume__about\">{el.about}</p>\r\n            \r\n                                        {/* <ul className=\"resume__portfolio\">\r\n                                            <li className=\"resume__portfolio-el\">\r\n                                                <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                                    <img src=\"\" alt=\"\"/>\r\n                                                </a>\r\n                                            </li>\r\n            \r\n                                            <li className=\"resume__portfolio-el\">\r\n                                                <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                                    <img src=\"\" alt=\"\"/>\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul> */}\r\n            \r\n                                        <ul className=\"resume__tags-list\">\r\n                                            {el.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user?(\r\n                                    <button className=\"resume-redact-btn\"  onClick={this.redactResume.bind(this, index)}>\r\n                                        <img src={editIcon} alt=\"editIcon\"/>\r\n                                    </button>\r\n                                ):('')}\r\n                                \r\n                            </li>\r\n                            )\r\n                        )\r\n                    ):('')}\r\n\r\n                    {this.props.cvData.newCv.length!==0 ? (this.props.cvData.newCv.state==='active' ? (<ResumeRedactPopup index={this.props.cvData.cvs.length}></ResumeRedactPopup>) : ('')) : ('')}\r\n                </ul>\r\n                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user && this.props.cvData.newCv.state!=='active' ? (\r\n                    <div className=\"resume-add\">\r\n                        <p>Добавить резюме:</p>\r\n                        <button className=\"resume-add-btn\" onClick={this.addResume.bind(this, 0)}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button>\r\n                    </div>)\r\n                :('')}\r\n                {this.props.cvData.openedResumeId !== -1 ? <ResumePopup id={this.props.cvData.openedResumeId}></ResumePopup> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        cvData: state.cvs,\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactResumeActivate: (resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ACTIVATE', payload:resumeIndex})\r\n        },\r\n        onPopupNewResumeActivate: (newCvData) => {\r\n            dispatch({type : 'POPUP_NEW_RESUME_ACTIVATE', payload:newCvData})\r\n        },\r\n        onOpenResumeInfo: (id) =>{\r\n            dispatch({type : 'OPEN_RESUME_POPUP', payload:id})\r\n        }\r\n\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Resumes);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Cropper from \"react-cropper\";\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport closeIcon from '../../../img/close.svg';\r\nimport uploadIcon from '../../../img/upload.svg';\r\n\r\n\r\nclass ImageCropper extends Component {\r\n    cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        this.props.onDeactivateCropper()\r\n        console.log(file)\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                this.props.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        console.log(el)\r\n        if (el !== \"\" && el){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + this.props.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        this.props.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        this.props.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getCropperData = () => {\r\n        this.props.onDeactivateCropper()\r\n\r\n        if (typeof this.props.cropperData.instance !== \"undefined\") {\r\n          const croppedImage = this.dataURLtoBlob(this.props.cropperData.instance.getCroppedCanvas().toDataURL());\r\n          this.loadImageToFirebase(croppedImage, this.props.cropperData.imageType)\r\n        }\r\n    };\r\n\r\n    dataURLtoBlob = (dataurl) => {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n\r\n    loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        this.loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    deactivateCropper = () =>{\r\n        this.props.onDeactivateCropper()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.cropperFile){\r\n            if(this.props.cropperData.imageType === 'avatar'){\r\n                this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54')\r\n            }\r\n            else this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-background.png?alt=media&token=1c91f99c-c236-4a28-b291-bfc2263df45b')\r\n        }\r\n\r\n\r\n        return this.props.cropperActive && this.props.cropperFile ? (\r\n            <div className=\"blur-box active\" >\r\n                <div className=\"popup-wrapper rounded cropper\">\r\n                    <div className=\"cropper-block\">\r\n                        {this.props.cropperData.imageType === 'avatar' ?\r\n                        <div className=\"cropper-placeholder\">\r\n                            {console.log(this.props.ownProps.background)}\r\n                            <div className=\"top-rounded main-placeholder__personal\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                                <div className=\"cropper__img-preview avatar\"></div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"cropper-placeholder\" >\r\n                            <div className=\"top-rounded cropper__img-preview personal-background\" style={{width:'720px', height: '160px', overflow:'hidden'}}>\r\n\r\n                            </div>\r\n                            <img className=\"main-placeholder__personal__avatar\" src={this.props.ownProps.avatar} alt=\"\"/>\r\n\r\n                        </div>\r\n                        }\r\n                        \r\n\r\n                        <Cropper\r\n                        style={{ width: \"100%\", height: \"300px\", backgroundColor:\"#fff\" }}\r\n                        aspectRatio={this.props.cropperMaxWidth / this.props.cropperMaxHeight}\r\n\r\n                        preview=\".cropper__img-preview\"\r\n                        src={this.props.cropperFile}\r\n                        viewMode={1}\r\n                        dragMode='move'\r\n                        guides={true}\r\n                        minCropBoxHeight={10}\r\n                        minCropBoxWidth={10}\r\n                        background={false}\r\n                        responsive={true}\r\n                        autoCropArea={1}\r\n                        checkOrientation={false} \r\n                        onInitialized={(instance) => {\r\n                            this.props.setCropperInstance(instance);\r\n                        }}\r\n                        />\r\n                        \r\n                        <div className=\"cropper-controls\">\r\n                            <button className=\"cropper-upload-btn\" onClick={this.getCropperData}>\r\n                                <img src={uploadIcon} alt=\"uploadIcon\"/>\r\n                            </button>\r\n\r\n                            <button className=\"cropper-close-btn\" onClick={this.deactivateCropper}>\r\n                                <img src={closeIcon} alt=\"closeIcon\"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        ) : ('')\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        cropperMaxWidth:state.profile.buf.cropper.maxWidth,\r\n        cropperMaxHeight:state.profile.buf.cropper.maxHeight,\r\n        cropperFile:state.profile.buf.cropper.file,\r\n        cropperActive:state.profile.buf.cropper.state,\r\n        cropperData:state.profile.buf.cropper,\r\n        userState: state.user,\r\n        ownProps:ownProps\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        setCropperInstance: (instance) => {\r\n            dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onSetCropperFile:(file) => {\r\n            dispatch({type : 'SET_CROPPER_FILE', payload:file})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCropper)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport ImageCropper from \"./ImageCropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\nexport class MainPlaceholder extends Component {\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-placeholder rounded\">\r\n                <div className=\"main-placeholder__personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                    <img className=\"main-placeholder__personal__avatar\" src={this.checkOnEmpty(this.props.avatarPhoto, placeholderAvatar)} alt=\"аватар\"/>\r\n                </div>\r\n                <section className=\"main-placeholder__info\">\r\n                    <div className=\"main-placeholder__info-wrapper\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userName}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userDescription}</p>\r\n                        <div className=\"info__common-info\">\r\n                            \r\n                            <p className={'info__common-info__birthday ' + this.props.userBirthday?.substring(0, 10)}>{this.props.userBirthday?.substring(0, 10)}</p>\r\n                            <p className={'info__common-info__gender ' + this.props.userGender}></p>\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__cz\">{this.props.userCz}</p>\r\n                                <p className=\"living__place\">{this.props.userAddress ? this.props.userAddress.name:''}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"info__contacts__phones\">\r\n                            <p>Контакты:</p>\r\n                            {this.props.userPhones?.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                        </div>\r\n\r\n                        <div className=\"info__languages\">\r\n                            <p>Владение языками:</p>\r\n                            {this.props.userLanguages?.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                        </div>\r\n                        \r\n                        {this.props.userEducation.length!== 0 ?(\r\n                            <div className=\"info__education\">\r\n                                <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                {this.props.userEducation?.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.university},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                                               \r\n                        {this.props.userExperience.length!== 0 ? (\r\n                            <div className=\"info__work-experience\">\r\n                                <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                {this.props.userExperience.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.position}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.company},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                    </div>\r\n                </section>\r\n                \r\n                <ImageCropper avatar={this.props.avatarPhoto} background={this.props.personalBackground}></ImageCropper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholderData: state.profile.placeholder,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        userName: state.profile.placeholder.userName,\r\n        avatarPhoto:state.profile.placeholder.photo_url,\r\n        personalBackground:state.profile.placeholder.profile_background,\r\n        userDescription: state.profile.placeholder.description,\r\n        userBirthday: state.profile.placeholder.birthday,\r\n        userGender:state.profile.placeholder.gender,\r\n        userAddress:state.profile.address,\r\n        userCz:state.profile.placeholder.citizenship,\r\n        userPhones:state.profile.userPhones,\r\n        userLanguages: state.profile.language,\r\n        userEducation:state.profile.education,\r\n        userExperience:state.profile.experience,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onUpdateUserName: (userName) => {\r\n        dispatch({type : 'PLACEHOLDER_UPDATE_USER_NAME', payload:userName})\r\n      },\r\n      setCropperInstance: (instance) => {\r\n        dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPlaceholder)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\nimport {checkStringInput} from '../../../../scripts/commonScripts.js'\r\n\r\n\r\nconst RedactPopupSectionBaseInfo = (state, placeholderData, LeafletMapData, profileState, onUsernameChange,onSaveNewAddress, onDescriptionChange, onBDayChange, onCzChange, onCityChange, onChangeGenderToMale, onChangeGenderToFemale, onLanguageDelete, onLanguageGradeChange, onLanguageAdd, onPhoneDelete, onPhoneAdd) => {\r\n    const changeUserNameValue = (e) => {\r\n        let input = e.target.value\r\n        state.onUsernameChange(input)\r\n    }\r\n\r\n    const convertIntToDay = (num) =>{\r\n        const days = [\r\n            'Понедельник',\r\n            'Вторник',\r\n            'Среда',\r\n            'Четверг',\r\n            'Пятница',\r\n            'Суббота',\r\n            'Воскресенье',\r\n        ]\r\n\r\n        return days[num]\r\n    }\r\n\r\n    const changeUserDescriptionValue = (e) => {\r\n        state.onDescriptionChange(e.target.value)\r\n    }\r\n\r\n    const changeUserBDay = (e) => {\r\n        state.onBDayChange(e.target.value)\r\n    }\r\n\r\n    const changeCzValue = (e) => {\r\n        state.onCzChange(e.target.value)\r\n    }\r\n\r\n    const saveNewAddress = (e) => {\r\n        state.onSaveNewAddress({\r\n            name:state.LeafletMapData.name,\r\n            lat:state.LeafletMapData.lat,\r\n            lng:state.LeafletMapData.lng\r\n\r\n        })\r\n    }\r\n\r\n    const changeGender = (e) => {\r\n        if (e.target.value === 'male'){\r\n          state.onChangeGenderToMale();\r\n        }\r\n        else if (e.target.value === 'female'){\r\n            state.onChangeGenderToFemale();\r\n        }\r\n    }\r\n\r\n    const deleteLanguage = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onLanguageDelete(state.profileState.language[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const languageGradeChange = (e) =>{\r\n        state.onLanguageGradeChange(e.target.value)\r\n    }\r\n\r\n    const languageInput = (e) =>{\r\n        const value = e.target.value.split(' ').join('')\r\n\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            let newLanguage = {\r\n                \"grade\": state.profileState.buf.languageGrade,\r\n                \"language\": value\r\n            }\r\n            console.log(state.profileState.language.filter((el) => el.language === newLanguage.language))\r\n            if(state.profileState.language.filter((el) => el.language === newLanguage.language).length === 0){\r\n                state.onLanguageAdd(newLanguage)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    const addLanguage = (e) => {\r\n        e.preventDefault()\r\n        \r\n        const value = e.target.languageInput.value.split(' ').join('')\r\n        let newLanguage = {\r\n            \"grade\": state.profileState.buf.languageGrade,\r\n            \"language\": value\r\n        }\r\n        console.log(state.profileState.language.filter((el) => el.language === newLanguage.language))\r\n        if(state.profileState.language.filter((el) => el.language === newLanguage.language).length === 0){\r\n            state.onLanguageAdd(newLanguage)\r\n            e.target.languageInput.value = ''\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const deleteSchedule = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onScheduleDelete(state.profileState.schedule[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const scheduleDayChange = (e) =>{\r\n        state.onScheduleDayChange(e.target.value)\r\n    }\r\n\r\n    const scheduleEndTimeChange = (e) =>{\r\n        state.onScheduleEndTimeChange(e.target.value)\r\n    }\r\n\r\n    const scheduleStartTimeChange = (e) =>{\r\n        state.onScheduleStartTimeChange(e.target.value)\r\n    }\r\n\r\n    const addSchedule = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let newSchedule = {\r\n            \"start_time\": state.profileState.buf.scheduleStartTime,\r\n            \"end_time\": state.profileState.buf.scheduleEndTime,\r\n            \"day\": parseInt(state.profileState.buf.scheduleDay)\r\n        }\r\n        console.log(state.profileState.schedule.filter((el) => el.day === newSchedule.day))\r\n        if(state.profileState.schedule.filter((el) => el.day === newSchedule.day).length === 0){\r\n            state.onScheduleAdd(newSchedule)\r\n        }\r\n    }\r\n    \r\n    \r\n    const deletePhone = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onPhoneDelete(state.profileState.userPhones[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const addPhone = (e) => {\r\n        e.preventDefault()\r\n        const value = e.target.phonesInput.value.split(' ').join('')\r\n\r\n        const check = checkStringInput(value, 100, 3, /^([+]?[0-9\\s-\\(\\)]{3,25})*$/i);\r\n\r\n        check === \"pass\" ? \r\n        state.onPhoneAdd(value) \r\n        : state.onInputMistake(check);\r\n\r\n        e.target.phonesInput.value = ''\r\n    }\r\n\r\n    const phoneInput = (e) =>{\r\n        const value = e.target.value.split(' ').join('')\r\n\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(state.profileState.userPhones.length > 2){\r\n                \r\n            }\r\n            else if(state.profileState.userPhones.indexOf(value) === -1){\r\n                const check = checkStringInput(value, 100, 0, /^([+]?[0-9\\s-\\(\\)]{3,25})*$/i);\r\n\r\n                check === \"pass\" ? \r\n                state.onPhoneAdd(value) \r\n                : state.onInputMistake(check);\r\n\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"popup__input-block\">\r\n                <div className=\"input-field underline-anim\">\r\n                    <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \" onChange={changeUserNameValue} value={placeholderData.userName}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя/никнейм</label>\r\n                </div>\r\n\r\n                <div className=\"gender-radio-box\">\r\n                    <p>Пол:</p>\r\n                    <input className=\"gender-input\" type=\"radio\" id=\"gender-male\" name=\"gender-radio\" value=\"male\" onChange={changeGender}/>\r\n                    <input className=\"gender-input\" type=\"radio\" id=\"gender-female\" name=\"gender-radio\" value=\"female\" onChange={changeGender}/>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"gender-male\">Мужской</label>\r\n                        <label htmlFor=\"gender-female\">Женский</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"textarea-field\">\r\n                    <p>Описание профиля</p>\r\n                    <textarea className=\"popup__textarea-input\" name=\"descriptionInput\" id=\"descriptionInput\" onChange={changeUserDescriptionValue} value={placeholderData.description}></textarea>\r\n                </div>\r\n                \r\n                <div className=\"input-field underlined\">\r\n                    <input className=\"popup__text-input\" id=\"birthdayInput\" name=\"birthdayInput\" type=\"date\" placeholder=\" \" onChange={changeUserBDay} value={placeholderData.birthday}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"birthdayInput\">Дата рождения</label>\r\n                </div>\r\n\r\n                <div className=\"input-field underlined\">\r\n                    <input className=\"popup__text-input\" id=\"czInput\" name=\"czInput\" type=\"text\" placeholder=\" \" onChange={changeCzValue} value={placeholderData.cz}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"czInput\">Гражданство</label>\r\n                </div>\r\n                <div className=\"address-input\">\r\n                    <LeafletMap address={state.profileState.address}></LeafletMap>\r\n                    <button className=\"highlighted sup-btn\" onClick={saveNewAddress}>Сохранить</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Телефоны</p>\r\n                \r\n                {state.profileState.userPhones.map((phone, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{phone}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deletePhone}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <form className=\"flex\" onSubmit={addPhone}>\r\n                    <input className=\"popup__text-input\" type=\"text\" id=\"phonesInput\" name=\"phonesInput\" placeholder=\"Нажмите пробел после введения номера...\" onKeyDown={phoneInput} />\r\n                    <button className=\"sup-btn-circled\">+</button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Владение языками</p>\r\n\r\n                {state.profileState.language?.map((el, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{el.language + ' - ' + el.grade}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deleteLanguage}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <form className=\"popup__select-text-input\" onSubmit={addLanguage}>\r\n                    <input className=\"popup__text-input\" type=\"text\" id=\"languageInput\" name=\"languageInput\" placeholder=\"Нажмите пробел после введения языка...\" onKeyDown={languageInput}/>\r\n                    <select name=\"languageGradeInput\" id=\"languageGradeInput\" onChange={languageGradeChange} value={state.profileState.buf.languageGrade}>\r\n                        <option value=\"A1\">A1 - начинающий (Beginner)</option>\r\n                        <option value=\"A2\">A2 - предпродвинутый (Pre-Intermediate)</option>\r\n                        <option value=\"B1\">B1 - продвинутый (Intermediate)</option>\r\n                        <option value=\"B2\">B2 - предпрофессиональный (Upper-Intermediate)</option>\r\n                        <option value=\"C1\">C1 - Профессиональный (Advanced)</option>\r\n                        <option value=\"C2\">C2 - Владение в совершенстве (Mastery)</option>\r\n                    </select>\r\n                    <button className=\"sup-btn-circled\">+</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Желательный график работы</p>\r\n\r\n                {state.profileState.schedule.map((el, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{el.start_time + ' - ' + el.end_time + '(' + convertIntToDay(el.day) + ')'}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deleteSchedule}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <form className=\"popup__select-text-input\" onSubmit={addSchedule}>\r\n                    <select name=\"scheduleStartTimeInput\" id=\"scheduleStartTimeInput\" onChange={scheduleStartTimeChange} value={state.profileState.buf.scheduleStartTime}>\r\n                        <option value=\"00:00\">00:00</option>\r\n                        <option value=\"00:30\">00:30</option>\r\n                        <option value=\"01:00\">01:00</option>\r\n                        <option value=\"01:30\">01:30</option>\r\n                        <option value=\"02:00\">02:00</option>\r\n                        <option value=\"02:30\">02:30</option>\r\n                        <option value=\"03:00\">03:00</option>\r\n                        <option value=\"03:30\">03:30</option>\r\n                        <option value=\"04:00\">04:00</option>\r\n                        <option value=\"04:30\">04:30</option>\r\n                        <option value=\"05:00\">05:00</option>\r\n                        <option value=\"05:30\">05:30</option>\r\n                        <option value=\"06:00\">06:00</option>\r\n                        <option value=\"06:30\">06:30</option>\r\n                        <option value=\"07:00\">07:00</option>\r\n                        <option value=\"07:30\">07:30</option>\r\n                        <option value=\"08:00\">08:00</option>\r\n                        <option value=\"08:30\">08:30</option>\r\n                        <option value=\"09:00\">09:00</option>\r\n                        <option value=\"09:30\">09:30</option>\r\n                        <option value=\"10:00\">10:00</option>\r\n                        <option value=\"10:30\">10:30</option>\r\n                        <option value=\"11:00\">11:00</option>\r\n                        <option value=\"11:30\">11:30</option>\r\n                        <option value=\"12:00\">12:00</option>\r\n                        <option value=\"12:30\">12:30</option>\r\n                        <option value=\"13:00\">13:00</option>\r\n                        <option value=\"13:30\">13:30</option>\r\n                        <option value=\"14:00\">14:00</option>\r\n                        <option value=\"14:30\">14:30</option>\r\n                        <option value=\"15:00\">15:00</option>\r\n                        <option value=\"15:30\">15:30</option>\r\n                        <option value=\"16:00\">16:00</option>\r\n                        <option value=\"16:30\">16:30</option>\r\n                        <option value=\"17:00\">17:00</option>\r\n                        <option value=\"17:30\">17:30</option>\r\n                        <option value=\"18:00\">18:00</option>\r\n                        <option value=\"18:30\">18:30</option>\r\n                        <option value=\"19:00\">19:00</option>\r\n                        <option value=\"19:30\">19:30</option>\r\n                        <option value=\"20:00\">20:00</option>\r\n                        <option value=\"20:30\">20:30</option>\r\n                        <option value=\"21:00\">21:00</option>\r\n                        <option value=\"21:30\">21:30</option>\r\n                        <option value=\"22:00\">22:00</option>\r\n                        <option value=\"22:30\">22:30</option>\r\n                        <option value=\"23:00\">23:00</option>\r\n                        <option value=\"23:30\">23:30</option>\r\n                    </select>\r\n                    <select name=\"scheduleEndTimeInput\" id=\"scheduleEndTimeInput\" onChange={scheduleEndTimeChange} value={state.profileState.buf.scheduleEndTime}>\r\n                        <option value=\"00:00\">00:00</option>\r\n                        <option value=\"00:30\">00:30</option>\r\n                        <option value=\"01:00\">01:00</option>\r\n                        <option value=\"01:30\">01:30</option>\r\n                        <option value=\"02:00\">02:00</option>\r\n                        <option value=\"02:30\">02:30</option>\r\n                        <option value=\"03:00\">03:00</option>\r\n                        <option value=\"03:30\">03:30</option>\r\n                        <option value=\"04:00\">04:00</option>\r\n                        <option value=\"04:30\">04:30</option>\r\n                        <option value=\"05:00\">05:00</option>\r\n                        <option value=\"05:30\">05:30</option>\r\n                        <option value=\"06:00\">06:00</option>\r\n                        <option value=\"06:30\">06:30</option>\r\n                        <option value=\"07:00\">07:00</option>\r\n                        <option value=\"07:30\">07:30</option>\r\n                        <option value=\"08:00\">08:00</option>\r\n                        <option value=\"08:30\">08:30</option>\r\n                        <option value=\"09:00\">09:00</option>\r\n                        <option value=\"09:30\">09:30</option>\r\n                        <option value=\"10:00\">10:00</option>\r\n                        <option value=\"10:30\">10:30</option>\r\n                        <option value=\"11:00\">11:00</option>\r\n                        <option value=\"11:30\">11:30</option>\r\n                        <option value=\"12:00\">12:00</option>\r\n                        <option value=\"12:30\">12:30</option>\r\n                        <option value=\"13:00\">13:00</option>\r\n                        <option value=\"13:30\">13:30</option>\r\n                        <option value=\"14:00\">14:00</option>\r\n                        <option value=\"14:30\">14:30</option>\r\n                        <option value=\"15:00\">15:00</option>\r\n                        <option value=\"15:30\">15:30</option>\r\n                        <option value=\"16:00\">16:00</option>\r\n                        <option value=\"16:30\">16:30</option>\r\n                        <option value=\"17:00\">17:00</option>\r\n                        <option value=\"17:30\">17:30</option>\r\n                        <option value=\"18:00\">18:00</option>\r\n                        <option value=\"18:30\">18:30</option>\r\n                        <option value=\"19:00\">19:00</option>\r\n                        <option value=\"19:30\">19:30</option>\r\n                        <option value=\"20:00\">20:00</option>\r\n                        <option value=\"20:30\">20:30</option>\r\n                        <option value=\"21:00\">21:00</option>\r\n                        <option value=\"21:30\">21:30</option>\r\n                        <option value=\"22:00\">22:00</option>\r\n                        <option value=\"22:30\">22:30</option>\r\n                        <option value=\"23:00\">23:00</option>\r\n                        <option value=\"23:30\">23:30</option>\r\n                    </select>\r\n                    <select name=\"scheduleDayInput\" id=\"scheduleDayInput\" onChange={scheduleDayChange} value={state.profileState.buf.scheduleDay}>\r\n                        <option value=\"0\">Понедельник</option>\r\n                        <option value=\"1\">Вторник</option>\r\n                        <option value=\"2\">Среда</option>\r\n                        <option value=\"3\">Четверг</option>\r\n                        <option value=\"4\">Пятница</option>\r\n                        <option value=\"5\">Суббота</option>\r\n                        <option value=\"6\">Воскресенье</option>\r\n                    </select>\r\n                    <button className=\"sup-btn-circled\">+</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onUsernameChange: (username)=>{\r\n            dispatch({type : 'POPUP_REDACT_USERNAME_CHANGE', payload:username})\r\n        },\r\n        onDescriptionChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_DESCRIPTION_CHANGE', payload:text})\r\n        },\r\n        onBDayChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_BIRTHDAY_CHANGE', payload:text})\r\n        },\r\n        onCzChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_CITIZENSHIP_CHANGE', payload:text})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADDRESS_NAME_CHANGE', payload:text})\r\n        }, \r\n        onSaveNewAddress:(address)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADDRESS_CHANGE', payload:address})\r\n        },       \r\n        onChangeGenderToMale: () => {\r\n            dispatch({type : 'CHANGE_GENDER_TO_MALE', payload:null})\r\n        },\r\n        onChangeGenderToFemale: () => {\r\n            dispatch({type : 'CHANGE_GENDER_TO_FEMALE', payload:null})\r\n        },\r\n        onLanguageAdd: (language)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_LANGUAGE', payload:language})\r\n        },\r\n        onLanguageGradeChange: (grade)=>{\r\n            dispatch({type : 'POPUP_REDACT_LANGUAGE_GRADE_CHANGE', payload:grade})\r\n        },\r\n        onLanguageDelete: (languageId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_LANGUAGE', payload:languageId})\r\n        },\r\n        onScheduleAdd: (schedule)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_SCHEDULE', payload:schedule})\r\n        },\r\n        onScheduleDayChange: (day)=>{\r\n            dispatch({type : 'POPUP_REDACT_SCHEDULE_DAY_CHANGE', payload:day})\r\n        },\r\n        onScheduleStartTimeChange: (time)=>{\r\n            dispatch({type : 'POPUP_REDACT_SCHEDULE_START_TIME_CHANGE', payload:time})\r\n        },\r\n        onScheduleEndTimeChange: (time)=>{\r\n            dispatch({type : 'POPUP_REDACT_SCHEDULE_END_TIME_CHANGE', payload:time})\r\n        },\r\n        onScheduleDelete: (scheduleId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_SCHEDULE', payload:scheduleId})\r\n        },\r\n        onPhoneAdd: (phone)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_PHONE', payload:phone})\r\n        },\r\n        onPhoneDelete: (phoneId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_PHONE', payload:phoneId})\r\n        },\r\n        onInputMistake:(mistakeStr) => {\r\n            console.log(mistakeStr)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionBaseInfo)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst RedactPopupSectionExperience = (state, profileState, onExperienceAdd, onExperienceDelete, onEducationAdd, onEducationDelete) => {\r\n    const experienceAdd = (e) =>{\r\n        e.preventDefault();\r\n        console.log(e.target)\r\n        state.profileState.buf.educationBlocksAmount++\r\n        const newExperience = {\r\n            \"position\": e.target.positionInput.value,\r\n            \"company\": e.target.companyInput.value,\r\n            \"type\":e.target.experienceTypeInput.value,\r\n            \"start_year\":e.target.experienceStartDateInput.value,\r\n            \"end_year\":e.target.experienceEndDateInput.value\r\n        }\r\n        state.onExperienceAdd(newExperience)\r\n\r\n    }\r\n\r\n    const educationAdd = (e) =>{\r\n        e.preventDefault();\r\n        state.profileState.buf.educationBlocksAmount++\r\n        const newEducation = {\r\n            \"profession\": e.target.professionInput.value,\r\n            \"university\": e.target.universityInput.value,\r\n            \"type\":e.target.educationTypeInput.value,\r\n            \"start_year\":e.target.educationStartDateInput.value,\r\n            \"end_year\":e.target.educationEndDateInput.value\r\n        }\r\n        state.onEducationAdd(newEducation)\r\n    }\r\n\r\n    const educationDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onEducationDelete(state.profileState.education[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const experienceDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onExperienceDelete(state.profileState.experience[e.target.parentElement.dataset.key])   \r\n    }\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <form className=\"popup__education-input popup__input-block\" onSubmit={educationAdd}>\r\n            {console.log(state)}\r\n            {state.profileState.education.map((el, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{el.profession + ' - ' + el.university}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={educationDelete}>x</button>\r\n                        </div>\r\n                    )\r\n            })}\r\n            <div className=\"input-field underlined\">\r\n                <input className=\"popup__text-input\" id=\"professionInput\" name=\"professionInput\" type=\"input\" placeholder=\" \" required/>\r\n                <label className=\"popup__text-label\" htmlFor=\"professionInput\">Профессия</label>\r\n            </div>\r\n\r\n            <div className=\"input-field underlined\">\r\n                <input className=\"popup__text-input\" id=\"universityInput\" name=\"universityInput\" type=\"input\" placeholder=\" \" required/>\r\n                <label className=\"popup__text-label\" htmlFor=\"universityInput\">Место образования</label>\r\n            </div>\r\n\r\n            <select name=\"educationTypeInput\" id=\"educationTypeInput\">\r\n                <option value=\"course\">Курсы</option>\r\n                <option value=\"primary\">Начальное образование (4 класса)</option>\r\n                <option value=\"basic\">Среднее общее образование (9 классов)</option>\r\n                <option value=\"secondary\">Среднее полное образование (11 классов)</option>\r\n                <option value=\"post-secondary\">Среднее профессиональное образование</option>\r\n                <option value=\"bachelor\">Высшее (бакалавриат)</option>\r\n                <option value=\"specialist\">Высшее (специалитет)</option>\r\n                <option value=\"master\">Высшее (магистратура)</option>\r\n                <option value=\"PhD-asp\">Аспирантура</option>\r\n                <option value=\"PhD-doc\">Докторантура</option>\r\n            </select>\r\n\r\n            <div className=\"popup__date-fields\">\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"educationStartDateInput\" name=\"educationStartDateInput\" type=\"date\" placeholder=\" \" required/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"educationStartDateInput\">Дата начала</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"educationEndDateInput\" name=\"educationEndDateInput\" type=\"date\" placeholder=\" \" required/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"educationEndDateInput\">Дата окончания</label>\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"education-input__submit highlighted sup-btn\" value=\"Сохранить\"/>\r\n        </form>\r\n\r\n        <form className=\"popup__experience-input popup__input-block\" onSubmit={experienceAdd}>\r\n            {state.profileState.experience.map((el, index)=>{\r\n                return (\r\n                    <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                        <span>{el.position + ' - ' + el.company}</span>\r\n                        <button className=\"el-block__delete-el\" onClick={experienceDelete}>x</button>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n            <div className=\"input-field\">\r\n                <input className=\"popup__text-input\" id=\"positionInput\" name=\"positionInput\" type=\"input\" placeholder=\" \"/>\r\n                <label className=\"popup__text-label\" htmlFor=\"positionInput\">Позиция</label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <input className=\"popup__text-input\" id=\"companyInput\" name=\"companyInput\" type=\"input\" placeholder=\" \"/>\r\n                <label className=\"popup__text-label\" htmlFor=\"companyInput\">Компания</label>\r\n            </div>\r\n\r\n            <select name=\"experienceTypeInput\" id=\"experienceTypeInput\">\r\n                <option value=\"internship\">Стажировка</option>\r\n                <option value=\"junior\">Младший специалист</option>\r\n                <option value=\"middle\">Средний специалист</option>\r\n                <option value=\"senior\">Старший специалист</option>\r\n                <option value=\"director\">Руководитель</option>\r\n                <option value=\"senior-director\">Старший руководитель</option>\r\n            </select>\r\n\r\n            <div className=\"popup__date-fields\">\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"experienceStartDateInput\" name=\"experienceStartDateInput\" type=\"date\" placeholder=\" \"/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"experienceStartDateInput\">Дата начала</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"experienceEndDateInput\" name=\"experienceEndDateInput\" type=\"date\" placeholder=\" \"/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"experienceEndDateInput\">Дата окончания</label>\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"experience-input__submit highlighted sup-btn\" value=\"Сохранить\"/>\r\n        </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        cropperData:state.profile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onEducationAdd: (education)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_EDUCATION', payload:education})\r\n        },\r\n        onEducationDelete: (educationId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_EDUCATION', payload:educationId})\r\n        },\r\n        onExperienceAdd: (experience)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_EXPERIENCE', payload:experience})\r\n        },\r\n        onExperienceDelete: (experienceId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_EXPERIENCE', payload:experienceId})\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionExperience)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport fileUploader from '../../../../actions/fileUploader';\r\nimport cropIcon from '../../../../img/crop.svg'\r\n\r\nconst RedactPopupSectionImages = (state, placeholderData, cropperData, onDeactivateCropper, onActivateCropper, userState, onChangeAvatar, onChangePersonalBackground) => {\r\n    \r\n    const cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        state.onDeactivateCropper()\r\n        console.log(file)\r\n\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                state.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    const loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image, imageType)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + state.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                console.log(response)\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        state.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        state.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e, imageType) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        console.log(files);\r\n        loadImageToFirebase(files[0], imageType)\r\n\r\n    }\r\n\r\n    const loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'avatar')}}\r\n            >\r\n                <input type=\"file\" id=\"file-avatar\" hidden name=\"userAvatarInput\" onChange={(event) => {loadUserImage(event, 'avatar')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-avatar\">Загрузить аватар</label>\r\n                \r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.photo_url, 120, 120, 'avatar')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n          \r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'personal-background')}}\r\n            >\r\n                <input type=\"file\" id=\"file-back\" hidden name=\"userBackgroundInput\" onChange={(event) => {loadUserImage(event, 'personal-background')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-back\">Загрузить задний фон</label>\r\n\r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.profile_background, 700, 160, 'personal-background')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state: state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        cropperData:state.profile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onActivateCropper:(file, maxWidth, maxHeight, imageType)=>{\r\n            dispatch({type : 'ACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:[file, maxWidth, maxHeight, imageType]})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionImages)\r\n","export default __webpack_public_path__ + \"static/media/experience.042835b3.svg\";","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainPlaceholder from './MainPlaceholder'\r\nimport {createNewEmployee, updateEmployee, getUserData} from '../../../actions/serverConnections'\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nimport RedactPopupSectionBaseInfo from './redactPopupSections/RedactPopupSectionBaseInfo'\r\nimport RedactPopupSectionExperience from './redactPopupSections/RedactPopupSectionExperience'\r\nimport RedactPopupSectionImages from './redactPopupSections/RedactPopupSectionImages'\r\n\r\nimport baseInfoIcon from '../../../img/baseInfo.svg'\r\nimport experienceIcon from '../../../img/experience.svg'\r\nimport personalizationIcon from '../../../img/personalization.svg'\r\n\r\n\r\nclass ProfileRedactPopup extends Component {\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    saveRedactProfileFormChanges = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"user_id\": this.props.userState.user.id,\r\n            \"gender\":this.props.placeholderData.gender,\r\n            \"name\":this.props.placeholderData.userName,\r\n            \"mailing\": true,\r\n            \"language\": this.props.profileState.language,\r\n            \"birthday\": this.props.placeholderData.birthday,\r\n            \"address\": this.props.profileState.address,\r\n            \"phone\": this.props.profileState.userPhones,\r\n            \"about\": this.props.placeholderData.description,\r\n            \"schedule\": this.props.profileState.schedule,\r\n            \"social_links\": [],\r\n            \"education\": this.props.profileState.education,\r\n            \"experience\": this.props.profileState.experience,\r\n            \"citizenship\": this.props.placeholderData.citizenship,\r\n            \"profile_link\": \"\",\r\n            \"photo_url\": this.props.placeholderData.photo_url,\r\n            \"profile_background\": this.props.placeholderData.profile_background\r\n        }\r\n\r\n        if (this.props.userState.user.user_type === 'employee'){\r\n            this.props.onUpdateEmployee(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n        }\r\n        else this.props.onUpdateEmployer(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    changeSection(section) {\r\n        this.props.onChangeSection(section)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"no-fix-blur-box rounded profile-redact \" + this.props.profileState.state}>\r\n                <div className=\"profile-redact__popup-wrapper\">\r\n                    <MainPlaceholder></MainPlaceholder>\r\n                    <div className=\"profile-redact__form\">\r\n                        <div className=\"profile-redact__form-nav\">\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'baseInfo' ? 'active' : '')} onClick={this.changeSection.bind(this, 'baseInfo')}>\r\n                                <img src={baseInfoIcon} alt=\"Базовая информация\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'experience' ? 'active' : '')} onClick={this.changeSection.bind(this, 'experience')}>\r\n                                <img src={experienceIcon} alt=\"Опыт и образование\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'images' ? 'active' : '')} onClick={this.changeSection.bind(this, 'images')}>\r\n                                <img src={personalizationIcon} alt=\"Персонализация\"/>\r\n                            </button>\r\n                        </div>\r\n                        {this.props.profileState.popupRedactActiveSection === 'baseInfo' ? (<RedactPopupSectionBaseInfo></RedactPopupSectionBaseInfo>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'experience' ? (<RedactPopupSectionExperience></RedactPopupSectionExperience>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'images' ? (<RedactPopupSectionImages></RedactPopupSectionImages>) : ('')}\r\n\r\n                        <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveRedactProfileFormChanges}>Сохранить изменения</button>\r\n                        <button className=\"profile-redact__close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        loaderActive: state.nav.popup.loaderActive,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactProfileDeactivate: () => {\r\n            dispatch({type : 'POPUP_REDACT_PROFILE_DEACTIVATE', payload:null})\r\n        },\r\n        onChangeSection: (section) => {\r\n            dispatch({type : 'POPUP_REDACT_CHANGE_SECTION', payload:section})\r\n        },\r\n        onActivateLoader: ()=>{\r\n            dispatch({type : 'ACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onDeactivateLoader: ()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onCreateNewEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(createNewEmployee(data))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onCreateNewEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onUpdateEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(updateEmployee(data, userId))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onUpdateEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onHasProfile: () => {\r\n          dispatch({type : 'USER_HAS_PROFILE', payload:null})\r\n        },\r\n        onGetUserFetch: (userId, onHasProfile)=> {\r\n          dispatch(getUserData(userId))\r\n          .then((data)=>{\r\n              if (data.userData !== null){\r\n                  console.log(data.userData)\r\n                  onHasProfile()\r\n              }\r\n          })\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileRedactPopup);","import React, { Component } from 'react'\r\nimport Main from './Main/Main'\r\nimport Side from './Side/Side'\r\nimport Resumes from './Resumes/Resumes'\r\nimport ProfileRedactPopup from './ProfileRedactPopup/ProfileRedactPopup'\r\nimport { connect } from 'react-redux'\r\nimport {getUserResumes, getUserData} from '../../actions/serverConnections'\r\nimport './profile.css'\r\nimport Loader from '../Loader/Loader'\r\n\r\n\r\nclass Profile extends Component {\r\n    checkIfNotNull(variable, def){\r\n        console.log(variable)\r\n\r\n        if(typeof(variable) !== \"undefined\") {\r\n            if(variable !== null && variable !== '') {\r\n                return variable\r\n            }\r\n        }\r\n        return def\r\n    }\r\n\r\n    initPlaceholder = () => {\r\n        console.log(this.props.userState.hasProfile)\r\n        if (this.props.userState.hasProfile)\r\n        this.props.onInitializeProfileData({\r\n                state: this.props.profileState.state,\r\n                popupRedactActiveSection: this.props.profileState.popupRedactActiveSection,\r\n                    placeholder: {\r\n                    userName: this.props.userData.name,\r\n                    description: this.checkIfNotNull(this.props.userData.about, ''),\r\n                    avatar: '',\r\n                    gender: this.checkIfNotNull(this.props.userData.gender, ''),\r\n                    birthday: this.checkIfNotNull(this.props.userData.birthday, ''),\r\n                    citizenship: this.checkIfNotNull(this.props.userData.citizenship, ''),\r\n                    profile_link: '',\r\n                    photo_url: this.checkIfNotNull(this.props.userData.photo_url, 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54'),\r\n                    profile_background: this.checkIfNotNull(this.props.userData.profile_background, '')\r\n                },\r\n                address: this.props.userData.address,\r\n                userPhones: this.checkIfNotNull(this.props.userData.phone, []),\r\n                language: this.checkIfNotNull(this.props.userData.language, []),\r\n                schedule: this.checkIfNotNull(this.props.userData.schedule, []),\r\n                education: this.checkIfNotNull(this.props.userData.education, []),\r\n                experience: this.checkIfNotNull(this.props.userData.experience, []),\r\n                social_links: [],\r\n                buf:{\r\n                    languageGrade:'A1',\r\n                    scheduleDay:'0',\r\n                    scheduleEndTime:'00:00',\r\n                    scheduleStartTime:'00:00',\r\n                    cropper:{\r\n                      state:false,\r\n                      file:this.checkIfNotNull(this.props.userData.photo_url, 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54'),\r\n                      maxWidth:120,\r\n                      maxHeight:120\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        else \r\n        this.props.onInitializeProfileData({\r\n                state: this.props.profileState.state,\r\n                popupRedactActiveSection:'baseInfo',\r\n                placeholder: {\r\n                    userName: this.props.userData.name,\r\n                    description: '',\r\n                    avatar: '',\r\n                    gender: '',\r\n                    birthday: '',\r\n                    citizenship:'',\r\n                    profile_link: '',\r\n                    photo_url: '',\r\n                    profile_background: ''\r\n                },\r\n                address: null,\r\n                userPhones: [],\r\n                schedule:[],\r\n                education: [],\r\n                experience : [],\r\n                social_links: [],\r\n                buf:{\r\n                    languageGrade:'A1',\r\n                    scheduleDay:'0',\r\n                    scheduleEndTime:'00:00',\r\n                    scheduleStartTime:'00:00',\r\n                    cropper:{\r\n                      state:false,\r\n                      file:'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54',\r\n                      maxWidth:0,\r\n                      maxHeight:0,\r\n                      imageType:''\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if (this.props.userState.logged && this.props.userFetchId === String(this.props.userState.user.id)){\r\n            console.log(this.props.userState.user)\r\n            this.props.onGetLoggedUserFetch(this.props.userFetchId,this.props.onHasProfile, this.initPlaceholder, this.props.history)\r\n        }\r\n        else{\r\n            this.props.onGetUserFetch(this.props.userFetchId, this.props.history, this.props.onHasProfile)\r\n        }        \r\n        this.props.onGetResumes(this.props.userFetchId)\r\n    }\r\n    \r\n    render() {\r\n        if (Object.keys(this.props.userData).length !== 0)\r\n        return (\r\n            <div className=\"small-container profile-wrapper\">\r\n                <div className=\"profile__main\">\r\n                    <Main></Main>\r\n                    \r\n                    <Resumes></Resumes>\r\n                </div>\r\n                <div className=\"profile__side\">\r\n                    <Side></Side>\r\n                </div>\r\n                {this.props.profileState.state === 'active' ? (<ProfileRedactPopup></ProfileRedactPopup>):('')}\r\n            </div>\r\n        )\r\n\r\n        else return <Loader active={true}></Loader>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userFetchId: ownProps.match.params.id,\r\n        history: ownProps.history,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        placeholderData: state.profile.placeholder,\r\n        resumeData:state.cvs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onInitializeProfileData: (data)=>{\r\n            dispatch({type : 'POPUP_REDACT_INITIALIZE_PROFILE', payload:data}) \r\n        },\r\n        onHasProfile: ()=>{\r\n            dispatch({type : 'USER_HAS_PROFILE', payload:null}) \r\n        },\r\n        onGetLoggedUserFetch: (userId, onHasProfile, initPlaceholder, history)=> {\r\n            dispatch(getUserData(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    console.log(data.userData)\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                        console.log('profile')\r\n                    }\r\n                    initPlaceholder()\r\n\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetUserFetch: (userId, history, onHasProfile)=> {\r\n            dispatch(getUserData(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                        console.log('profile')\r\n                    }\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetResumes: (fetchId) => {\r\n            console.log(fetchId)\r\n            dispatch(getUserResumes(fetchId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data!=='404'){\r\n                    \r\n                    data.data.map(el=>el.state = '')\r\n                    dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"],"sourceRoot":""}