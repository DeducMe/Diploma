{"version":3,"sources":["components/CompanyProfile/Main/Main.js","components/CompanyProfile/Side/Side.js","components/CompanyProfile/Vacancies/VacancyRedactPopup/VacancyRedactPopup.js","components/CompanyProfile/Vacancies/Vacancies.js","components/CompanyProfile/ProfileRedactPopup/ImageCropper.js","components/CompanyProfile/ProfileRedactPopup/MainPlaceholder.js","components/CompanyProfile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionBaseInfo.js","components/CompanyProfile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionImages.js","components/CompanyProfile/ProfileRedactPopup/ProfileRedactPopup.js","components/CompanyProfile/CompanyProfile.js","components/VacancyPopup/VacancyPopup.js"],"names":["Main","props","toggleMapPopup","state","mapPopupState","setState","redactProfile","onPopupRedactProfileActivate","this","userState","user","user_type","className","el","returnValue","hasProfile","style","backgroundImage","checkOnEmpty","userData","profile_background","personalBackground","src","photo_url","placeholderAvatar","alt","id","onClick","editIcon","name","about","address","LeafletMap","phone","map","index","href","goPhrase","plusIcon","Component","connect","dispatch","onSubjectChangeToEmployer","type","payload","Side","VacancyRedactPopup","changeVacancyName","e","check","checkStringInput","target","value","onVacancyNameChange","vacancyIndex","onInputMistake","changeGradeValue","onGradeValueChange","changeSalary","checkIntInput","onSalaryValueChange","parseInt","changeIndustryValue","onIndustryValueChange","workTypeDelete","preventDefault","onWorkTypeDelete","vacancyWorkType","parentElement","dataset","key","workTypeInput","console","log","length","indexOf","onWorkTypeAdd","pointInput","split","join","keyCode","vacancyPoints","onPointAdd","pointDelete","onPointDelete","redactAboutBody","onRedactAboutBody","title","subtitle","points","addNewAboutBody","onAddAboutBody","deleteAboutBody","onAboutBodyDelete","closest","activateAboutBody","onAboutBodyActivate","deactivateAboutBody","onAboutBodyDeactivate","changeLeadingValue","onLeadingValueChange","changeTrailingValue","onTrailingValueChange","changeExperienceValue","onExperienceValueChange","changeAddressValue","onAddressValueChange","LeafletMapData","lat","lng","saveVacancyFormChanges","data","vacancyPlaceholder","vacancy_name","industry","grade","salary","work_type","experience","tags","leading","trailing","body","bg_header_color","vacancyData","vacancies","onSaveVacancyFormChanges","tagDelete","onTagDelete","tagInput","vacancyTags","onTagAdd","closeRedactPopup","onPopupRedactVacancyDeactivate","deleteVacancy","onPopupRedactVacancyDelete","changeVacancyHeaderColor","onVacancyHeaderColorChange","vacancyState","addStyle","required","placeholder","onChange","bind","closeIcon","deleteIcon","industries","item","data-key","getWorkTypeValues","aboutBodies","vacancyBuf","activeBodyId","toString","onSubmit","point","onKeyDown","tag","ownProps","vacancy","newVacancy","buf","bufPoints","leafletMap","onAddVacancy","addVacancy","then","newVacancyId","userId","getUserVacancies","color","tagId","workType","workTypeId","text","pointId","vacancyId","redactVacancy","mistakeStr","bodyId","Vacancy","fetch","headers","response","json","user_id","onPopupNewVacancyActivate","onPopupRedactVacancyActivate","logged","getGradeValues","pub_date","slice","openedVacancyId","VacancyPopup","responseState","newVacancyData","ImageCropper","cropUserImage","file","maxWidth","maxHeight","imageType","onDeactivateCropper","setTimeout","undefined","onActivateCropper","loadImageToFirebase","image","fileRef","fileUploader","storage","ref","child","put","getDownloadURL","onChangeAvatar","onChangePersonalBackground","getCropperData","cropperData","instance","croppedImage","dataURLtoBlob","getCroppedCanvas","toDataURL","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","loadUserImage","files","deactivateCropper","cropperFile","onSetCropperFile","cropperActive","width","cropperMaxWidth","height","cropperMaxHeight","overflow","minHeight","backgroundColor","aspectRatio","preview","viewMode","dragMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","setCropperInstance","uploadIcon","companyProfile","cropper","fileUrl","MainPlaceholder","avatarPhoto","userName","userDescription","userAddress","userPhones","placeholderData","onUpdateUserName","profileState","onUsernameChange","username","onDescriptionChange","onPhoneAdd","onPhoneDelete","phoneId","onSaveNewAddress","deletePhone","input","htmlFor","phonesInput","maxLength","dragOver","dragEnter","dragLeave","fileDrop","dataTransfer","onDragOver","onDragEnter","onDragLeave","onDrop","event","hidden","cropIcon","ProfileRedactPopup","saveRedactProfileFormChanges","onUpdateEmployer","onGetEmployer","onHasProfile","onPopupRedactProfileDeactivate","section","onChangeSection","popupRedactActiveSection","changeSection","baseInfoIcon","personalizationIcon","popupClose","tabIndex","loaderActive","nav","popup","onActivateLoader","onDeactivateLoader","onCreateNewEmployer","createNewEmployer","updateEmployer","getEmployer","Profile","initPlaceholder","onInitializeProfileData","variable","def","userFetchId","String","onGetLoggedEmployerFetch","history","onGetVacancies","Object","keys","Vacancies","Loader","active","params","resumeData","cvs","profile_link","push","fetchId","onGetVacancy","onCloseVacancyPopup","openedVacancy","ind","getVacancy"],"mappings":"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","file":"static/js/5.a713e990.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport personalBackground from'../../../img/personal-background.png'\r\n\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\nimport LeafletMap from '../../leafletMap/LeafletMap'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapPopupState:''\r\n        };\r\n    }\r\n\r\n    toggleMapPopup = () =>{\r\n        if (this.state.mapPopupState === ''){\r\n            this.setState({mapPopupState:'active'})\r\n        }\r\n        else this.setState({mapPopupState:''})\r\n    }\r\n\r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n    \r\n    render() {\r\n        if (this.props.userState.hasProfile){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                        <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n\r\n                        {this.props.userState.user.id === this.props.userData.user ? (\r\n                            <button className=\"profile-redact-btn\"  onClick={this.redactProfile}>\r\n                                <img src={editIcon} alt=\"editIcon\"/>\r\n                            </button>\r\n                        ) : ('')}\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        {this.props.userData.address?\r\n                        <div className=\"info__common-info\">\r\n                            <div className=\"address__popup-block\">\r\n                                <span className=\"living__place underline-link\" onClick={this.toggleMapPopup}>{this.props.userData.address.name}</span>\r\n\r\n                                {this.state.mapPopupState === 'active' ? \r\n                                    <div className ={\"map-popup rounded\"}>\r\n                                        <button className=\"map-popup__closer-btn\" onClick={this.toggleMapPopup}>x</button>\r\n                                        <LeafletMap address={this.props.userData.address}></LeafletMap>\r\n                                    </div>\r\n                                 : ''}\r\n                            </div>\r\n                        </div>:''}\r\n                        \r\n                        \r\n                        {this.props.userData.phone ? (\r\n                            <div className=\"info__contacts\">\r\n                                <p>Контакты:</p>\r\n                                <div className=\"info__contacts__phones\">\r\n                                    {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                                </div>\r\n                            </div>):('')}\r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user)\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-add-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n        else return (\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Профиль пуст!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_EMPLOYER_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react'\r\nimport './side.css'\r\n\r\nexport default class Side extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side rounded\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addVacancy, redactVacancy, getUserVacancies, deleteVacancy } from '../../../../actions/serverConnections'\r\nimport plusIcon from '../../../../img/plusIcon.svg'\r\nimport closeIcon from '../../../../img/close.svg'\r\nimport deleteIcon from '../../../../img/trash.svg'\r\nimport editIcon from '../../../../img/edit.svg'\r\nimport industries from '../../../../jsonFiles/industries.json'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\nimport {checkStringInput, checkIntInput, getWorkTypeValues} from '../../../../scripts/commonScripts.js'\r\n\r\n\r\nclass VacancyRedactPopup extends Component {\r\n    changeVacancyName = (e) =>{\r\n        const check = checkStringInput(e.target.value, 35, 0);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onVacancyNameChange(e.target.value, this.props.vacancyIndex) : \r\n        (this.props.onInputMistake(check, e.target));\r\n    }\r\n\r\n    changeGradeValue = (e) =>{\r\n        this.props.onGradeValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeSalary = (e) =>{\r\n        const check = checkIntInput(e.target.value, 9999999, null);\r\n        check === \"pass\" ? \r\n        this.props.onSalaryValueChange(parseInt(e.target.value), this.props.vacancyIndex):\r\n        (this.props.onInputMistake(check, e.target))\r\n\r\n    }\r\n\r\n    changeIndustryValue = (e) =>{\r\n        this.props.onIndustryValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    workTypeDelete = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onWorkTypeDelete(this.props.vacancyWorkType[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    workTypeInput = (e) =>{\r\n        const value = e.target.value\r\n        console.log(value)\r\n        e.preventDefault()\r\n        if(this.props.vacancyWorkType.length > 5){\r\n\r\n        }\r\n        else if(this.props.vacancyWorkType.indexOf(value) === -1){\r\n            this.props.onWorkTypeAdd(value, this.props.vacancyIndex)\r\n        }\r\n    }\r\n\r\n    pointInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.vacancyPoints.length > 10){\r\n\r\n            }\r\n            else if(this.props.vacancyPoints.indexOf(value) === -1){\r\n                this.props.onPointAdd(value, this.props.vacancyIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    pointDelete = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPointDelete(this.props.vacancyPoints[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    redactAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onRedactAboutBody({\r\n            title:e.target.title.value,\r\n            subtitle:e.target.subtitle.value,\r\n            points:this.props.vacancyPoints\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    addNewAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAddAboutBody({\r\n            title:'Наши/ваши требования/предложения',\r\n            subtitle:'',\r\n            points:[]\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    deleteAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyDelete(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    activateAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyActivate(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    deactivateAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyDeactivate(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeLeadingValue = (e) =>{\r\n        this.props.onLeadingValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeTrailingValue = (e) =>{\r\n        this.props.onTrailingValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeExperienceValue = (e) => {\r\n        this.props.onExperienceValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeAddressValue = () => {\r\n        this.props.onAddressValueChange({\r\n            name:this.props.LeafletMapData.name,\r\n            lat:this.props.LeafletMapData.lat,\r\n            lng:this.props.LeafletMapData.lng\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    saveVacancyFormChanges = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            \"user_id\": this.props.userData.id,\r\n            \"vacancy_name\": this.props.vacancyPlaceholder.vacancy_name,\r\n            \"industry\": this.props.vacancyPlaceholder.industry || 'Не указано',\r\n            \"grade\": this.props.vacancyPlaceholder.grade,\r\n            \"salary\": this.props.vacancyPlaceholder.salary === null ? -1 : this.props.vacancyPlaceholder.salary,\r\n            \"work_type\": this.props.vacancyPlaceholder.work_type,\r\n            \"experience\": this.props.vacancyPlaceholder.experience,\r\n            \"address\": this.props.vacancyPlaceholder.address,\r\n            \"tags\": this.props.vacancyPlaceholder.tags,\r\n            \"leading\":this.props.vacancyPlaceholder.leading,\r\n            \"trailing\":this.props.vacancyPlaceholder.trailing,\r\n            \"body\":this.props.vacancyPlaceholder.body,\r\n            \"bg_header_color\":this.props.vacancyPlaceholder.bg_header_color\r\n        }\r\n        if (this.props.vacancyData.vacancies.length === this.props.vacancyIndex || this.props.vacancyData.vacancies.length === 0){\r\n            this.props.onSaveVacancyFormChanges(data, -1, this.props.userData.id, this.props.vacancyPlaceholder.vacancy_name)\r\n        }\r\n        else this.props.onSaveVacancyFormChanges(data, this.props.vacancyIndex, this.props.userData.id, this.props.vacancyPlaceholder.id)\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    tagDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onTagDelete(this.props.vacancyPlaceholder.tags[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    tagInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.vacancyPlaceholder.tags.length > 10){\r\n\r\n            }\r\n            else if(this.props.vacancyTags.indexOf(value) === -1){\r\n                this.props.onTagAdd(value, this.props.vacancyIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    closeRedactPopup = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactVacancyDeactivate(this.props.vacancyIndex)\r\n    }\r\n\r\n    deleteVacancy = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactVacancyDelete(this.props.vacancyData.vacancies[this.props.vacancyIndex].id, this.props.userData.id)\r\n    }\r\n\r\n    changeVacancyHeaderColor = (e) =>{\r\n\r\n        e.preventDefault()\r\n        this.props.onVacancyHeaderColorChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"rounded resume-redact-block \" + this.props.vacancyState} style={this.props.addStyle}>\r\n                <div className={\"resume__header white top-rounded \" + this.props.vacancyPlaceholder.bg_header_color}>\r\n                    <div className=\"resume__header-top\">\r\n                        <input required type=\"text\" className=\"resume__header__name bold f-large white\" placeholder=\"Название профессии\" onChange={this.changeVacancyName.bind(this)} value={this.props.vacancyPlaceholder.vacancy_name}/>\r\n                        <p className=\"resume__header__salary\"><input required type=\"number\" className=\"resume__header__salary-input bold f-pre white\" placeholder=\"Желаемая зарплата\" onChange={this.changeSalary.bind(this)} value={this.props.vacancyPlaceholder.salary === 0 || this.props.vacancyPlaceholder.salary === -1 || this.props.vacancyPlaceholder.salary === null ? '' :this.props.vacancyPlaceholder.salary }/><span className=\"bold f-pre\"> руб.</span></p>\r\n                    </div>\r\n                    <div className=\"resume__header-bottom\">\r\n                        <p className=\"resume__header__grade\">\r\n                            <select required className=\"white resume__header__grade-input bg-transparent\" id={\"resume-gradeInput-\"+this.props.index} name={\"resume-gradeInput-\"+this.props.index} onChange={this.changeGradeValue.bind(this)} value={this.props.vacancyPlaceholder.grade}>\r\n                                <option value=\"internship\">Стажер</option>\r\n                                <option value=\"junior\">Начинающий специалист</option>\r\n                                <option value=\"middle\">Специалист</option>\r\n                                <option value=\"senior\">Главный специалист</option>\r\n                                <option value=\"director\">Управляющий отдела</option>\r\n                                <option value=\"senior-director\">Генеральный директор</option>\r\n                            </select>\r\n                        </p>\r\n                        <ul className=\"resume__header-color\">\r\n                            <button className={\"resume__header-color-el bg-light-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-light-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-light-black\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-gray \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-blue-gray' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-blue-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-blue-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-blue-black\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-gray \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-violet-gray' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-violet-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-violet-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-violet-black\"/>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"resume-close-btn\"  onClick={this.closeRedactPopup}>\r\n                    <img src={closeIcon} alt=\"closeIcon\"/>\r\n                </button>\r\n                {this.props.vacancyIndex !== this.props.vacancyData.vacancies.length ?(\r\n                    <button className=\"resume-delete-btn\"  onClick={this.deleteVacancy}>\r\n                        <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                    </button>\r\n                ):('')}\r\n                \r\n\r\n                <div className=\"resume__main-info rounded\">\r\n                    <p className=\"resume__industry f-pre\">\r\n                        <span>Отрасль: </span>\r\n                        <select required id={\"resume-industryInput-\"+this.props.index} name={\"resume-industryInput-\"+this.props.index} onChange={this.changeIndustryValue.bind(this)} value={this.props.vacancyPlaceholder.industry}>\r\n                            {industries.map((item)=>{\r\n                                return <option value={item.name}>{item.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </p>\r\n                    <div className=\"resume__address\">\r\n                        <LeafletMap address={this.props.vacancyPlaceholder.address}></LeafletMap>\r\n                        <div className=\"resume__address__data-block\">\r\n                            <button className=\"highlighted sup-btn\" onClick={this.changeAddressValue}>Сохранить</button>\r\n                            <span>{this.props.vacancyPlaceholder.address.name}</span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"resume__work-type-block input-list\">\r\n                        <p className=\"input-label\">Типы работ:</p>\r\n\r\n                        <ul className=\"resume__work-type-list\">\r\n                            {this.props.vacancyWorkType.map((value, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{getWorkTypeValues(value)}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.workTypeDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"resume__work-type input-list\">\r\n                            Выберите, чтобы добавить...\r\n                            <select className=\"select-input\" name=\"workTypeInput\" id=\"workTypeInput\" onChange={this.workTypeInput.bind(this)}>\r\n                                <option value=\"part-day\">неполный день</option>\r\n                                <option value=\"full-day\">полный день</option>\r\n                                <option value=\"part-time\">частичная занятность</option>\r\n                                <option value=\"full-time\">полная занятность</option>\r\n                                <option value=\"volunteer\">волонтерство</option>\r\n                                <option value=\"one-time-job\">разовое задание</option>\r\n                                <option value=\"flexible-schedule\">гибкий график</option>\r\n                                <option value=\"shift-schedule\">сменный график</option>\r\n                                <option value=\"shift-method\">вахтовый метод</option>\r\n                                <option value=\"remote\">удаленная работа</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"textarea-field\">\r\n                        <p>Вступление</p>\r\n                        <textarea className=\"popup__textarea-input\" name=\"leadingInput\" id=\"leadingInput\" onChange={this.changeLeadingValue.bind(this)} value={this.props.vacancyPlaceholder.leading}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"vacancy__about\">    \r\n                        {this.props.aboutBodies.map((item, index) => {\r\n                            if (this.props.vacancyBuf.activeBodyId === index.toString())\r\n                            return(\r\n                            <form className=\"body-block rounded\" key={index} data-key={index} onSubmit={this.redactAboutBody}>\r\n                                <div className=\"about__body-inputs f-pre\">\r\n                                    <div className=\"about__body-inputs__header\">\r\n                                        <input className=\"highlighted\" type=\"text\" placeholder=\"Заголовок\" name=\"title\" id=\"title\"/>\r\n                                        <div className=\"body-controls\">\r\n                                            <button className=\"body-redact-btn\" onClick={this.deactivateAboutBody}>\r\n                                                <img src={closeIcon} alt=\"closeIcon\"/>\r\n                                            </button>\r\n\r\n                                            <button className=\"body-delete-btn\" onClick={this.deleteAboutBody}>\r\n                                                <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <input className=\"semi\" type=\"text\" placeholder=\"Подзаголовок\" name=\"subtitle\" id=\"subtitle\"/>\r\n\r\n                                    <div className=\"about__points-block input-list\">\r\n                                        {this.props.vacancyPoints.length !== 0 ?\r\n                                        <ul className=\"about__points-list rounded\">\r\n                                            {this.props.vacancyPoints.map((point, index)=>{\r\n                                                return (\r\n                                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                                        <span>{point}</span>\r\n                                                        <button className=\"el-block__delete-el\" onClick={this.pointDelete}>x</button>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul> : ''}\r\n                                        \r\n                                        <p className=\"about__point input-list\">\r\n                                            <input type=\"text\" className=\"input-list__input-block\" placeholder=\"Элемент списка\" onKeyDown={this.pointInput}/>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <input className=\"form-submit-btn f-large rounded\" type=\"submit\" value=\"Сохранить изменения\"></input>\r\n                                </div>\r\n                                \r\n                            </form>)\r\n                            else return (\r\n                                <div className=\"body-block rounded body-block-cut\" key={index} data-key={index}>\r\n                                    <p className=\"highlighted\">{item.title}</p>\r\n                                    <div className=\"body-controls\">\r\n                                        <button className=\"body-redact-btn\" onClick={this.activateAboutBody}>\r\n                                            <img src={editIcon} alt=\"editIcon\"/>\r\n                                        </button>\r\n\r\n                                        <button className=\"body-delete-btn\" onClick={this.deleteAboutBody}>\r\n                                            <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>)\r\n                        })}\r\n                            \r\n                        <div className=\"vacancy__about__add-block\">\r\n                            <p>Добавить блок</p>\r\n\r\n                            <button className=\"body-add-btn\" onClick={this.addNewAboutBody}>\r\n                                <img src={plusIcon} alt=\"plusIcon\"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"textarea-field\">\r\n                        <p>Завершение</p>\r\n                        <textarea className=\"popup__textarea-input\" name=\"trailingInput\" id=\"trailingInput\" onChange={this.changeTrailingValue.bind(this)} value={this.props.vacancyPlaceholder.trailing}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"resume__tags-block input-list\">\r\n                        <ul className=\"resume__tags-list\">\r\n                            {this.props.vacancyTags.map((tag, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{tag}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.tagDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <input className=\"resume__tags-input input-list__input-block\" type=\"text\" onKeyDown={this.tagInput.bind(this)} placeholder=\"Введите тег и нажмите пробел...\"/>\r\n                    </div>\r\n                    \r\n                    <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveVacancyFormChanges}>Сохранить изменения</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    let vacancyPlaceholder\r\n    if (ownProps.index === state.vacancy.vacancies.length) {vacancyPlaceholder = state.vacancy.newVacancy}\r\n    else {vacancyPlaceholder = state.vacancy.placeholder[ownProps.index]}\r\n    return {\r\n        userData: state.user.user,\r\n        vacancyData: state.vacancy,\r\n        vacancyPlaceholder: vacancyPlaceholder,\r\n        vacancyTags: vacancyPlaceholder.tags,\r\n        vacancyWorkType:vacancyPlaceholder.work_type,\r\n        vacancyState: vacancyPlaceholder.state,\r\n        vacancyPoints: state.vacancy.buf.bufPoints,\r\n        vacancyIndex: ownProps.index,\r\n        vacancyBuf:state.vacancy.buf,\r\n        aboutBodies:vacancyPlaceholder.body,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddVacancy: (vacancyData) => {\r\n            dispatch(addVacancy(vacancyData))\r\n            .then((data)=>{\r\n                if (data.newVacancyId !== null && data.newVacancyId!=='404'){\r\n                }\r\n            })\r\n        },\r\n        onPopupRedactVacancyDeactivate: (index) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE', payload:index})\r\n        },\r\n        onPopupRedactVacancyDelete: (index, userId) => {\r\n            dispatch(deleteVacancy(index))\r\n            .then(data => {\r\n                dispatch(getUserVacancies(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onVacancyHeaderColorChange: (color, vacancyIndex) =>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_COLOR', payload:{'color': color, 'index': vacancyIndex}})\r\n        },\r\n        onTagAdd: (tag, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_TAG', payload:{'tag': tag, 'index': vacancyIndex}})\r\n        },\r\n        onTagDelete: (tagId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_TAG', payload:{'tagId': tagId, 'index': vacancyIndex}})\r\n        },\r\n        onWorkTypeAdd: (workType, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_WORK_TYPE', payload:{'workType': workType, 'index': vacancyIndex}})\r\n        },\r\n        onWorkTypeDelete: (workTypeId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_WORK_TYPE', payload:{'workTypeId': workTypeId, 'index': vacancyIndex}})\r\n        },\r\n        onVacancyNameChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_VACANCY_NAME', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onGradeValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_GRADE_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onIndustryValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_INDUSTRY_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onAddressValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_ADDRESS_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onLeadingValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_LEADING_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onTrailingValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_TRAILING_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onPointAdd: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_POINT', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onPointDelete: (pointId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_POINT', payload:{'pointId': pointId, 'index': vacancyIndex}})\r\n        },\r\n        onSalaryValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_SALARY_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onSaveVacancyFormChanges:(data, vacancyIndex, userId, vacancyId) => {\r\n            dispatch(vacancyIndex===-1?(addVacancy(data)):(redactVacancy(data, vacancyId)))\r\n            .then(data => dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE', payload:vacancyIndex}))\r\n            .then(data => {\r\n                dispatch(getUserVacancies(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onInputMistake:(mistakeStr, el) => {\r\n            console.log(mistakeStr)\r\n        },\r\n\r\n        onAddAboutBody:(body, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_ABOUT_BODY', payload:{'body': body, 'index': vacancyIndex}})\r\n        },\r\n        onRedactAboutBody:(body, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_REDACT_ABOUT_BODY', payload:{'body': body, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyDelete:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyActivate:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ACTIVATE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyDeactivate:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyRedactPopup);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {getWorkTypeValues, getGradeValues} from '../../../scripts/commonScripts'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport VacancyRedactPopup from './VacancyRedactPopup/VacancyRedactPopup'\r\nimport editIcon from '../../../img/edit.svg'\r\nimport VacancyPopup from '../../VacancyPopup/VacancyPopup'\r\n\r\nclass Vacancy extends Component {\r\n    addVacancy = (e) => {\r\n        return fetch('../new_vacancy.json', {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            data.user_id = this.props.userData.user_id\r\n            return data\r\n        })\r\n        .then (data => {\r\n            this.props.onPopupNewVacancyActivate(data)\r\n        })\r\n    }\r\n\r\n    redactVacancy = (index) =>{\r\n        this.props.onPopupRedactVacancyActivate(index)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"resumes-block\">\r\n                {this.props.userState.logged ? (this.props.vacancyData.vacancies.length !== 0 ?(<h2>Ваши вакансии:</h2>):('')):(this.props.vacancyData.vacancies.length !== 0 ?(<h2>Вакансии:</h2>):(''))}\r\n                <ul className=\"resumes-list\">\r\n                    {this.props.vacancyData.vacancies.length !== 0 ? \r\n                    (this.props.vacancyData.vacancies.map((el, index)=>\r\n                            (\r\n                            <li key={index} className=\"resume resumes-list-el rounded\">\r\n                                {el.state==='active' ? (<VacancyRedactPopup index={index}></VacancyRedactPopup>) : ('')}\r\n                                <section className={\"resume-main \" + (el.state === 'active' ? ('muted'):(''))}>\r\n                                    <div className={\"resume__header white top-rounded \" + this.props.vacancyData.vacancies[index].bg_header_color}>\r\n                                        <div className=\"resume__header-top\">\r\n                                            <h2 className=\"resume__header__name bold f-large\">{el.vacancy_name}</h2>\r\n                                                {el.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                                <span className=\"resume__header__salary bold f-medium\">{el.salary} руб.</span>}\r\n                                        </div>\r\n                                        <div className=\"resume__header-bottom\">\r\n                                            <p className=\"resume__header__grade\">{getGradeValues(el.grade)}</p>\r\n\r\n                                            <p className=\"resume__publication-date sup\">{el.pub_date.slice(0,10)}</p>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"resume__main-info rounded\">\r\n                                        <p className=\"resume__industry f-pre\">{el.industry}</p>\r\n            \r\n                                        <p className=\"resume__work-type\">{el.work_type.map((item)=>getWorkTypeValues(item)).join(', ')}</p>\r\n            \r\n                                        <p className=\"resume__about\">{el.about}</p>\r\n            \r\n                                        \r\n                                        <ul className=\"resume__tags-list\">\r\n                                            {el.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user?(\r\n                                    <button className=\"resume-redact-btn\"  onClick={this.redactVacancy.bind(this, index)}>\r\n                                        <img src={editIcon} alt=\"editIcon\"/>\r\n                                    </button>\r\n                                ):('')}\r\n                                \r\n                            </li>\r\n                            )\r\n                        )\r\n                    ):('')}\r\n\r\n                    {this.props.vacancyData.newVacancy.length!==0 ? (this.props.vacancyData.newVacancy.state==='active' ? (<VacancyRedactPopup index={this.props.vacancyData.vacancies.length}></VacancyRedactPopup>) : ('')) : ('')}\r\n                </ul>\r\n                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user && this.props.vacancyData.newVacancy.state!=='active' ? (\r\n                    <div className=\"resume-add\">\r\n                        <p>Добавить вакансию:</p>\r\n                        <button className=\"resume-add-btn\" onClick={this.addVacancy.bind(this, 0)}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button>\r\n                    </div>)\r\n                :('')}\r\n                {this.props.vacancyData.openedVacancyId !== -1 ? <VacancyPopup id={this.props.responseState.openedVacancyId}></VacancyPopup> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        vacancyData: state.vacancy,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactVacancyActivate: (vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ACTIVATE', payload:vacancyIndex})\r\n        },\r\n        onPopupNewVacancyActivate: (newVacancyData) => {\r\n            dispatch({type : 'POPUP_NEW_VACANCY_ACTIVATE', payload:newVacancyData})\r\n        },\r\n\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vacancy);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Cropper from \"react-cropper\";\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport closeIcon from '../../../img/close.svg';\r\nimport uploadIcon from '../../../img/upload.svg';\r\n\r\n\r\nclass ImageCropper extends Component {\r\n    cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        this.props.onDeactivateCropper()\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                this.props.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + this.props.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        this.props.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        this.props.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getCropperData = () => {\r\n        this.props.onDeactivateCropper()\r\n\r\n        if (typeof this.props.cropperData.instance !== \"undefined\") {\r\n          const croppedImage = this.dataURLtoBlob(this.props.cropperData.instance.getCroppedCanvas().toDataURL());\r\n          this.loadImageToFirebase(croppedImage, this.props.cropperData.imageType)\r\n        }\r\n    };\r\n\r\n    dataURLtoBlob = (dataurl) => {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        this.loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    deactivateCropper = () =>{\r\n        this.props.onDeactivateCropper()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.cropperFile){\r\n            if(this.props.cropperData.imageType === 'avatar'){\r\n                this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54')\r\n            }\r\n            else this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-background.png?alt=media&token=1c91f99c-c236-4a28-b291-bfc2263df45b')\r\n        }\r\n\r\n        return this.props.cropperActive ? (\r\n            <div className=\"cropper-block\">\r\n                {console.log(this.props.cropperFile)}\r\n                <div\r\n                    className={\"cropper__img-preview \" + this.props.cropperData.imageType}\r\n                    style={{ width: this.props.cropperMaxWidth, height: this.props.cropperMaxHeight, overflow:\"hidden\"}}\r\n                />\r\n\r\n                <Cropper\r\n                style={{ width: \"100%\", maxHeight: \"400px\",minHeight: \"400px\", backgroundColor:\"#fff\" }}\r\n                aspectRatio={this.props.cropperMaxWidth / this.props.cropperMaxHeight}\r\n\r\n                preview=\".cropper__img-preview\"\r\n                src={this.props.cropperFile}\r\n                viewMode={1}\r\n                dragMode='move'\r\n                guides={true}\r\n                minCropBoxHeight={10}\r\n                minCropBoxWidth={10}\r\n                background={false}\r\n                responsive={true}\r\n                autoCropArea={1}\r\n                checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                onInitialized={(instance) => {\r\n                    this.props.setCropperInstance(instance);\r\n                }}\r\n                />\r\n                \r\n                <div className=\"cropper-controls\">\r\n                    <button className=\"cropper-upload-btn\" onClick={this.getCropperData}>\r\n                        <img src={uploadIcon} alt=\"uploadIcon\"/>\r\n                    </button>\r\n\r\n                    <button className=\"cropper-close-btn\" onClick={this.deactivateCropper}>\r\n                        <img src={closeIcon} alt=\"closeIcon\"/>\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n        ) : ('')\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cropperMaxWidth:state.companyProfile.buf.cropper.maxWidth,\r\n        cropperMaxHeight:state.companyProfile.buf.cropper.maxHeight,\r\n        cropperFile:state.companyProfile.buf.cropper.file,\r\n        cropperActive:state.companyProfile.buf.cropper.state,\r\n        cropperData:state.companyProfile.buf.cropper,\r\n        userState: state.user,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        setCropperInstance: (instance) => {\r\n            dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_DEACTIVATE_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onSetCropperFile:(file) => {\r\n            dispatch({type : 'SET_CROPPER_FILE', payload:file})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCropper)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport ImageCropper from \"./ImageCropper\";\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\nexport class MainPlaceholder extends Component {\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-placeholder rounded\">\r\n                <section className=\"main-placeholder__personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                    <img className=\"main-placeholder__personal__avatar\" src={this.checkOnEmpty(this.props.avatarPhoto, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n\r\n                <section className=\"main-placeholder__info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userName}</h2>\r\n                    </div>\r\n                    \r\n                    <p className=\"info__description\">{this.props.userDescription}</p>\r\n\r\n                    <div className=\"info__common-info\">\r\n                        <p className=\"living__place\">{this.props.userAddress ? this.props.userAddress.name:''}</p>\r\n                    </div>\r\n                    \r\n                    {this.props.userPhones.length !== 0 ? (\r\n                        <div className=\"info__contacts\">\r\n                            <p>Контакты:</p>\r\n                            <div className=\"info__contacts__phones\">\r\n                                {this.props.userPhones.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                            </div>\r\n                        </div>):('')}\r\n                </section>\r\n                <ImageCropper></ImageCropper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholderData: state.companyProfile.placeholder,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        userName: state.companyProfile.placeholder.name,\r\n        avatarPhoto:state.companyProfile.placeholder.photo_url,\r\n        personalBackground:state.companyProfile.placeholder.profile_background,\r\n        userDescription: state.companyProfile.placeholder.about,\r\n        userAddress:state.companyProfile.placeholder.address,\r\n        userPhones:state.companyProfile.placeholder.phone,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onUpdateUserName: (userName) => {\r\n        dispatch({type : 'PLACEHOLDER_UPDATE_USER_NAME', payload:userName})\r\n      },\r\n      setCropperInstance: (instance) => {\r\n        dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPlaceholder)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\n\r\nconst RedactPopupSectionBaseInfo = (state, profileState, placeholderData) => {\r\n    const changeUserNameValue = (e) => {\r\n        let input = e.target.value\r\n        state.onUsernameChange(input)\r\n    }\r\n\r\n    const changeUserDescriptionValue = (e) => {\r\n        state.onDescriptionChange(e.target.value)\r\n    }\r\n\r\n    const saveNewAddress = (e) => {\r\n        state.onSaveNewAddress({\r\n            name:state.LeafletMapData.name,\r\n            lat:state.LeafletMapData.lat,\r\n            lng:state.LeafletMapData.lng\r\n        })\r\n    }\r\n\r\n    const deletePhone = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onPhoneDelete(state.placeholderData.phone[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const phoneInput = (e) =>{\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(state.placeholderData.phone.length > 1){\r\n\r\n            }\r\n            else if(state.placeholderData.phone.indexOf(value) === -1){\r\n                state.onPhoneAdd(value)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    const addPhone = (e) => {\r\n        e.preventDefault()\r\n        state.onPhoneAdd(e.target.phonesInput.value)\r\n    }\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"popup__input-block\">\r\n                <div className=\"input-field underline-anim\">\r\n                    <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \" onChange={changeUserNameValue} value={state.placeholderData.name}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя/никнейм</label>\r\n                </div>\r\n\r\n                <div className=\"textarea-field\">\r\n                    <p>Описание профиля</p>\r\n                    <textarea className=\"popup__textarea-input\" name=\"descriptionInput\" id=\"descriptionInput\" onChange={changeUserDescriptionValue} value={state.placeholderData.about}></textarea>\r\n                </div>\r\n\r\n                <div className=\"address-input\">\r\n                    <LeafletMap address={state.profileState.address}></LeafletMap>\r\n                    <button className=\"highlighted sup-btn\" onClick={saveNewAddress}>Сохранить</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Телефоны</p>\r\n                {state.placeholderData.phone.map((phone, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{phone}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deletePhone}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <form onSubmit={addPhone}>\r\n                    <input className=\"popup__text-input\" type=\"text\" id=\"phonesInput\" name=\"phonesInput\" placeholder=\"Нажмите пробел после введения номера...\" onKeyDown={phoneInput} maxLength=\"12\"/>\r\n                    <button type=\"submit\" className=\"sup-btn-circled\">+</button>\r\n                </form>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onUsernameChange: (username)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_USERNAME_CHANGE', payload:username})\r\n        },\r\n        onDescriptionChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DESCRIPTION_CHANGE', payload:text})\r\n        },\r\n        onPhoneAdd: (phone)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADD_PHONE', payload:phone})\r\n        },\r\n        onPhoneDelete: (phoneId)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DELETE_PHONE', payload:phoneId})\r\n        },\r\n        onSaveNewAddress:(address)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_CHANGE', payload:address})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionBaseInfo)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport fileUploader from '../../../../actions/fileUploader';\r\nimport cropIcon from '../../../../img/crop.svg'\r\n\r\n\r\nconst RedactPopupSectionImages = (state) => {\r\n    \r\n    const cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        state.onDeactivateCropper()\r\n\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                state.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    const loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + state.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        state.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        state.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e, imageType) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        console.log(files);\r\n        loadImageToFirebase(files[0], imageType)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'avatar')}}\r\n            >\r\n                <input type=\"file\" id=\"file-avatar\" hidden name=\"userAvatarInput\" onChange={(event) => {loadUserImage(event, 'avatar')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-avatar\">Загрузить аватар</label>\r\n                \r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.photo_url, 120, 120, 'avatar')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n          \r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'personal-background')}}\r\n            >\r\n                <input type=\"file\" id=\"file-back\" hidden name=\"userBackgroundInput\" onChange={(event) => {loadUserImage(event, 'personal-background')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-back\">Загрузить задний фон</label>\r\n\r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.profile_background, 700, 160, 'personal-background')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state: state,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        cropperData:state.companyProfile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onActivateCropper:(file, maxWidth, maxHeight, imageType)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_ACTIVATE_IMAGE_CROPPER', payload:[file, maxWidth, maxHeight, imageType]})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_DEACTIVATE_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionImages)\r\n","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainPlaceholder from './MainPlaceholder'\r\nimport {updateEmployer, createNewEmployer, getEmployer} from '../../../actions/serverConnections'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport RedactPopupSectionBaseInfo from './redactPopupSections/RedactPopupSectionBaseInfo'\r\nimport RedactPopupSectionImages from './redactPopupSections/RedactPopupSectionImages'\r\n\r\nimport baseInfoIcon from '../../../img/baseInfo.svg'\r\nimport personalizationIcon from '../../../img/personalization.svg'\r\n\r\nclass ProfileRedactPopup extends Component {\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n\r\n    saveRedactProfileFormChanges = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"user_id\": this.props.userState.user.id,\r\n            \"name\":this.props.placeholderData.name,\r\n            \"mailing\": true,\r\n            \"address\": this.props.placeholderData.address,\r\n            \"phone\": this.props.placeholderData.phone,\r\n            \"about\": this.props.placeholderData.about,\r\n            \"links\": [],\r\n            \"profile_link\": \"\",\r\n            \"photo_url\": this.props.placeholderData.photo_url,\r\n            \"profile_background\": this.props.placeholderData.profile_background\r\n        }\r\n        console.log(data)\r\n        this.props.onUpdateEmployer(data, this.props.userState.user.id, this.props.onGetEmployer, this.props.onHasProfile)\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    changeSection(section) {\r\n        this.props.onChangeSection(section)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"no-fix-blur-box rounded profile-redact \" + this.props.profileState.state}>\r\n                <div className=\"profile-redact__popup-wrapper\">\r\n                    <MainPlaceholder></MainPlaceholder>\r\n                    <div className=\"profile-redact__form\">\r\n                        <div className=\"profile-redact__form-nav\">\r\n                            \r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'baseInfo' ? 'active' : '')} onClick={this.changeSection.bind(this, 'baseInfo')}>\r\n                                <img src={baseInfoIcon} alt=\"Базовая информация\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'images' ? 'active' : '')} onClick={this.changeSection.bind(this, 'images')}>\r\n                                <img src={personalizationIcon} alt=\"Персонализация\"/>\r\n                            </button>\r\n                        </div>\r\n                        {this.props.profileState.popupRedactActiveSection === 'baseInfo' ? (<RedactPopupSectionBaseInfo></RedactPopupSectionBaseInfo>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'images' ? (<RedactPopupSectionImages></RedactPopupSectionImages>) : ('')}\r\n\r\n                        <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveRedactProfileFormChanges}>Сохранить изменения</button>\r\n                        <button className=\"profile-redact__close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        loaderActive: state.nav.popup.loaderActive,\r\n        cropperActive: state.companyProfile.buf.cropper.state,\r\n        cropperData:state.companyProfile.buf.cropper\r\n\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactProfileDeactivate: () => {\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PROFILE_DEACTIVATE', payload:null})\r\n        },\r\n        onChangeSection: (section) => {\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_CHANGE_SECTION', payload:section})\r\n        },\r\n        onActivateLoader: ()=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ACTIVATE_LOADER', payload:null})\r\n        },\r\n        onDeactivateLoader: ()=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DEACTIVATE_LOADER', payload:null})\r\n        },\r\n        onCreateNewEmployer:(data, userId, onGetEmployer, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(createNewEmployer(data))\r\n            .then(data => onGetEmployer(userId, onHasProfile))\r\n        },\r\n        onUpdateEmployer:(data, userId, onGetEmployer, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(updateEmployer(data, userId))\r\n            .then(data => onGetEmployer(userId, onHasProfile))\r\n        },\r\n        onHasProfile: () => {\r\n          dispatch({type : 'USER_HAS_PROFILE', payload:null})\r\n        },\r\n        onGetEmployer: (userId, onHasProfile)=> {\r\n          dispatch(getEmployer(userId))\r\n          .then((data)=>{\r\n              if (data.userData !== null){\r\n                  console.log(data.userData)\r\n                  onHasProfile()\r\n              }\r\n          })\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileRedactPopup);","import React, { Component } from 'react'\r\nimport Main from './Main/Main'\r\nimport Side from './Side/Side'\r\nimport Vacancies from './Vacancies/Vacancies'\r\nimport ProfileRedactPopup from './ProfileRedactPopup/ProfileRedactPopup'\r\nimport { connect } from 'react-redux'\r\nimport {getUserVacancies, getEmployer} from '../../actions/serverConnections'\r\nimport './profile.css'\r\nimport Loader from '../Loader/Loader'\r\n\r\n\r\nclass Profile extends Component {\r\n    checkIfNotNull(variable, def){\r\n        if(typeof(variable) !== \"undefined\") {\r\n            if(variable !== null && variable !== '') {\r\n                return variable\r\n            }\r\n        }\r\n        return def\r\n    }\r\n\r\n    initPlaceholder = () => {\r\n        this.props.onInitializeProfileData({\r\n                state:'muted',\r\n                popupRedactActiveSection:'baseInfo',\r\n                placeholder: this.props.userData,\r\n                buf:{\r\n                    cropper:{\r\n                        state:false,\r\n                        file:'',\r\n                        maxWidth:0,\r\n                        maxHeight:0,\r\n                        instance:{\r\n                \r\n                        },\r\n                        imageType:''\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.userState.logged && this.props.userFetchId === String(this.props.userState.user.id)){\r\n            console.log(this.props.userState.user)\r\n            this.props.onGetLoggedEmployerFetch(this.props.userFetchId, this.props.onHasProfile, this.initPlaceholder, this.props.history)\r\n        }\r\n        else{\r\n            this.props.onGetEmployer(this.props.userFetchId, this.props.onHasProfile, this.props.history)\r\n        }        \r\n\r\n        console.log(this.props.userFetchId)\r\n        this.props.onGetVacancies(this.props.userFetchId)\r\n    }\r\n    \r\n    render() {\r\n        if (Object.keys(this.props.userData).length !== 0)\r\n        return (\r\n            <div className=\"small-container profile-wrapper\">\r\n                <div className=\"profile__main\">\r\n                    <Main></Main>\r\n                    \r\n                    <Vacancies></Vacancies>\r\n                </div>\r\n                <div className=\"profile__side\">\r\n                    <Side></Side>\r\n                </div>\r\n                {this.props.profileState.state === 'active' ? (<ProfileRedactPopup></ProfileRedactPopup>):('')}\r\n            </div>\r\n        )\r\n\r\n        else return <Loader active={true}></Loader>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userFetchId: ownProps.match.params.id,\r\n        history: ownProps.history,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        resumeData:state.cvs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onInitializeProfileData: (data)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_INITIALIZE_PROFILE', payload:data}) \r\n        },\r\n        onHasProfile: ()=>{\r\n            dispatch({type : 'USER_HAS_PROFILE', payload:null}) \r\n        },\r\n        onGetLoggedEmployerFetch: (userId, onHasProfile, initPlaceholder, history)=> {\r\n            dispatch(getEmployer(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                    }\r\n                    initPlaceholder()\r\n\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetEmployer: (userId,onHasProfile, history)=> {\r\n            dispatch(getEmployer(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    onHasProfile()\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetVacancies: (fetchId) => {\r\n            dispatch(getUserVacancies(fetchId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data!=='404'){\r\n                    \r\n                    data.data.map(el=>el.state = '')\r\n                    dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react'\r\nimport {getVacancy} from '../../actions/serverConnections'\r\nimport {getGradeValues, getWorkTypeValues} from '../../scripts/commonScripts'\r\nimport { connect } from 'react-redux'\r\nimport './vacancyPopup.css'\r\n\r\nclass VacancyPopup extends Component {\r\n    componentDidMount(){\r\n        this.props.onGetVacancy(this.props.id)\r\n    }\r\n\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onCloseVacancyPopup();\r\n    }\r\n\r\n    render() {\r\n        console.log(Object.keys(this.props.openedVacancy).length)\r\n        if (Object.keys(this.props.openedVacancy).length !== 0)\r\n        return (\r\n            <div className=\"blur-box active\" onClick={this.popupClose.bind(this)}>\r\n                <div className=\"resume resumes-list-el popup-wrapper rounded\">\r\n                    <section className=\"resume-main\">\r\n                        <div className={\"resume__header white top-rounded \" + this.props.openedVacancy.bg_header_color}>\r\n                            <div className=\"resume__header-top\">\r\n                                <h2 className=\"resume__header__name bold f-large\">{this.props.openedVacancy.vacancy_name}</h2>\r\n                                <p><span className=\"resume__header__salary bold f-medium\">{this.props.openedVacancy.salary}</span><span className=\"bold f-medium\"> руб.</span></p>\r\n                            </div>\r\n                            <div className=\"resume__header-bottom\">\r\n                                <p className=\"resume__header__grade\">{getGradeValues(this.props.openedVacancy.grade)}</p>\r\n\r\n                                <p className=\"resume__publication-date sup\">{this.props.openedVacancy.pub_date.slice(0,10)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"resume__main-info bottom-rounded full-width\">\r\n                            <p className=\"resume__industry f-pre\">{this.props.openedVacancy.industry}</p>\r\n\r\n                            <p className=\"resume__work-type\">{this.props.openedVacancy.work_type.map((el)=>getWorkTypeValues(el)).join(', ')}</p>\r\n\r\n                            <div className=\"vacancy__about\">\r\n                                <p>{this.props.openedVacancy.leading}</p>\r\n                                <ul className=\"vacancy__about__body-list\">\r\n                                    {this.props.openedVacancy.body.map((el, index)=>\r\n                                        <li key={index}>\r\n                                            <h3 className=\"bold f-large\">{el.title}</h3>\r\n\r\n                                            <h4 className=\"bold f-medium\">{el.subtitle}</h4>\r\n\r\n                                            <ul className=\"vacancy__about__body-list__points-list\">\r\n                                            {el.points.map((point, ind) => \r\n                                                <li key={ind}>{point}</li>    \r\n                                            )}\r\n                                            </ul>\r\n                                        </li>\r\n                                    )}\r\n                                </ul>\r\n                                <p>{this.props.openedVacancy.trailing}</p>\r\n                            </div>\r\n                            \r\n                            <ul className=\"resume__tags-list\">\r\n                                {this.props.openedVacancy.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button className=\"close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        else return ''\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    openedVacancy:state.buf.openedVacancy,\r\n    id:ownProps.id\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onGetVacancy: (id) => {\r\n        dispatch(getVacancy(id))\r\n    },\r\n    onCloseVacancyPopup: () => {\r\n        dispatch({type : 'CLOSE_VACANCY_POPUP', payload:null})\r\n\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyPopup);\r\n\r\n"],"sourceRoot":""}