{"version":3,"sources":["components/VacancyPopup/VacancyPopup.js","components/Responses/ResponsePopup.js","img/right-arrow.svg","components/Responses/Responses.js","../../src/observers.ts","../../src/InView.tsx"],"names":["VacancyPopup","this","props","onGetVacancy","id","e","preventDefault","onCloseVacancyPopup","console","log","Object","keys","openedVacancy","length","className","onClick","popupClose","bind","bg_header_color","vacancy_name","salary","getGradeValues","grade","pub_date","slice","industry","work_type","map","el","getWorkTypeValues","join","leading","body","index","title","subtitle","points","point","ind","trailing","tags","tag","tabIndex","Component","connect","state","ownProps","buf","dispatch","getVacancy","type","payload","ResponsePopup","getResponseData","msg","data","userState","user_type","employer","vacancy","item","answer","cv","pk","worker","owner_id","message","changeWorkValue","setState","chosenWorkValue","target","value","onCloseResponsePopup","getAvatarFromFirebase","userType","fileUploader","storage","ref","child","getDownloadURL","then","response","onSetValuePhoto","catch","err","makeResponse","responseMessageInput","onMakeResponse","userTypeToSearchType","invertUserType","onChangeAnswer","answerId","onNullifyValues","onNullifyAnswers","getNormalUserType","onGetUserResponses","responseState","nextValues","onGetUserAnswers","nextAnswers","onSubmit","name","placeholder","user","createResponse","responseType","changeAnswer","next","userId","responseLoaderActivate","getUserResponses","count","results","responseLoaderDeactivate","answersLoaderActivate","getUserAnswers","answersLoaderDeactivate","photo","Responses","openVacancyInfo","onOpenVacancyInfo","openResponsePopup","onOpenResponsePopup","getInvites","responseAnswers","filter","undefined","responseValues","find","getResults","openedId","setTimeout","responseLoading","answersLoading","Loader","active","simplifyDate","date_response","to","userTypeToUrlUserType","src","alt","openedResponseId","responseSendState","getAnswer","userAvatar","openedVacancyId","as","onChange","inView","entry","nav","avatar","ObserverMap","RootIds","rootId","optionsToId","options","key","root","observe","element","callback","instance","elements","observer","IntersectionObserver","entries","thresholds","Array","createObserver","callbacks","isPlainChildren","InView","node","_unobserveCb","handleNode","handleChange","componentDidUpdate","prevProps","componentWillUnmount","observeNode","threshold","rootMargin","trackVisibility","delay","unobserve","render","children","triggerOnce","initialInView"],"mappings":"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","file":"static/js/8.50ae48e3.chunk.js","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {getVacancy} from '../../actions/serverConnections'\r\nimport {getGradeValues, getWorkTypeValues} from '../../scripts/commonScripts'\r\nimport { connect } from 'react-redux'\r\nimport './vacancyPopup.css'\r\n\r\nclass VacancyPopup extends Component {\r\n    componentDidMount(){\r\n        this.props.onGetVacancy(this.props.id)\r\n    }\r\n\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onCloseVacancyPopup();\r\n    }\r\n\r\n    render() {\r\n        console.log(Object.keys(this.props.openedVacancy).length)\r\n        if (Object.keys(this.props.openedVacancy).length !== 0)\r\n        return (\r\n            <div className=\"blur-box active\" onClick={this.popupClose.bind(this)}>\r\n                <div className=\"resume resumes-list-el popup-wrapper rounded\">\r\n                    <section className=\"resume-main\">\r\n                        <div className={\"resume__header white top-rounded \" + this.props.openedVacancy.bg_header_color}>\r\n                            <div className=\"resume__header-top\">\r\n                                <h2 className=\"resume__header__name bold f-large\">{this.props.openedVacancy.vacancy_name}</h2>\r\n                                <p><span className=\"resume__header__salary bold f-medium\">{this.props.openedVacancy.salary}</span><span className=\"bold f-medium\"> руб.</span></p>\r\n                            </div>\r\n                            <div className=\"resume__header-bottom\">\r\n                                <p className=\"resume__header__grade\">{getGradeValues(this.props.openedVacancy.grade)}</p>\r\n\r\n                                <p className=\"resume__publication-date sup\">{this.props.openedVacancy.pub_date.slice(0,10)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"resume__main-info bottom-rounded full-width\">\r\n                            <p className=\"resume__industry f-pre\">{this.props.openedVacancy.industry}</p>\r\n\r\n                            <p className=\"resume__work-type\">{this.props.openedVacancy.work_type.map((el)=>getWorkTypeValues(el)).join(', ')}</p>\r\n\r\n                            <div className=\"vacancy__about\">\r\n                                <p>{this.props.openedVacancy.leading}</p>\r\n                                <ul className=\"vacancy__about__body-list\">\r\n                                    {this.props.openedVacancy.body.map((el, index)=>\r\n                                        <li key={index}>\r\n                                            <h3 className=\"bold f-large\">{el.title}</h3>\r\n\r\n                                            <h4 className=\"bold f-medium\">{el.subtitle}</h4>\r\n\r\n                                            <ul className=\"vacancy__about__body-list__points-list\">\r\n                                            {el.points.map((point, ind) => \r\n                                                <li key={ind}>{point}</li>    \r\n                                            )}\r\n                                            </ul>\r\n                                        </li>\r\n                                    )}\r\n                                </ul>\r\n                                <p>{this.props.openedVacancy.trailing}</p>\r\n                            </div>\r\n                            \r\n                            <ul className=\"resume__tags-list\">\r\n                                {this.props.openedVacancy.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button className=\"close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        else return ''\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    openedVacancy:state.buf.openedVacancy,\r\n    id:ownProps.id\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onGetVacancy: (id) => {\r\n        dispatch(getVacancy(id))\r\n    },\r\n    onCloseVacancyPopup: () => {\r\n        dispatch({type : 'CLOSE_VACANCY_POPUP', payload:null})\r\n\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyPopup);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createResponse} from '../../actions/serverConnections'\r\nimport {getUserResponses, getUserAnswers, changeAnswer} from '../../actions/serverConnections'\r\nimport {responseLoaderActivate, responseLoaderDeactivate, answersLoaderActivate, answersLoaderDeactivate} from '../../actions/asyncDispatch'\r\nimport {userTypeToSearchType , getNormalUserType, invertUserType} from '../../scripts/commonScripts'\r\nimport fileUploader from '../../actions/fileUploader';\r\n\r\n\r\n// компонент костыль, когда-нибудь пофикшу\r\nclass ResponsePopup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chosenWorkValue:-1\r\n        };\r\n    }\r\n\r\n    getResponseData = (msg) => {\r\n        let data = {}\r\n        if (this.props.userState.user_type === 'employer'){\r\n            data.employer = this.props.userState.id\r\n            data.vacancy = this.props.item.answer\r\n            data.cv = this.props.item.pk\r\n            data.worker = this.props.item.owner_id\r\n        }\r\n        else{\r\n            data.employer = this.props.item.owner_id\r\n            data.vacancy = this.props.item.pk\r\n            data.cv = this.props.item.answer\r\n            data.worker = this.props.userState.id\r\n        }\r\n        data.message = msg\r\n        data.state = this.props.item.state || 'sent'\r\n\r\n        return data\r\n    }\r\n\r\n    changeWorkValue = (e) =>{\r\n        this.setState({\r\n            chosenWorkValue: e.target.value\r\n        })\r\n    }\r\n\r\n    popupClose = () =>{\r\n        this.props.onCloseResponsePopup()\r\n    }\r\n\r\n    getAvatarFromFirebase = (id, pk, userType) =>{   //пришлось делать кучу изменений состояний, потому что один flutter разработчик решил, что он не будет сохранять url фотографии. \r\n        const storageRef = fileUploader.storage().ref()\r\n        const fileRef = storageRef.child('user-avatar' + id)\r\n        fileRef.getDownloadURL()\r\n        .then((response) => this.props.onSetValuePhoto(response, pk, userType))\r\n        .catch(err => this.props.onSetValuePhoto('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54', pk, userType))\r\n    }\r\n\r\n    makeResponse = (e) => {\r\n        e.preventDefault()\r\n\r\n        const data = this.getResponseData(e.target.responseMessageInput.value)\r\n\r\n        this.props.onMakeResponse(userTypeToSearchType(invertUserType(this.props.userState.user_type)), data)\r\n        this.props.onChangeAnswer(this.props.answerId, userTypeToSearchType(this.props.userState.user_type), 'viewed')\r\n        this.props.onCloseResponsePopup()\r\n        this.props.onNullifyValues()\r\n        this.props.onNullifyAnswers()\r\n\r\n        const userType = getNormalUserType(this.props.userState.user_type) // а это прекрасный костыль, чтобы обойти говнорукость бэкендера. В userState у нас тип юзера employee, а во всех юрлах нам нужен worker\r\n        this.props.onGetUserResponses(userType, this.props.responseState.nextValues, this.props.userState.id, this.getAvatarFromFirebase)\r\n        this.props.onGetUserAnswers(userType, this.props.responseState.nextAnswers, this.props.userState.id, this.getAvatarFromFirebase)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"response-form-popup rounded\" onSubmit={this.makeResponse.bind(this)}>\r\n                <button className=\"close-popup-btn\" onClick={this.popupClose} tabIndex=\"-1\">x</button>\r\n\r\n                <textarea className=\"response-form-popup__textarea rounded\" type=\"text\" name=\"responseMessageInput\" placeholder=\"Сопроводительное письмо\"></textarea>\r\n               \r\n                <input className=\"sup-btn\" type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {\r\n        userState:state.user.user,\r\n        item:ownProps.item,\r\n        answerId:ownProps.answerId,\r\n        responseState:state.response,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onMakeResponse:(type, data)=>{\r\n            dispatch(createResponse(type, data))\r\n        },\r\n        onChangeAnswer:(id, responseType, type) => {\r\n            dispatch(changeAnswer(id,responseType, type))\r\n\r\n        },\r\n        onCloseResponsePopup: () => {\r\n            dispatch({type : 'CLOSE_RESPONSE_POPUP', payload:null})\r\n        },\r\n        onGetUserResponses: (userType, next, userId, getAvatarFromFirebase) => {\r\n            dispatch(responseLoaderActivate())\r\n\r\n            dispatch(getUserResponses(userType, next, userId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data !== 404){\r\n                    dispatch({type : 'RESPONSE_UPDATE_RESULTS_COUNT', payload:data.data.count})\r\n                    dispatch({type : 'RESPONSE_UPDATE_VALUES', payload:data.data.results}) \r\n                    data.data.results.map((item) => {\r\n                        getAvatarFromFirebase(userId, item.id, userType)\r\n                    })\r\n                }\r\n            })\r\n            .then(response => dispatch(responseLoaderDeactivate()))\r\n        },\r\n        onGetUserAnswers: (userType, next, userId, getAvatarFromFirebase) => {\r\n            dispatch(answersLoaderActivate())\r\n\r\n            dispatch(getUserAnswers(userType, next, userId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data !== 404){\r\n                    dispatch({type : 'ANSWERS_UPDATE_RESULTS_COUNT', payload:data.data.count})\r\n                    dispatch({type : 'RESPONSE_UPDATE_ANSWERS', payload:data.data.results}) \r\n                    data.data.results.map((item) => {\r\n                        getAvatarFromFirebase(userId, item.id, userType)\r\n                    })\r\n                }\r\n            })\r\n            .then(response => dispatch(answersLoaderDeactivate()))\r\n        },\r\n        onNullifyValues: () => {\r\n            dispatch({type : 'RESPONSE_NULLIFY_VALUES', payload:null})\r\n        },\r\n        onNullifyAnswers: () => {\r\n            dispatch({type : 'RESPONSE_NULLIFY_ANSWERS', payload:null})\r\n        },\r\n        onSetValuePhoto: (photo, id, userType) => {\r\n            if (userType === 'worker')\r\n            dispatch({type : 'SEARCH_UPDATE_VALUES_PHOTO', payload:{photo:photo, id:id}})\r\n            else \r\n            dispatch({type : 'SEARCH_UPDATE_ANSWERS_PHOTO', payload:{photo:photo, id:id}})\r\n\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsePopup);","export default __webpack_public_path__ + \"static/media/right-arrow.8804e690.svg\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../Loader/Loader'\r\nimport {getUserResponses, getUserAnswers} from '../../actions/serverConnections'\r\nimport {responseLoaderActivate, responseLoaderDeactivate, answersLoaderActivate, answersLoaderDeactivate} from '../../actions/asyncDispatch'\r\nimport {userTypeToUrlUserType, getNormalUserType, userTypeToSearchType, simplifyDate} from '../../scripts/commonScripts'\r\nimport fileUploader from '../../actions/fileUploader';\r\nimport { Link } from 'react-router-dom'\r\nimport './responses.css'\r\nimport dropdownArrow from '../../img/right-arrow.svg'\r\nimport ResponsePopup from './ResponsePopup'\r\nimport { InView } from \"react-intersection-observer\";\r\n\r\nimport VacancyPopup from '../VacancyPopup/VacancyPopup'\r\n\r\n// здесь пришлось делать два запроса на одной странице, потому что бекендер ленивое чмо (ОБА ЕЩЕ И ЧЕРЕЗ ПАГИНАЦИЮ)\r\n// с пагинацией пока не очень понятно что делать. \r\n// прокачана стрессоустойчивость и решение нестандартаных задач\r\n\r\nclass Responses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openedId:-1\r\n        };\r\n    }\r\n\r\n    getAvatarFromFirebase = (id, pk) =>{   //пришлось делать кучу изменений состояний, потому что один flutter разработчик решил, что он не будет сохранять url фотографии. \r\n        const storageRef = fileUploader.storage().ref()\r\n        const fileRef = storageRef.child('user-avatar' + id)\r\n        fileRef.getDownloadURL()\r\n        .then((response) => this.props.onSetValuePhoto(response, pk))\r\n        .catch(err => this.props.onSetValuePhoto('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54', pk))\r\n    }\r\n\r\n    invertUserType(type){\r\n        return type === 'employer' ? 'worker' : 'employer'\r\n    }\r\n\r\n    openVacancyInfo = (id) =>{\r\n        this.props.onOpenVacancyInfo(id)\r\n    }\r\n    \r\n    openResponsePopup = (index, state) => {\r\n        this.props.onOpenResponsePopup(index, state)\r\n    }\r\n\r\n    getInvites = () =>{\r\n        return this.props.responseState.responseAnswers.filter((item) => {\r\n            return this.props.responseState.responseValues.find(value => value.vacancy === item.vacancy && value.cv === item.cv) === undefined\r\n        })\r\n    }\r\n\r\n    getResults = () =>{\r\n        if (this.props.responseState.nextValues !== null || this.props.responseState.nextAnswers !== null){\r\n            const userType = getNormalUserType(this.props.userState.user_type) // а это прекрасный костыль, чтобы обойти говнорукость бэкендера. В userState у нас тип юзера employee, а во всех юрлах нам нужен worker\r\n            this.props.onGetUserResponses(userType, this.props.responseState.nextValues, this.props.userState.id, this.getAvatarFromFirebase)\r\n            console.log(this.props.responseState.nextValues, this.props.responseState.nextAnswers)\r\n            this.props.onGetUserAnswers(userType, this.props.responseState.nextAnswers, this.props.userState.id, this.getAvatarFromFirebase)\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onNullifyValues()\r\n        this.props.onNullifyAnswers()\r\n        console.log(this.props.userState.id)\r\n        setTimeout(()=>{this.getResults()}, 0)\r\n        \r\n    }\r\n\r\n    getAnswer(item){\r\n        return this.props.responseState.responseAnswers.find(answer => answer.vacancy === item.vacancy && answer.cv === item.cv)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.responseState.responseLoading || this.props.responseState.answersLoading) \r\n            return <Loader active='active'></Loader>\r\n\r\n        else\r\n            return (\r\n                <section className=\"responses\">\r\n                    <div className=\"responses__header\">\r\n                        <h2 className=\"f-extra-large bold\">Ваши отклики и приглашения:</h2>\r\n                    </div>\r\n                    {this.props.responseState.responseValues.length !== 0 || this.props.responseState.responseAnswers.length !== 0 ? \r\n                        <ul className=\"responses__list rounded\">\r\n                            {console.log(this.getInvites())}\r\n                        {this.getInvites().map((item, index)=> \r\n                            <li key={index} className=\"responses__list-el rounded\">\r\n                            <div className=\"responses__list-el__header\">\r\n                                <button className=\"responses__list-el__header__link\" onClick={this.openVacancyInfo.bind(this, item.vacancy)}>\r\n                                    <h3 className=\"underline-link f-medium semi\">{item.vacancy_name}</h3>\r\n                                </button>\r\n                                <button className=\"responses__list-el__header__btn\"></button>\r\n\r\n                                <p className=\"responses__list-el__header__response-date semi\">{simplifyDate(item.date_response)}</p>\r\n                                \r\n                                <p className=\"green\">Приглашение</p>\r\n                            </div>\r\n\r\n                            <div className=\"responses__list-el__body opened\">\r\n                                <div className=\"responses__reciever responded\">\r\n                                    <Link to={\"/\"+userTypeToUrlUserType(this.invertUserType(this.props.userState.user_type))+\"/\" + item[this.invertUserType(this.props.userState.user_type)]}>\r\n                                        <img className=\"responses__avatar\" src={item[this.invertUserType(this.props.userState.user_type)+ '_avatar'] === '' ? 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54' : item[this.invertUserType(this.props.userState.user_type)+'_avatar']} alt=\"\" />\r\n                                    </Link>\r\n                                        <p className=\"responses__message rounded\">{item.message}</p>\r\n                                    \r\n                                    <span className=\"responses__decoration\"></span>\r\n                                </div>\r\n\r\n                                <div className=\"responses__sender controls\">\r\n                                    <button className=\"sup-btn\" onClick={this.openResponsePopup.bind(this, index, 'accepted')}>принять</button>\r\n                                    <button className=\"sup-btn\" onClick={this.openResponsePopup.bind(this, index, 'declined')}>отказать</button>\r\n                                    {this.props.responseState.openedResponseId === index ? \r\n                                    <ResponsePopup\r\n                                    answerId = {item.id}\r\n                                    item ={{\r\n                                        'owner_id':item[this.invertUserType(this.props.userState.user_type)],\r\n                                        'pk':item[userTypeToSearchType(this.invertUserType(this.props.userState.user_type))],\r\n                                        'answer':item[userTypeToSearchType(this.props.userState.user_type)],\r\n                                        'state': this.props.responseState.responseSendState\r\n                                    }}></ResponsePopup> : ''}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"responses__list-el__footer\"></div>\r\n\r\n                        </li>\r\n                        )}\r\n                        {this.props.responseState.responseValues.map((item, index)=>{\r\n                        return (\r\n                        <li key={index} className=\"responses__list-el rounded\">\r\n                            <div className=\"responses__list-el__header\">\r\n                                <button className=\"responses__list-el__header__link\" onClick={this.openVacancyInfo.bind(this, item.vacancy)}>\r\n                                    <h3 className=\"underline-link f-medium semi\">{item.vacancy_name}</h3>\r\n                                </button>\r\n                                <button className=\"responses__list-el__header__btn\"></button>\r\n\r\n                                <p className=\"responses__list-el__header__response-date semi\">{simplifyDate(item.date_response)}</p>\r\n                                {\r\n                                this.getAnswer(item) !== undefined ?\r\n                                    this.getAnswer(item).state === 'viewed' ?\r\n                                        item.state === 'accepted' ? \r\n                                            <p className=\"green\">Приглашение</p> :\r\n                                            <p className=\"red\">Отказ</p> :\r\n                                        this.getAnswer(item).state === 'declined' ? \r\n                                            <p className=\"red\">Отказ</p>\r\n                                        : this.props.responseState.responseAnswers.find(answer => answer.vacancy === item.vacancy && answer.cv === item.cv).state === 'accepted' ? \r\n                                            <p className=\"green\">Приглашение</p>\r\n                                    : ''\r\n                                : ''\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"responses__list-el__body opened\">\r\n                                <div className={\"responses__reciever \" + (item.state === 'declined' || item.state === 'accepted' || item.state === 'viewed' ? 'responded' : '')}>\r\n                                    <Link to={\"/\"+userTypeToUrlUserType(this.invertUserType(this.props.userState.user_type))+\"/\" + item[this.invertUserType(this.props.userState.user_type)]}>\r\n                                        <img className=\"responses__avatar\" src={item[this.invertUserType(this.props.userState.user_type)+ '_avatar'] === '' ? 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54' : item[this.invertUserType(this.props.userState.user_type)+'_avatar']} alt=\"\" />\r\n                                    </Link>\r\n                                    {item.state === 'sent' ? \r\n                                        <p className=\"responses__message rounded\">Ответа пока нет :( </p>\r\n\r\n                                    : item.state === 'accepted' || item.state === 'declined' || item.state === 'viewed' ?\r\n                                        <p className=\"responses__message rounded responded\">{this.getAnswer(item) !== undefined ? this.getAnswer(item).message : ''}</p>\r\n                                    :''}\r\n                                    \r\n                                    <span className=\"responses__decoration\"></span>\r\n                                </div>\r\n                                \r\n                                {/* <div className=\"responses-control-block\">\r\n                                    <img className=\"responses-control-block__arrow\" src={dropdownArrow} alt=\"dropdown-arrow\" />\r\n                                    <button onClick={this.openResponseInfo.bind(this, item.id)}>Развернуть</button>\r\n                                </div> */}   \r\n                                {/* тут я мучаюсь с индексом */}\r\n\r\n                                <div className=\"responses__sender responded\">\r\n                                    <p className=\"responses__message rounded responded\">\r\n                                        {item.message}\r\n                                    </p>\r\n                                    <span className=\"responses__decoration \"></span>\r\n\r\n                                    <Link to={\"/\" + userTypeToUrlUserType(this.props.userState.user_type) + \"/\" + this.props.userState.id}>\r\n                                        <img className=\"responses__avatar\" src={this.props.userAvatar} alt=\"\" />\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"responses__list-el__footer\"></div>\r\n                        </li>)\r\n                        })}\r\n\r\n                    </ul>\r\n                    : <p>Откликов нет :(</p>}\r\n                    {this.props.responseState.openedVacancyId !== -1 ? <VacancyPopup id={this.props.responseState.openedVacancyId}></VacancyPopup> : ''}\r\n                    <InView as=\"div\" onChange={(inView, entry) => {\r\n                        if (inView) this.getResults()}}>\r\n                    </InView>\r\n                </section>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState:state.user.user,\r\n        responseState:state.response,\r\n        userAvatar:state.nav.avatar\r\n    }\r\n}\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onGetUserResponses: (userType, next, userId, getAvatarFromFirebase) => {\r\n            dispatch(responseLoaderActivate())\r\n\r\n            dispatch(getUserResponses(userType, next, userId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data !== 404){\r\n                    dispatch({type : 'RESPONSE_UPDATE_RESULTS_COUNT', payload:data.data.count})\r\n                    dispatch({type : 'RESPONSE_UPDATE_VALUES', payload:data.data.results}) \r\n                    data.data.results.map((item) => {\r\n                        getAvatarFromFirebase(userId, item.id)\r\n                    })\r\n                }\r\n            })\r\n            .then(response => dispatch(responseLoaderDeactivate()))\r\n        },\r\n        onGetUserAnswers: (userType, next, userId, getAvatarFromFirebase) => {\r\n            dispatch(answersLoaderActivate())\r\n\r\n            dispatch(getUserAnswers(userType, next, userId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data !== 404){\r\n                    dispatch({type : 'ANSWERS_UPDATE_RESULTS_COUNT', payload:data.data.count})\r\n                    dispatch({type : 'RESPONSE_UPDATE_ANSWERS', payload:data.data.results}) \r\n                    data.data.results.map((item) => {\r\n                        getAvatarFromFirebase(userId, item.id)\r\n                    })\r\n                }\r\n            })\r\n            .then(response => dispatch(answersLoaderDeactivate()))\r\n        },\r\n        onSetValuePhoto: (photo, id) => {\r\n            dispatch({type : 'RESPONSE_UPDATE_ANSWERS_PHOTO', payload:{photo:photo, id:id}})\r\n        },\r\n        onNullifyValues: () => {\r\n            dispatch({type : 'RESPONSE_NULLIFY_VALUES', payload:null})\r\n        },\r\n        onNullifyAnswers: () => {\r\n            dispatch({type : 'RESPONSE_NULLIFY_ANSWERS', payload:null})\r\n        },\r\n        onOpenResponsePopup: (index, state) => {\r\n            console.log(index)\r\n            dispatch({type : 'RESPONSE_OPEN_RESPONSE_POPUP', payload:{index:index, state:state}})\r\n        },\r\n        onOpenVacancyInfo: (id) =>{\r\n            dispatch({type : 'OPEN_VACANCY_POPUP', payload:id})\r\n        }\r\n\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Responses);","import { ObserverInstanceCallback } from './index';\n\nconst ObserverMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: Map<Element, string> = new Map();\n\nlet rootId = 0;\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root?: Element | null) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n) {\n  if (!element) return () => {};\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const { threshold, root, rootMargin, trackVisibility, delay } = this.props;\n\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay,\n    });\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      tag,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || tag || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n"],"sourceRoot":""}