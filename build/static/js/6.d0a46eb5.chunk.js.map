{"version":3,"sources":["components/VacancyPopup/VacancyPopup.js","components/CompanyProfile/Main/Main.js","components/CompanyProfile/Side/Side.js","components/CompanyProfile/Vacancies/VacancyRedactPopup/VacancyRedactPopup.js","components/CompanyProfile/Vacancies/Vacancies.js","components/CompanyProfile/ProfileRedactPopup/ImageCropper.js","components/CompanyProfile/ProfileRedactPopup/MainPlaceholder.js","components/CompanyProfile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionBaseInfo.js","components/CompanyProfile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionImages.js","components/CompanyProfile/ProfileRedactPopup/ProfileRedactPopup.js","components/CompanyProfile/CompanyProfile.js"],"names":["VacancyPopup","this","props","onGetVacancy","id","e","preventDefault","onCloseVacancyPopup","console","log","Object","keys","openedVacancy","length","className","onClick","popupClose","bind","bg_header_color","vacancy_name","salary","getGradeValues","grade","pub_date","slice","industry","work_type","map","el","getWorkTypeValues","join","leading","body","index","title","subtitle","points","point","ind","trailing","tags","tag","tabIndex","Component","connect","state","ownProps","buf","dispatch","getVacancy","type","payload","Main","toggleMapPopup","mapPopupState","setState","redactProfile","onPopupRedactProfileActivate","userState","user","user_type","returnValue","hasProfile","style","backgroundImage","checkOnEmpty","userData","profile_background","personalBackground","src","photo_url","placeholderAvatar","alt","editIcon","name","about","address","LeafletMap","phone","href","goPhrase","plusIcon","onSubjectChangeToEmployer","Side","VacancyRedactPopup","changeVacancyName","check","checkStringInput","target","value","onVacancyNameChange","vacancyIndex","onInputMistake","changeGradeValue","onGradeValueChange","changeSalary","checkIntInput","onSalaryValueChange","parseInt","changeIndustryValue","onIndustryValueChange","workTypeDelete","onWorkTypeDelete","vacancyWorkType","parentElement","dataset","key","workTypeInput","indexOf","onWorkTypeAdd","pointInput","split","keyCode","vacancyPoints","onPointAdd","pointDelete","onPointDelete","redactAboutBody","onRedactAboutBody","addNewAboutBody","onAddAboutBody","deleteAboutBody","onAboutBodyDelete","closest","activateAboutBody","onAboutBodyActivate","deactivateAboutBody","onAboutBodyDeactivate","changeLeadingValue","onLeadingValueChange","changeTrailingValue","onTrailingValueChange","changeExperienceValue","onExperienceValueChange","changeAddressValue","onAddressValueChange","LeafletMapData","lat","lng","saveVacancyFormChanges","data","vacancyPlaceholder","experience","vacancyData","vacancies","onSaveVacancyFormChanges","tagDelete","onTagDelete","tagInput","vacancyTags","onTagAdd","closeRedactPopup","onPopupRedactVacancyDeactivate","deleteVacancy","onPopupRedactVacancyDelete","changeVacancyHeaderColor","onVacancyHeaderColorChange","vacancyState","addStyle","required","placeholder","onChange","closeIcon","deleteIcon","industries","item","data-key","aboutBodies","vacancyBuf","activeBodyId","toString","onSubmit","onKeyDown","vacancy","newVacancy","bufPoints","leafletMap","onAddVacancy","addVacancy","then","newVacancyId","userId","getUserVacancies","color","tagId","workType","workTypeId","text","pointId","vacancyId","redactVacancy","mistakeStr","bodyId","Vacancy","fetch","headers","response","json","user_id","onPopupNewVacancyActivate","onPopupRedactVacancyActivate","logged","openedVacancyId","responseState","newVacancyData","ImageCropper","cropUserImage","file","maxWidth","maxHeight","imageType","onDeactivateCropper","setTimeout","undefined","onActivateCropper","loadImageToFirebase","image","fileRef","fileUploader","storage","ref","child","put","getDownloadURL","onChangeAvatar","onChangePersonalBackground","getCropperData","cropperData","instance","croppedImage","dataURLtoBlob","getCroppedCanvas","toDataURL","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","loadUserImage","files","deactivateCropper","cropperFile","onSetCropperFile","cropperActive","width","cropperMaxWidth","height","cropperMaxHeight","overflow","minHeight","backgroundColor","aspectRatio","preview","viewMode","dragMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","setCropperInstance","uploadIcon","companyProfile","cropper","fileUrl","MainPlaceholder","avatarPhoto","userName","userDescription","userAddress","userPhones","placeholderData","onUpdateUserName","profileState","onUsernameChange","username","onDescriptionChange","onAddressChange","onPhoneAdd","onPhoneDelete","phoneId","deletePhone","input","htmlFor","onSaveNewAddress","phonesInput","maxLength","dragOver","dragEnter","dragLeave","fileDrop","dataTransfer","onDragOver","onDragEnter","onDragLeave","onDrop","event","hidden","cropIcon","ProfileRedactPopup","saveRedactProfileFormChanges","onUpdateEmployer","onGetEmployer","onHasProfile","onPopupRedactProfileDeactivate","section","onChangeSection","popupRedactActiveSection","changeSection","baseInfoIcon","personalizationIcon","loaderActive","nav","popup","onActivateLoader","onDeactivateLoader","onCreateNewEmployer","createNewEmployer","updateEmployer","getEmployer","Profile","initPlaceholder","onInitializeProfileData","variable","def","userFetchId","String","onGetLoggedEmployerFetch","history","onGetVacancies","Vacancies","Loader","active","params","resumeData","cvs","profile_link","push","fetchId"],"mappings":"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","file":"static/js/6.d0a46eb5.chunk.js","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {getVacancy} from '../../actions/serverConnections'\r\nimport {getGradeValues, getWorkTypeValues} from '../../scripts/commonScripts'\r\nimport { connect } from 'react-redux'\r\nimport './vacancyPopup.css'\r\n\r\nclass VacancyPopup extends Component {\r\n    componentDidMount(){\r\n        this.props.onGetVacancy(this.props.id)\r\n    }\r\n\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onCloseVacancyPopup();\r\n    }\r\n\r\n    render() {\r\n        console.log(Object.keys(this.props.openedVacancy).length)\r\n        if (Object.keys(this.props.openedVacancy).length !== 0)\r\n        return (\r\n            <div className=\"blur-box active\" onClick={this.popupClose.bind(this)}>\r\n                <div className=\"resume resumes-list-el popup-wrapper rounded\">\r\n                    <section className=\"resume-main\">\r\n                        <div className={\"resume__header white top-rounded \" + this.props.openedVacancy.bg_header_color}>\r\n                            <div className=\"resume__header-top\">\r\n                                <h2 className=\"resume__header__name bold f-large\">{this.props.openedVacancy.vacancy_name}</h2>\r\n                                <p><span className=\"resume__header__salary bold f-medium\">{this.props.openedVacancy.salary}</span><span className=\"bold f-medium\"> руб.</span></p>\r\n                            </div>\r\n                            <div className=\"resume__header-bottom\">\r\n                                <p className=\"resume__header__grade\">{getGradeValues(this.props.openedVacancy.grade)}</p>\r\n\r\n                                <p className=\"resume__publication-date sup\">{this.props.openedVacancy.pub_date.slice(0,10)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"resume__main-info bottom-rounded full-width\">\r\n                            <p className=\"resume__industry f-pre\">{this.props.openedVacancy.industry}</p>\r\n\r\n                            <p className=\"resume__work-type\">{this.props.openedVacancy.work_type.map((el)=>getWorkTypeValues(el)).join(', ')}</p>\r\n\r\n                            <div className=\"vacancy__about\">\r\n                                <p>{this.props.openedVacancy.leading}</p>\r\n                                <ul className=\"vacancy__about__body-list\">\r\n                                    {this.props.openedVacancy.body.map((el, index)=>\r\n                                        <li key={index}>\r\n                                            <h3 className=\"bold f-large\">{el.title}</h3>\r\n\r\n                                            <h4 className=\"bold f-medium\">{el.subtitle}</h4>\r\n\r\n                                            <ul className=\"vacancy__about__body-list__points-list\">\r\n                                            {el.points.map((point, ind) => \r\n                                                <li key={ind}>{point}</li>    \r\n                                            )}\r\n                                            </ul>\r\n                                        </li>\r\n                                    )}\r\n                                </ul>\r\n                                <p>{this.props.openedVacancy.trailing}</p>\r\n                            </div>\r\n                            \r\n                            <ul className=\"resume__tags-list\">\r\n                                {this.props.openedVacancy.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button className=\"close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        else return ''\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    openedVacancy:state.buf.openedVacancy,\r\n    id:ownProps.id\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onGetVacancy: (id) => {\r\n        dispatch(getVacancy(id))\r\n    },\r\n    onCloseVacancyPopup: () => {\r\n        dispatch({type : 'CLOSE_VACANCY_POPUP', payload:null})\r\n\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyPopup);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport photoRedactIcon from '../../../img/photovector.svg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\n\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\nimport LeafletMap from '../../leafletMap/LeafletMap'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapPopupState:''\r\n        };\r\n    }\r\n\r\n    toggleMapPopup = () =>{\r\n        if (this.state.mapPopupState === ''){\r\n            this.setState({mapPopupState:'active'})\r\n        }\r\n        else this.setState({mapPopupState:''})\r\n    }\r\n\r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n    \r\n    render() {\r\n        if (this.props.userState.hasProfile){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                        <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n\r\n                        {this.props.userState.user.id === this.props.userData.user ? (\r\n                            <button className=\"profile-redact-btn\"  onClick={this.redactProfile}>\r\n                                <img src={editIcon} alt=\"editIcon\"/>\r\n                            </button>\r\n                        ) : ('')}\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        {this.props.userData.address?\r\n                        <div className=\"info__common-info\">\r\n                            <div className=\"address__popup-block\">\r\n                                <span className=\"living__place underline-link\" onClick={this.toggleMapPopup}>{this.props.userData.address.name}</span>\r\n\r\n                                {this.state.mapPopupState === 'active' ? \r\n                                    <div className ={\"map-popup rounded\"}>\r\n                                        <button className=\"map-popup__closer-btn\" onClick={this.toggleMapPopup}>x</button>\r\n                                        <LeafletMap address={this.props.userData.address}></LeafletMap>\r\n                                    </div>\r\n                                 : ''}\r\n                            </div>\r\n                        </div>:''}\r\n                        \r\n                        \r\n                        {this.props.userData.phone ? (\r\n                            <div className=\"info__contacts\">\r\n                                <p>Контакты:</p>\r\n                                <div className=\"info__contacts__phones\">\r\n                                    {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                                </div>\r\n                            </div>):('')}\r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user)\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-add-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n        else return (\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Профиль пуст!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_EMPLOYER_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react'\r\nimport './side.css'\r\n\r\nexport default class Side extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side rounded\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addVacancy, redactVacancy, getUserVacancies, deleteVacancy } from '../../../../actions/serverConnections'\r\nimport plusIcon from '../../../../img/plusIcon.svg'\r\nimport closeIcon from '../../../../img/close.svg'\r\nimport deleteIcon from '../../../../img/trash.svg'\r\nimport editIcon from '../../../../img/edit.svg'\r\nimport industries from '../../../../jsonFiles/industries.json'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\nimport {checkStringInput, checkIntInput, getWorkTypeValues} from '../../../../scripts/commonScripts.js'\r\n\r\n\r\nclass VacancyRedactPopup extends Component {\r\n    changeVacancyName = (e) =>{\r\n        const check = checkStringInput(e.target.value, 35, 0, /^[a-zA-Z]*^$/);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onVacancyNameChange(e.target.value, this.props.vacancyIndex) : \r\n        (this.props.onInputMistake(check, e.target));\r\n    }\r\n\r\n    changeGradeValue = (e) =>{\r\n        this.props.onGradeValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeSalary = (e) =>{\r\n        const check = checkIntInput(e.target.value, 9999999, null);\r\n        check === \"pass\" ? \r\n        this.props.onSalaryValueChange(parseInt(e.target.value), this.props.vacancyIndex):\r\n        (this.props.onInputMistake(check, e.target))\r\n\r\n    }\r\n\r\n    changeIndustryValue = (e) =>{\r\n        this.props.onIndustryValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    workTypeDelete = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onWorkTypeDelete(this.props.vacancyWorkType[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    workTypeInput = (e) =>{\r\n        const value = e.target.value\r\n        console.log(value)\r\n        e.preventDefault()\r\n        if(this.props.vacancyWorkType.length > 5){\r\n\r\n        }\r\n        else if(this.props.vacancyWorkType.indexOf(value) === -1){\r\n            this.props.onWorkTypeAdd(value, this.props.vacancyIndex)\r\n        }\r\n    }\r\n\r\n    pointInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.vacancyPoints.length > 10){\r\n\r\n            }\r\n            else if(this.props.vacancyPoints.indexOf(value) === -1){\r\n                this.props.onPointAdd(value, this.props.vacancyIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    pointDelete = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPointDelete(this.props.vacancyPoints[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    redactAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onRedactAboutBody({\r\n            title:e.target.title.value,\r\n            subtitle:e.target.subtitle.value,\r\n            points:this.props.vacancyPoints\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    addNewAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAddAboutBody({\r\n            title:'Наши/ваши требования/предложения',\r\n            subtitle:'',\r\n            points:[]\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    deleteAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyDelete(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    activateAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyActivate(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    deactivateAboutBody = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onAboutBodyDeactivate(e.target.closest('.body-block').dataset.key, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeLeadingValue = (e) =>{\r\n        this.props.onLeadingValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeTrailingValue = (e) =>{\r\n        this.props.onTrailingValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeExperienceValue = (e) => {\r\n        this.props.onExperienceValueChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    changeAddressValue = () => {\r\n        this.props.onAddressValueChange({\r\n            name:this.props.LeafletMapData.name,\r\n            lat:this.props.LeafletMapData.lat,\r\n            lng:this.props.LeafletMapData.lng\r\n        }, this.props.vacancyIndex)\r\n    }\r\n\r\n    saveVacancyFormChanges = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            \"user_id\": this.props.userData.id,\r\n            \"vacancy_name\": this.props.vacancyPlaceholder.vacancy_name,\r\n            \"industry\": this.props.vacancyPlaceholder.industry || 'Не указано',\r\n            \"grade\": this.props.vacancyPlaceholder.grade,\r\n            \"salary\": this.props.vacancyPlaceholder.salary === null ? -1 : this.props.vacancyPlaceholder.salary,\r\n            \"work_type\": this.props.vacancyPlaceholder.work_type,\r\n            \"experience\": this.props.vacancyPlaceholder.experience,\r\n            \"address\": this.props.vacancyPlaceholder.address,\r\n            \"tags\": this.props.vacancyPlaceholder.tags,\r\n            \"leading\":this.props.vacancyPlaceholder.leading,\r\n            \"trailing\":this.props.vacancyPlaceholder.trailing,\r\n            \"body\":this.props.vacancyPlaceholder.body,\r\n            \"bg_header_color\":this.props.vacancyPlaceholder.bg_header_color\r\n        }\r\n        if (this.props.vacancyData.vacancies.length === this.props.vacancyIndex || this.props.vacancyData.vacancies.length === 0){\r\n            this.props.onSaveVacancyFormChanges(data, -1, this.props.userData.id, this.props.vacancyPlaceholder.vacancy_name)\r\n        }\r\n        else this.props.onSaveVacancyFormChanges(data, this.props.vacancyIndex, this.props.userData.id, this.props.vacancyPlaceholder.id)\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    tagDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onTagDelete(this.props.vacancyPlaceholder.tags[e.target.parentElement.dataset.key], this.props.vacancyIndex)\r\n    }\r\n\r\n    tagInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.vacancyPlaceholder.tags.length > 10){\r\n\r\n            }\r\n            else if(this.props.vacancyTags.indexOf(value) === -1){\r\n                this.props.onTagAdd(value, this.props.vacancyIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    closeRedactPopup = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactVacancyDeactivate(this.props.vacancyIndex)\r\n    }\r\n\r\n    deleteVacancy = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactVacancyDelete(this.props.vacancyData.vacancies[this.props.vacancyIndex].id, this.props.userData.id)\r\n    }\r\n\r\n    changeVacancyHeaderColor = (e) =>{\r\n\r\n        e.preventDefault()\r\n        this.props.onVacancyHeaderColorChange(e.target.value, this.props.vacancyIndex)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"rounded resume-redact-block \" + this.props.vacancyState} style={this.props.addStyle}>\r\n                <div className={\"resume__header white top-rounded \" + this.props.vacancyPlaceholder.bg_header_color}>\r\n                    <div className=\"resume__header-top\">\r\n                        <input required type=\"text\" className=\"resume__header__name bold f-large white\" placeholder=\"Название профессии\" onChange={this.changeVacancyName.bind(this)} value={this.props.vacancyPlaceholder.vacancy_name}/>\r\n                        <p className=\"resume__header__salary\"><input required type=\"number\" className=\"resume__header__salary-input bold f-medium white\" placeholder=\"Желаемая зарплата\" onChange={this.changeSalary.bind(this)} value={this.props.vacancyPlaceholder.salary === 0 || this.props.vacancyPlaceholder.salary === -1 || this.props.vacancyPlaceholder.salary === null ? '' :this.props.vacancyPlaceholder.salary }/><span className=\"bold f-medium\"> руб.</span></p>\r\n                    </div>\r\n                    <div className=\"resume__header-bottom\">\r\n                        <p className=\"resume__header__grade\">\r\n                            <select required className=\"white resume__header__grade-input\" id={\"resume-gradeInput-\"+this.props.index} name={\"resume-gradeInput-\"+this.props.index} onChange={this.changeGradeValue.bind(this)} value={this.props.vacancyPlaceholder.grade}>\r\n                                <option value=\"internship\">Стажер</option>\r\n                                <option value=\"junior\">Начинающий специалист</option>\r\n                                <option value=\"middle\">Специалист</option>\r\n                                <option value=\"senior\">Главный специалист</option>\r\n                                <option value=\"director\">Управляющий отдела</option>\r\n                                <option value=\"senior-director\">Генеральный директор</option>\r\n                            </select>\r\n                        </p>\r\n                        <ul className=\"resume__header-color\">\r\n                            <button className={\"resume__header-color-el bg-light-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-light-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-light-black\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-gray \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-blue-gray' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-blue-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-blue-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-blue-black\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-gray \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-violet-gray' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-violet-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-black \" + (this.props.vacancyPlaceholder.bg_header_color === 'bg-violet-black' ? ('selected'):(''))} onClick={this.changeVacancyHeaderColor} value=\"bg-violet-black\"/>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"resume-close-btn\"  onClick={this.closeRedactPopup}>\r\n                    <img src={closeIcon} alt=\"closeIcon\"/>\r\n                </button>\r\n                {this.props.vacancyIndex !== this.props.vacancyData.vacancies.length ?(\r\n                    <button className=\"resume-delete-btn\"  onClick={this.deleteVacancy}>\r\n                        <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                    </button>\r\n                ):('')}\r\n                \r\n\r\n                <div className=\"resume__main-info rounded\">\r\n                    <p className=\"resume__industry f-pre\">\r\n                        <span>Отрасль: </span>\r\n                        <select required id={\"resume-industryInput-\"+this.props.index} name={\"resume-industryInput-\"+this.props.index} onChange={this.changeIndustryValue.bind(this)} value={this.props.vacancyPlaceholder.industry}>\r\n                            {industries.map((item)=>{\r\n                                return <option value={item.name}>{item.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </p>\r\n                    <div className=\"resume__address\">\r\n                        <LeafletMap address={this.props.vacancyPlaceholder.address}></LeafletMap>\r\n                        <div className=\"resume__address__data-block\">\r\n                            <button className=\"highlighted sup-btn\" onClick={this.changeAddressValue}>Сохранить</button>\r\n                            <span>{this.props.vacancyPlaceholder.address.name}</span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"resume__work-type-block input-list\">\r\n                        <p className=\"input-label\">Типы работ:</p>\r\n\r\n                        <ul className=\"resume__work-type-list\">\r\n                            {this.props.vacancyWorkType.map((value, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{getWorkTypeValues(value)}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.workTypeDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"resume__work-type input-list\">\r\n                            Выберите, чтобы добавить...\r\n                            <select className=\"select-input\" name=\"workTypeInput\" id=\"workTypeInput\" onChange={this.workTypeInput.bind(this)}>\r\n                                <option value=\"part-day\">неполный день</option>\r\n                                <option value=\"full-day\">полный день</option>\r\n                                <option value=\"part-time\">полная занятность</option>\r\n                                <option value=\"full-time\">волонтерство</option>\r\n                                <option value=\"one-time-job\">разовое задание</option>\r\n                                <option value=\"flexible-schedule\">гибкий график</option>\r\n                                <option value=\"shift-schedule\">сменный график</option>\r\n                                <option value=\"shift-method\">вахтовый метод</option>\r\n                                <option value=\"remote\">удаленная работа</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"textarea-field\">\r\n                        <p>Вступление</p>\r\n                        <textarea className=\"popup__textarea-input\" name=\"leadingInput\" id=\"leadingInput\" onChange={this.changeLeadingValue.bind(this)} value={this.props.vacancyPlaceholder.leading}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"vacancy__about\">    \r\n                        {this.props.aboutBodies.map((item, index) => {\r\n                            if (this.props.vacancyBuf.activeBodyId === index.toString())\r\n                            return(\r\n                            <form className=\"body-block rounded\" key={index} data-key={index} onSubmit={this.redactAboutBody}>\r\n                                <div className=\"about__body-inputs f-pre\">\r\n                                    <div className=\"about__body-inputs__header\">\r\n                                        <input className=\"highlighted\" type=\"text\" placeholder=\"Заголовок\" name=\"title\" id=\"title\"/>\r\n                                        <div className=\"body-controls\">\r\n                                            <button className=\"body-redact-btn\" onClick={this.deactivateAboutBody}>\r\n                                                <img src={closeIcon} alt=\"closeIcon\"/>\r\n                                            </button>\r\n\r\n                                            <button className=\"body-delete-btn\" onClick={this.deleteAboutBody}>\r\n                                                <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <input className=\"semi\" type=\"text\" placeholder=\"Подзаголовок\" name=\"subtitle\" id=\"subtitle\"/>\r\n\r\n                                    <div className=\"about__points-block input-list\">\r\n                                        {this.props.vacancyPoints.length !== 0 ?\r\n                                        <ul className=\"about__points-list rounded\">\r\n                                            {this.props.vacancyPoints.map((point, index)=>{\r\n                                                return (\r\n                                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                                        <span>{point}</span>\r\n                                                        <button className=\"el-block__delete-el\" onClick={this.pointDelete}>x</button>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul> : ''}\r\n                                        \r\n                                        <p className=\"about__point input-list\">\r\n                                            <input type=\"text\" className=\"input-list__input-block\" placeholder=\"Элемент списка\" onKeyDown={this.pointInput}/>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <input className=\"form-submit-btn f-large rounded\" type=\"submit\" value=\"Сохранить изменения\"></input>\r\n                                </div>\r\n                                \r\n                            </form>)\r\n                            else return (\r\n                                <div className=\"body-block rounded body-block-cut\" key={index} data-key={index}>\r\n                                    <p className=\"highlighted\">{item.title}</p>\r\n                                    <div className=\"body-controls\">\r\n                                        <button className=\"body-redact-btn\" onClick={this.activateAboutBody}>\r\n                                            <img src={editIcon} alt=\"editIcon\"/>\r\n                                        </button>\r\n\r\n                                        <button className=\"body-delete-btn\" onClick={this.deleteAboutBody}>\r\n                                            <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>)\r\n                        })}\r\n                            \r\n                        <div className=\"vacancy__about__add-block\">\r\n                            <p>Добавить блок</p>\r\n\r\n                            <button className=\"body-add-btn\" onClick={this.addNewAboutBody}>\r\n                                <img src={plusIcon} alt=\"plusIcon\"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"textarea-field\">\r\n                        <p>Завершение</p>\r\n                        <textarea className=\"popup__textarea-input\" name=\"trailingInput\" id=\"trailingInput\" onChange={this.changeTrailingValue.bind(this)} value={this.props.vacancyPlaceholder.trailing}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"resume__tags-block input-list\">\r\n                        <ul className=\"resume__tags-list\">\r\n                            {this.props.vacancyTags.map((tag, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{tag}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.tagDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <input className=\"resume__tags-input input-list__input-block\" type=\"text\" onKeyDown={this.tagInput.bind(this)} placeholder=\"Введите тег и нажмите пробел...\"/>\r\n                    </div>\r\n                    \r\n                    <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveVacancyFormChanges}>Сохранить изменения</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    let vacancyPlaceholder\r\n    if (ownProps.index === state.vacancy.vacancies.length) {vacancyPlaceholder = state.vacancy.newVacancy}\r\n    else {vacancyPlaceholder = state.vacancy.placeholder[ownProps.index]}\r\n    return {\r\n        userData: state.user.user,\r\n        vacancyData: state.vacancy,\r\n        vacancyPlaceholder: vacancyPlaceholder,\r\n        vacancyTags: vacancyPlaceholder.tags,\r\n        vacancyWorkType:vacancyPlaceholder.work_type,\r\n        vacancyState: vacancyPlaceholder.state,\r\n        vacancyPoints: state.vacancy.buf.bufPoints,\r\n        vacancyIndex: ownProps.index,\r\n        vacancyBuf:state.vacancy.buf,\r\n        aboutBodies:vacancyPlaceholder.body,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddVacancy: (vacancyData) => {\r\n            dispatch(addVacancy(vacancyData))\r\n            .then((data)=>{\r\n                if (data.newVacancyId !== null && data.newVacancyId!=='404'){\r\n                }\r\n            })\r\n        },\r\n        onPopupRedactVacancyDeactivate: (index) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE', payload:index})\r\n        },\r\n        onPopupRedactVacancyDelete: (index, userId) => {\r\n            dispatch(deleteVacancy(index))\r\n            .then(data => {\r\n                dispatch(getUserVacancies(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onVacancyHeaderColorChange: (color, vacancyIndex) =>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_COLOR', payload:{'color': color, 'index': vacancyIndex}})\r\n        },\r\n        onTagAdd: (tag, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_TAG', payload:{'tag': tag, 'index': vacancyIndex}})\r\n        },\r\n        onTagDelete: (tagId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_TAG', payload:{'tagId': tagId, 'index': vacancyIndex}})\r\n        },\r\n        onWorkTypeAdd: (workType, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_WORK_TYPE', payload:{'workType': workType, 'index': vacancyIndex}})\r\n        },\r\n        onWorkTypeDelete: (workTypeId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_WORK_TYPE', payload:{'workTypeId': workTypeId, 'index': vacancyIndex}})\r\n        },\r\n        onVacancyNameChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_VACANCY_NAME', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onGradeValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_GRADE_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onIndustryValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_INDUSTRY_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onAddressValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_ADDRESS_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onLeadingValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_LEADING_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onTrailingValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_TRAILING_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onPointAdd: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_POINT', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onPointDelete: (pointId, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_POINT', payload:{'pointId': pointId, 'index': vacancyIndex}})\r\n        },\r\n        onSalaryValueChange: (text, vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_CHANGE_SALARY_VALUE', payload:{'text': text, 'index': vacancyIndex}})\r\n        },\r\n        onSaveVacancyFormChanges:(data, vacancyIndex, userId, vacancyId) => {\r\n            dispatch(vacancyIndex===-1?(addVacancy(data)):(redactVacancy(data, vacancyId)))\r\n            .then(data => dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE', payload:vacancyIndex}))\r\n            .then(data => {\r\n                dispatch(getUserVacancies(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onInputMistake:(mistakeStr, el) => {\r\n            console.log(mistakeStr)\r\n        },\r\n\r\n        onAddAboutBody:(body, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ADD_ABOUT_BODY', payload:{'body': body, 'index': vacancyIndex}})\r\n        },\r\n        onRedactAboutBody:(body, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_REDACT_ABOUT_BODY', payload:{'body': body, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyDelete:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DELETE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyActivate:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ACTIVATE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n        onAboutBodyDeactivate:(bodyId, vacancyIndex)=>{\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_DEACTIVATE_ABOUT_BODY', payload:{'bodyId': bodyId, 'index': vacancyIndex}})\r\n        },\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyRedactPopup);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addVacancy} from '../../../actions/serverConnections'\r\nimport {getWorkTypeValues, getGradeValues} from '../../../scripts/commonScripts'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport VacancyRedactPopup from './VacancyRedactPopup/VacancyRedactPopup'\r\nimport editIcon from '../../../img/edit.svg'\r\nimport VacancyPopup from '../../VacancyPopup/VacancyPopup'\r\n\r\nclass Vacancy extends Component {\r\n    addVacancy = (e) => {\r\n        return fetch('../new_vacancy.json', {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            data.user_id = this.props.userData.user_id\r\n            return data\r\n        })\r\n        .then (data => {\r\n            this.props.onPopupNewVacancyActivate(data)\r\n        })\r\n    }\r\n\r\n    redactVacancy = (index) =>{\r\n        this.props.onPopupRedactVacancyActivate(index)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"resumes-block\">\r\n                {this.props.userState.logged ? (this.props.vacancyData.vacancies.length !== 0 ?(<h2>Ваши вакансии:</h2>):('')):(this.props.vacancyData.vacancies.length !== 0 ?(<h2>Вакансии:</h2>):(''))}\r\n                <ul className=\"resumes-list\">\r\n                    {this.props.vacancyData.vacancies.length !== 0 ? \r\n                    (this.props.vacancyData.vacancies.map((el, index)=>\r\n                            (\r\n                            <li key={index} className=\"resume resumes-list-el rounded\">\r\n                                {el.state==='active' ? (<VacancyRedactPopup index={index}></VacancyRedactPopup>) : ('')}\r\n                                <section className={\"resume-main \" + (el.state === 'active' ? ('muted'):(''))}>\r\n                                    <div className={\"resume__header white top-rounded \" + this.props.vacancyData.vacancies[index].bg_header_color}>\r\n                                        <div className=\"resume__header-top\">\r\n                                            <h2 className=\"resume__header__name bold f-large\">{el.vacancy_name}</h2>\r\n                                            <p>\r\n                                                {el.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                                <span className=\"resume__header__salary bold f-medium\">{el.salary} руб.</span>}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"resume__header-bottom\">\r\n                                            <p className=\"resume__header__grade\">{getGradeValues(el.grade)}</p>\r\n\r\n                                            <p className=\"resume__publication-date sup\">{el.pub_date.slice(0,10)}</p>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"resume__main-info rounded\">\r\n                                        <p className=\"resume__industry f-pre\">{el.industry}</p>\r\n            \r\n                                        <p className=\"resume__work-type\">{el.work_type.map((item)=>getWorkTypeValues(item)).join(', ')}</p>\r\n            \r\n                                        <p className=\"resume__about\">{el.about}</p>\r\n            \r\n                                        \r\n                                        <ul className=\"resume__tags-list\">\r\n                                            {el.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user?(\r\n                                    <button className=\"resume-redact-btn\"  onClick={this.redactVacancy.bind(this, index)}>\r\n                                        <img src={editIcon} alt=\"editIcon\"/>\r\n                                    </button>\r\n                                ):('')}\r\n                                \r\n                            </li>\r\n                            )\r\n                        )\r\n                    ):('')}\r\n\r\n                    {this.props.vacancyData.newVacancy.length!==0 ? (this.props.vacancyData.newVacancy.state==='active' ? (<VacancyRedactPopup index={this.props.vacancyData.vacancies.length}></VacancyRedactPopup>) : ('')) : ('')}\r\n                </ul>\r\n                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user && this.props.vacancyData.newVacancy.state!=='active' ? (\r\n                    <div className=\"resume-add\">\r\n                        <p>Добавить вакансию:</p>\r\n                        <button className=\"resume-add-btn\" onClick={this.addVacancy.bind(this, 0)}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button>\r\n                    </div>)\r\n                :('')}\r\n                {this.props.vacancyData.openedVacancyId !== -1 ? <VacancyPopup id={this.props.responseState.openedVacancyId}></VacancyPopup> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        vacancyData: state.vacancy,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactVacancyActivate: (vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ACTIVATE', payload:vacancyIndex})\r\n        },\r\n        onPopupNewVacancyActivate: (newVacancyData) => {\r\n            dispatch({type : 'POPUP_NEW_VACANCY_ACTIVATE', payload:newVacancyData})\r\n        },\r\n\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vacancy);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Cropper from \"react-cropper\";\r\nimport firebase from \"firebase\";\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport closeIcon from '../../../img/close.svg';\r\nimport uploadIcon from '../../../img/upload.svg';\r\n\r\n\r\nclass ImageCropper extends Component {\r\n    cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        this.props.onDeactivateCropper()\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                this.props.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + this.props.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        this.props.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        this.props.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getCropperData = () => {\r\n        this.props.onDeactivateCropper()\r\n\r\n        if (typeof this.props.cropperData.instance !== \"undefined\") {\r\n          const croppedImage = this.dataURLtoBlob(this.props.cropperData.instance.getCroppedCanvas().toDataURL());\r\n          this.loadImageToFirebase(croppedImage, this.props.cropperData.imageType)\r\n        }\r\n    };\r\n\r\n    dataURLtoBlob = (dataurl) => {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        this.loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    deactivateCropper = () =>{\r\n        this.props.onDeactivateCropper()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.cropperFile){\r\n            if(this.props.cropperData.imageType === 'avatar'){\r\n                this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54')\r\n            }\r\n            else this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-background.png?alt=media&token=1c91f99c-c236-4a28-b291-bfc2263df45b')\r\n        }\r\n\r\n        return this.props.cropperActive ? (\r\n            <div className=\"cropper-block\">\r\n                {console.log(this.props.cropperFile)}\r\n                <div\r\n                    className={\"cropper__img-preview \" + this.props.cropperData.imageType}\r\n                    style={{ width: this.props.cropperMaxWidth, height: this.props.cropperMaxHeight, overflow:\"hidden\"}}\r\n                />\r\n\r\n                <Cropper\r\n                style={{ width: \"100%\", maxHeight: \"400px\",minHeight: \"400px\", backgroundColor:\"#fff\" }}\r\n                aspectRatio={this.props.cropperMaxWidth / this.props.cropperMaxHeight}\r\n\r\n                preview=\".cropper__img-preview\"\r\n                src={this.props.cropperFile}\r\n                viewMode={1}\r\n                dragMode='move'\r\n                guides={true}\r\n                minCropBoxHeight={10}\r\n                minCropBoxWidth={10}\r\n                background={false}\r\n                responsive={true}\r\n                autoCropArea={1}\r\n                checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                onInitialized={(instance) => {\r\n                    this.props.setCropperInstance(instance);\r\n                }}\r\n                />\r\n                \r\n                <div className=\"cropper-controls\">\r\n                    <button className=\"cropper-upload-btn\" onClick={this.getCropperData}>\r\n                        <img src={uploadIcon} alt=\"uploadIcon\"/>\r\n                    </button>\r\n\r\n                    <button className=\"cropper-close-btn\" onClick={this.deactivateCropper}>\r\n                        <img src={closeIcon} alt=\"closeIcon\"/>\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n        ) : ('')\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cropperMaxWidth:state.companyProfile.buf.cropper.maxWidth,\r\n        cropperMaxHeight:state.companyProfile.buf.cropper.maxHeight,\r\n        cropperFile:state.companyProfile.buf.cropper.file,\r\n        cropperActive:state.companyProfile.buf.cropper.state,\r\n        cropperData:state.companyProfile.buf.cropper,\r\n        userState: state.user,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        setCropperInstance: (instance) => {\r\n            dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_DEACTIVATE_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onSetCropperFile:(file) => {\r\n            dispatch({type : 'SET_CROPPER_FILE', payload:file})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCropper)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport ImageCropper from \"./ImageCropper\";\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\nexport class MainPlaceholder extends Component {\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-placeholder rounded\">\r\n                <section className=\"main-placeholder__personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                    <img className=\"main-placeholder__personal__avatar\" src={this.checkOnEmpty(this.props.avatarPhoto, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n\r\n                <section className=\"main-placeholder__info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userName}</h2>\r\n                    </div>\r\n                    \r\n                    <p className=\"info__description\">{this.props.userDescription}</p>\r\n\r\n                    <div className=\"info__common-info\">\r\n                        <p className=\"living__place\">{this.props.userAddress ? this.props.userAddress.name:''}</p>\r\n                    </div>\r\n                    \r\n                    {this.props.userPhones.length !== 0 ? (\r\n                        <div className=\"info__contacts\">\r\n                            <p>Контакты:</p>\r\n                            <div className=\"info__contacts__phones\">\r\n                                {this.props.userPhones.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                            </div>\r\n                        </div>):('')}\r\n                </section>\r\n                <ImageCropper></ImageCropper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholderData: state.companyProfile.placeholder,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        userName: state.companyProfile.placeholder.name,\r\n        avatarPhoto:state.companyProfile.placeholder.photo_url,\r\n        personalBackground:state.companyProfile.placeholder.profile_background,\r\n        userDescription: state.companyProfile.placeholder.about,\r\n        userAddress:state.companyProfile.placeholder.address,\r\n        userPhones:state.companyProfile.placeholder.phone,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onUpdateUserName: (userName) => {\r\n        dispatch({type : 'PLACEHOLDER_UPDATE_USER_NAME', payload:userName})\r\n      },\r\n      setCropperInstance: (instance) => {\r\n        dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPlaceholder)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\n\r\nconst RedactPopupSectionBaseInfo = (state, profileState, placeholderData) => {\r\n    const changeUserNameValue = (e) => {\r\n        let input = e.target.value\r\n        state.onUsernameChange(input)\r\n    }\r\n\r\n    const changeUserDescriptionValue = (e) => {\r\n        state.onDescriptionChange(e.target.value)\r\n    }\r\n\r\n    const saveNewAddress = (e) => {\r\n        state.onSaveNewAddress({\r\n            name:state.LeafletMapData.name,\r\n            lat:state.LeafletMapData.lat,\r\n            lng:state.LeafletMapData.lng\r\n        })\r\n    }\r\n\r\n    const deletePhone = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onPhoneDelete(state.placeholderData.phone[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const phoneInput = (e) =>{\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(state.placeholderData.phone.length > 1){\r\n\r\n            }\r\n            else if(state.placeholderData.phone.indexOf(value) === -1){\r\n                state.onPhoneAdd(value)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    const addPhone = (e) => {\r\n        state.onPhoneAdd(e.target.phonesInput.value)\r\n    }\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"popup__input-block\">\r\n                <div className=\"input-field underline-anim\">\r\n                    <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \" onChange={changeUserNameValue} value={state.placeholderData.name}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя/никнейм</label>\r\n                </div>\r\n\r\n                <div className=\"textarea-field\">\r\n                    <p>Описание профиля</p>\r\n                    <textarea className=\"popup__textarea-input\" name=\"descriptionInput\" id=\"descriptionInput\" onChange={changeUserDescriptionValue} value={state.placeholderData.about}></textarea>\r\n                </div>\r\n\r\n                <div className=\"address-input\">\r\n                    <LeafletMap address={state.profileState.address}></LeafletMap>\r\n                    <button className=\"highlighted sup-btn\" onClick={saveNewAddress}>Сохранить</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Телефоны</p>\r\n                {state.placeholderData.phone.map((phone, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{phone}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deletePhone}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <form onSubmit={addPhone}>\r\n                    <input className=\"popup__text-input\" type=\"text\" id=\"phonesInput\" name=\"phonesInput\" placeholder=\"Нажмите пробел после введения номера...\" onKeyDown={phoneInput} maxLength=\"12\"/>\r\n                    <button type=\"submit\" className=\"plus-btn\">+</button>\r\n                </form>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onUsernameChange: (username)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_USERNAME_CHANGE', payload:username})\r\n        },\r\n        onDescriptionChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DESCRIPTION_CHANGE', payload:text})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_CHANGE', payload:text})\r\n        },        \r\n        onPhoneAdd: (phone)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADD_PHONE', payload:phone})\r\n        },\r\n        onPhoneDelete: (phoneId)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DELETE_PHONE', payload:phoneId})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_NAME_CHANGE', payload:text})\r\n        }, \r\n        onSaveNewAddress:(address)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_CHANGE', payload:address})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionBaseInfo)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport fileUploader from '../../../../actions/fileUploader';\r\nimport cropIcon from '../../../../img/crop.svg'\r\n\r\n\r\nconst RedactPopupSectionImages = (state) => {\r\n    \r\n    const cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        state.onDeactivateCropper()\r\n\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                state.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    const loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + state.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        state.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        state.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e, imageType) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        console.log(files);\r\n        loadImageToFirebase(files[0], imageType)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'avatar')}}\r\n            >\r\n                <input type=\"file\" id=\"file-avatar\" hidden name=\"userAvatarInput\" onChange={(event) => {loadUserImage(event, 'avatar')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-avatar\">Загрузить аватар</label>\r\n                \r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.photo_url, 120, 120, 'avatar')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n          \r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'personal-background')}}\r\n            >\r\n                <input type=\"file\" id=\"file-back\" hidden name=\"userBackgroundInput\" onChange={(event) => {loadUserImage(event, 'personal-background')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-back\">Загрузить задний фон</label>\r\n\r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.profile_background, 700, 160, 'personal-background')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state: state,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        cropperData:state.companyProfile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onActivateCropper:(file, maxWidth, maxHeight, imageType)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_ACTIVATE_IMAGE_CROPPER', payload:[file, maxWidth, maxHeight, imageType]})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_DEACTIVATE_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionImages)\r\n","import React, {Component} from 'react'\r\nimport Loader from '../../Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport './profileRedactPopup.css'\r\nimport MainPlaceholder from './MainPlaceholder'\r\nimport {updateEmployer, createNewEmployer, getEmployer} from '../../../actions/serverConnections'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport fileUploader from '../../../actions/fileUploader'\r\nimport RedactPopupSectionBaseInfo from './redactPopupSections/RedactPopupSectionBaseInfo'\r\nimport RedactPopupSectionImages from './redactPopupSections/RedactPopupSectionImages'\r\n\r\nimport baseInfoIcon from '../../../img/baseInfo.svg'\r\nimport personalizationIcon from '../../../img/personalization.svg'\r\n\r\nclass ProfileRedactPopup extends Component {\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n\r\n    saveRedactProfileFormChanges = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"user_id\": this.props.userState.user.id,\r\n            \"name\":this.props.placeholderData.name,\r\n            \"mailing\": true,\r\n            \"address\": this.props.placeholderData.address,\r\n            \"phone\": this.props.placeholderData.phone,\r\n            \"about\": this.props.placeholderData.about,\r\n            \"links\": [],\r\n            \"profile_link\": \"\",\r\n            \"photo_url\": this.props.placeholderData.photo_url,\r\n            \"profile_background\": this.props.placeholderData.profile_background\r\n        }\r\n        console.log(data)\r\n        this.props.onUpdateEmployer(data, this.props.userState.user.id, this.props.onGetEmployer, this.props.onHasProfile)\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    changeSection(section) {\r\n        this.props.onChangeSection(section)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"no-fix-blur-box rounded profile-redact \" + this.props.profileState.state}>\r\n                <div className=\"profile-redact__popup-wrapper\">\r\n                    <MainPlaceholder></MainPlaceholder>\r\n                    <div className=\"profile-redact__form\">\r\n                        <div className=\"profile-redact__form-nav\">\r\n                            \r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'baseInfo' ? 'active' : '')} onClick={this.changeSection.bind(this, 'baseInfo')}>\r\n                                <img src={baseInfoIcon} alt=\"Базовая информация\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'images' ? 'active' : '')} onClick={this.changeSection.bind(this, 'images')}>\r\n                                <img src={personalizationIcon} alt=\"Персонализация\"/>\r\n                            </button>\r\n                        </div>\r\n                        {this.props.profileState.popupRedactActiveSection === 'baseInfo' ? (<RedactPopupSectionBaseInfo></RedactPopupSectionBaseInfo>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'images' ? (<RedactPopupSectionImages></RedactPopupSectionImages>) : ('')}\r\n\r\n                        <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveRedactProfileFormChanges}>Сохранить изменения</button>\r\n                        <button className=\"profile-redact__close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        loaderActive: state.nav.popup.loaderActive,\r\n        cropperActive: state.companyProfile.buf.cropper.state,\r\n        cropperData:state.companyProfile.buf.cropper\r\n\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactProfileDeactivate: () => {\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PROFILE_DEACTIVATE', payload:null})\r\n        },\r\n        onChangeSection: (section) => {\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_CHANGE_SECTION', payload:section})\r\n        },\r\n        onActivateLoader: ()=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ACTIVATE_LOADER', payload:null})\r\n        },\r\n        onDeactivateLoader: ()=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DEACTIVATE_LOADER', payload:null})\r\n        },\r\n        onCreateNewEmployer:(data, userId, onGetEmployer, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(createNewEmployer(data))\r\n            .then(data => onGetEmployer(userId, onHasProfile))\r\n        },\r\n        onUpdateEmployer:(data, userId, onGetEmployer, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(updateEmployer(data, userId))\r\n            .then(data => onGetEmployer(userId, onHasProfile))\r\n        },\r\n        onHasProfile: () => {\r\n          dispatch({type : 'USER_HAS_PROFILE', payload:null})\r\n        },\r\n        onGetEmployer: (userId, onHasProfile)=> {\r\n          dispatch(getEmployer(userId))\r\n          .then((data)=>{\r\n              if (data.userData !== null){\r\n                  console.log(data.userData)\r\n                  onHasProfile()\r\n              }\r\n          })\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileRedactPopup);","import React, { Component } from 'react'\r\nimport Main from './Main/Main'\r\nimport Side from './Side/Side'\r\nimport Vacancies from './Vacancies/Vacancies'\r\nimport ProfileRedactPopup from './ProfileRedactPopup/ProfileRedactPopup'\r\nimport { connect } from 'react-redux'\r\nimport {getUserVacancies, getEmployer} from '../../actions/serverConnections'\r\nimport './profile.css'\r\nimport Loader from '../Loader/Loader'\r\n\r\n\r\nclass Profile extends Component {\r\n    checkIfNotNull(variable, def){\r\n        if(typeof(variable) !== \"undefined\") {\r\n            if(variable !== null && variable !== '') {\r\n                return variable\r\n            }\r\n        }\r\n        return def\r\n    }\r\n\r\n    initPlaceholder = () => {\r\n        this.props.onInitializeProfileData({\r\n                state:'muted',\r\n                popupRedactActiveSection:'baseInfo',\r\n                placeholder: this.props.userData,\r\n                buf:{\r\n                    cropper:{\r\n                        state:false,\r\n                        file:'',\r\n                        maxWidth:0,\r\n                        maxHeight:0,\r\n                        instance:{\r\n                \r\n                        },\r\n                        imageType:''\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.userState.logged && this.props.userFetchId === String(this.props.userState.user.id)){\r\n            console.log(this.props.userState.user)\r\n            this.props.onGetLoggedEmployerFetch(this.props.userFetchId, this.props.onHasProfile, this.initPlaceholder, this.props.history)\r\n        }\r\n        else{\r\n            this.props.onGetEmployer(this.props.userFetchId, this.props.onHasProfile, this.props.history)\r\n        }        \r\n\r\n        console.log(this.props.userFetchId)\r\n        this.props.onGetVacancies(this.props.userFetchId)\r\n    }\r\n    \r\n    render() {\r\n        if (Object.keys(this.props.userData).length !== 0)\r\n        return (\r\n            <div className=\"small-container profile-wrapper\">\r\n                <div className=\"profile__main\">\r\n                    <Main></Main>\r\n                    \r\n                    <Vacancies></Vacancies>\r\n                </div>\r\n                <div className=\"profile__side\">\r\n                    <Side></Side>\r\n                </div>\r\n                {this.props.profileState.state === 'active' ? (<ProfileRedactPopup></ProfileRedactPopup>):('')}\r\n            </div>\r\n        )\r\n\r\n        else return <Loader active={true}></Loader>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userFetchId: ownProps.match.params.id,\r\n        history: ownProps.history,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        resumeData:state.cvs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onInitializeProfileData: (data)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_INITIALIZE_PROFILE', payload:data}) \r\n        },\r\n        onHasProfile: ()=>{\r\n            dispatch({type : 'USER_HAS_PROFILE', payload:null}) \r\n        },\r\n        onGetLoggedEmployerFetch: (userId, onHasProfile, initPlaceholder, history)=> {\r\n            dispatch(getEmployer(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                    }\r\n                    initPlaceholder()\r\n\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetEmployer: (userId,onHasProfile, history)=> {\r\n            dispatch(getEmployer(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    onHasProfile()\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetVacancies: (fetchId) => {\r\n            dispatch(getUserVacancies(fetchId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data!=='404'){\r\n                    \r\n                    data.data.map(el=>el.state = '')\r\n                    dispatch({type : 'INITIALIZE_VACANCY_PLACEHOLDER', payload:data.data}) \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"],"sourceRoot":""}