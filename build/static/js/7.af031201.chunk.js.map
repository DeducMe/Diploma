{"version":3,"sources":["components/Profile/Main/Main.js","components/Profile/Side/Side.js","components/Profile/Resumes/ResumeRedactPopup/ResumeRedactPopup.js","components/ResumePopup/ResumePopup.js","components/Profile/Resumes/Resumes.js","components/Profile/ProfileRedactPopup/ImageCropper.js","components/Profile/ProfileRedactPopup/MainPlaceholder.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionBaseInfo.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionExperience.js","components/Profile/ProfileRedactPopup/redactPopupSections/RedactPopupSectionImages.js","img/experience.svg","components/Profile/ProfileRedactPopup/ProfileRedactPopup.js","components/Profile/Profile.js"],"names":["Main","props","toggleMapPopup","state","mapPopupState","setState","redactProfile","onPopupRedactProfileActivate","this","userState","user","user_type","className","el","returnValue","hasProfile","style","backgroundImage","checkOnEmpty","userData","profile_background","personalBackground","src","photo_url","placeholderAvatar","alt","id","onClick","editIcon","name","about","birthday","gender","address","LeafletMap","citizenship","phone","language","education","experience","length","map","index","href","grade","profession","university","type","start_year","end_year","position","company","goPhrase","plusIcon","Component","connect","dispatch","onSubjectChangeToEmployer","payload","Side","ResumeRedactPopup","changeVacancyName","e","check","checkStringInput","target","value","onVacancyNameChange","resumeIndex","onInputMistake","changeGradeValue","onGradeValueChange","changeSalary","checkIntInput","onSalaryValueChange","parseInt","console","log","resumePlaceholder","salary","changeIndustryValue","onIndustryValueChange","workTypeDelete","preventDefault","parentElement","dataset","key","onWorkTypeDelete","resumeWorkType","workTypeInput","indexOf","onWorkTypeAdd","changeAboutValue","onAboutValueChange","saveResumeFormChanges","data","cvPlaceholder","vacancy_name","industry","work_type","tags","bg_header_color","resumeData","cvs","onSaveResumeFormChanges","tagDelete","onTagDelete","tagInput","split","join","keyCode","resumeTags","onTagAdd","closeRedactPopup","onPopupRedactResumeDeactivate","deleteResume","onPopupRedactResumeDelete","changeResumeHeaderColor","onResumeHeaderColorChange","resumeState","addStyle","required","placeholder","onChange","bind","closeIcon","deleteIcon","industries","item","data-key","getWorkTypeValues","tag","onKeyDown","ownProps","newCv","onAddResume","addResume","then","newCvId","userId","getUserResumes","color","tagId","workType","workTypeId","text","resumeId","redactResume","mistakeStr","ResumePopup","onGetResume","onCloseResumePopup","Object","keys","openedResume","popupClose","getGradeValues","pub_date","slice","tabIndex","buf","getResume","Resumes","fetch","headers","response","json","onPopupNewResumeActivate","onPopupRedactResumeActivate","openResumeInfo","onOpenResumeInfo","logged","cvData","openedResumeId","newCvData","ImageCropper","cropUserImage","file","maxWidth","maxHeight","imageType","onDeactivateCropper","setTimeout","undefined","onActivateCropper","loadImageToFirebase","image","fileRef","fileUploader","storage","ref","child","put","getDownloadURL","onChangeAvatar","onChangePersonalBackground","getCropperData","cropperData","instance","croppedImage","dataURLtoBlob","getCroppedCanvas","toDataURL","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","loadUserImage","files","deactivateCropper","cropperFile","onSetCropperFile","cropperActive","width","cropperMaxWidth","height","cropperMaxHeight","overflow","backgroundColor","aspectRatio","preview","viewMode","dragMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","setCropperInstance","uploadIcon","profile","cropper","fileUrl","MainPlaceholder","avatarPhoto","userName","userDescription","userBirthday","userGender","userCz","userAddress","userPhones","userLanguages","userEducation","userExperience","placeholderData","description","onUpdateUserName","profileState","LeafletMapData","leafletMap","onUsernameChange","username","onDescriptionChange","onBDayChange","onCzChange","onAddressChange","onSaveNewAddress","onChangeGenderToMale","onChangeGenderToFemale","onLanguageAdd","onLanguageGradeChange","onLanguageDelete","languageId","onPhoneAdd","onPhoneDelete","phoneId","onCityChange","changeGender","deleteLanguage","deletePhone","input","htmlFor","cz","lat","lng","maxLength","newLanguage","languageGrade","filter","onEducationAdd","onEducationDelete","educationId","onExperienceAdd","onExperienceDelete","experienceId","educationDelete","experienceDelete","onSubmit","educationBlocksAmount","newEducation","professionInput","universityInput","educationTypeInput","educationStartDateInput","educationEndDateInput","newExperience","positionInput","companyInput","experienceTypeInput","experienceStartDateInput","experienceEndDateInput","dragOver","dragEnter","dragLeave","fileDrop","dataTransfer","onDragOver","onDragEnter","onDragLeave","onDrop","event","hidden","cropIcon","ProfileRedactPopup","saveRedactProfileFormChanges","onUpdateEmployee","onGetUserFetch","onHasProfile","onUpdateEmployer","onPopupRedactProfileDeactivate","section","onChangeSection","popupRedactActiveSection","changeSection","baseInfoIcon","experienceIcon","personalizationIcon","loaderActive","nav","popup","onActivateLoader","onDeactivateLoader","onCreateNewEmployee","createNewEmployee","onCreateNewEmployer","updateEmployee","getUserData","Profile","initPlaceholder","onInitializeProfileData","checkIfNotNull","avatar","profile_link","social_links","variable","def","userFetchId","String","onGetLoggedUserFetch","history","onGetResumes","Loader","active","params","push","fetchId"],"mappings":"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","file":"static/js/7.af031201.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport photoRedactIcon from '../../../img/photovector.svg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport LeafletMap from '../../leafletMap/LeafletMap'\r\n\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapPopupState:''\r\n        };\r\n    }\r\n\r\n    toggleMapPopup = () =>{\r\n        if (this.state.mapPopupState === ''){\r\n            this.setState({mapPopupState:'active'})\r\n        }\r\n        else this.setState({mapPopupState:''})\r\n    }\r\n    \r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n\r\n    \r\n    render() {\r\n        if (this.props.userState.hasProfile){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                        <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                        \r\n                        {this.props.userState.user.id === this.props.userData.user ? (\r\n                            <button className=\"profile-redact-btn\"  onClick={this.redactProfile}>\r\n                                <img src={editIcon} alt=\"editIcon\"/>\r\n                            </button>\r\n                        ) : ('')}\r\n\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        <div className=\"info__common-info\">\r\n                            <p className=\"info__common-info__birthday\">{this.props.userData.birthday}</p>\r\n                            <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n                            {this.props.userData.address ?\r\n                                <div className=\"address__popup-block\">\r\n                                    <span className=\"living__place underline-link\" onClick={this.toggleMapPopup}>{this.props.userData.address.name}</span>\r\n\r\n                                    {this.state.mapPopupState === 'active' ? \r\n                                        <div className ={\"map-popup rounded\"}>\r\n                                            <button className=\"map-popup__closer-btn\" onClick={this.toggleMapPopup}>x</button>\r\n                                            <LeafletMap address={this.props.userData.address}></LeafletMap>\r\n                                        </div>\r\n                                    : ''}\r\n                                </div>\r\n                            : ''}\r\n                            <p className=\"living__cz\">{this.props.userData.citizenship}</p>\r\n\r\n                        </div>\r\n                        {this.props.userData.phone && this.props.userData.language && this.props.userData.education && this.props.userData.experience ?\r\n                            <div>\r\n                                {this.props.userData.phone.length !== 0 ? (\r\n                                <div className=\"info__contacts\">\r\n                                    <p>Контакты:</p>\r\n                                    <div className=\"info__contacts__phones\">\r\n                                        {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                                    </div>\r\n                                </div>):('')}\r\n\r\n                            {this.props.userData.language.length !== 0 ? (\r\n                            <div className=\"info__languages\">\r\n                                <p>Владение языками:</p>\r\n                                {this.props.userData.language.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                            </div>):('')}\r\n                            {this.props.userData.education.length!== 0 ?(\r\n                                <div className=\"info__education\">\r\n                                    <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                    {this.props.userData.education.map((el, index)=>{\r\n                                        return (\r\n                                            <div className=\"education-block\" key={index}>\r\n                                                <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                                <div className=\"education-place\">\r\n                                                    <p className=\"education-place__institution\">{el.university},</p>\r\n                                                    <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                    <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>):('')}\r\n                                                \r\n                            {this.props.userData.experience.length!== 0 ? (\r\n                                <div className=\"info__work-experience\">\r\n                                    <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                    {this.props.userData.experience.map((el, index)=>{\r\n                                        return (\r\n                                            <div className=\"education-block\" key={index}>\r\n                                                <p className=\"education-name highlighted\">{el.position}</p>\r\n                                                <div className=\"education-place\">\r\n                                                    <p className=\"education-place__institution\">{el.company},</p>\r\n                                                    <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                    <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>):('')}\r\n                            </div>\r\n                         : ''}\r\n                        \r\n                        \r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user){\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-add-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )}\r\n        else\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Профиль пуст!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react'\r\nimport './side.css'\r\n\r\nexport default class Side extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side rounded\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addResume, redactResume, getUserResumes, deleteResume } from '../../../../actions/serverConnections'\r\nimport closeIcon from '../../../../img/close.svg'\r\nimport deleteIcon from '../../../../img/trash.svg'\r\nimport {checkStringInput, checkIntInput, getWorkTypeValues} from '../../../../scripts/commonScripts.js'\r\nimport industries from '../../../../jsonFiles/industries.json'\r\n\r\n\r\nclass ResumeRedactPopup extends Component {\r\n    changeVacancyName = (e) =>{\r\n        const check = checkStringInput(e.target.value, 35, 0, /^[a-zA-Z]*^$/);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onVacancyNameChange(e.target.value, this.props.resumeIndex) : \r\n        (this.props.onInputMistake(check, e.target));\r\n    }\r\n\r\n    changeGradeValue = (e) =>{\r\n        this.props.onGradeValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    changeSalary = (e) =>{\r\n        const check = checkIntInput(e.target.value, 9999999, null);\r\n\r\n        check === \"pass\" ? \r\n        this.props.onSalaryValueChange(parseInt(e.target.value), this.props.resumeIndex):\r\n        (this.props.onInputMistake(check, e.target))\r\n        console.log(this.props.resumePlaceholder.salary)\r\n\r\n        if (e.target.value  === ''){\r\n            this.props.onSalaryValueChange(null, this.props.resumeIndex)\r\n        }\r\n    }\r\n\r\n    changeIndustryValue = (e) =>{\r\n        this.props.onIndustryValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    workTypeDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onWorkTypeDelete(this.props.resumeWorkType[e.target.parentElement.dataset.key], this.props.resumeIndex)\r\n    }\r\n\r\n    workTypeInput = (e) =>{\r\n        const value = e.target.value\r\n        e.preventDefault()\r\n        if(this.props.resumeWorkType.length > 5){\r\n\r\n        }\r\n        else if(this.props.resumeWorkType.indexOf(value) === -1){\r\n            this.props.onWorkTypeAdd(value, this.props.resumeIndex)\r\n            e.target.value = ''\r\n        }\r\n    }\r\n    \r\n\r\n    changeAboutValue = (e) =>{\r\n        this.props.onAboutValueChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    saveResumeFormChanges = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props.resumePlaceholder.salary)\r\n        let data = {\r\n            \"id\":this.props.cvPlaceholder.id,\r\n            \"user_id\": this.props.userData.id,\r\n            \"vacancy_name\": this.props.resumePlaceholder.vacancy_name,\r\n            \"industry\": this.props.resumePlaceholder.industry || 'Не указано',\r\n            \"grade\": this.props.resumePlaceholder.grade || 'internship',\r\n            \"salary\": this.props.resumePlaceholder.salary === null ? -1 : this.props.resumePlaceholder.salary,\r\n            \"work_type\": this.props.resumePlaceholder.work_type,\r\n            \"tags\": this.props.resumePlaceholder.tags,\r\n            \"about\": this.props.resumePlaceholder.about,\r\n            \"bg_header_color\": this.props.resumePlaceholder.bg_header_color,\r\n            \"portfolio\": [],\r\n        }\r\n        if (this.props.resumeData.cvs.length === this.props.resumeIndex || this.props.resumeData.cvs.length === 0){\r\n            this.props.onSaveResumeFormChanges(data, -1, this.props.userData.id, this.props.resumePlaceholder.vacancy_name)\r\n        }\r\n        else this.props.onSaveResumeFormChanges(data, this.props.resumeIndex, this.props.userData.id, this.props.cvPlaceholder.id)\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    tagDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        this.props.onTagDelete(this.props.resumePlaceholder.tags[e.target.parentElement.dataset.key], this.props.resumeIndex)\r\n    }\r\n\r\n    tagInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(this.props.resumePlaceholder.tags.length > 10){\r\n\r\n            }\r\n            else if(this.props.resumeTags.indexOf(value) === -1){\r\n                this.props.onTagAdd(value, this.props.resumeIndex)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    closeRedactPopup = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactResumeDeactivate(this.props.resumeIndex)\r\n    }\r\n\r\n    deleteResume = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onPopupRedactResumeDelete(this.props.resumeData.cvs[this.props.resumeIndex].id, this.props.userData.id)\r\n    }\r\n\r\n    changeResumeHeaderColor = (e) =>{\r\n\r\n        e.preventDefault()\r\n        this.props.onResumeHeaderColorChange(e.target.value, this.props.resumeIndex)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={\"rounded resume-redact-block \"+this.props.resumeState} style={this.props.addStyle}>\r\n                <div className={\"resume__header white top-rounded \"+this.props.cvPlaceholder.bg_header_color}>\r\n                    <div className=\"resume__header-top\">\r\n                        <input required type=\"text\" className=\"resume__header__name bold f-large white\" placeholder=\"Название профессии\" onChange={this.changeVacancyName.bind(this)} value={this.props.resumePlaceholder.vacancy_name}/>\r\n                        <p className=\"resume__header__salary\"><input required type=\"number\" className=\"resume__header__salary-input bold f-medium white\" placeholder=\"Желаемая зарплата\" onChange={this.changeSalary.bind(this)} value={this.props.resumePlaceholder.salary === 0 || this.props.resumePlaceholder.salary === -1 || this.props.resumePlaceholder.salary === null ? '' :this.props.resumePlaceholder.salary }/><span className=\"bold f-medium\"> руб.</span></p>\r\n                    </div>\r\n                    <div className=\"resume__header-bottom\">\r\n                        <p className=\"resume__header__grade\">\r\n                            <select required className=\"white resume__header__grade-input\" id={\"resume-gradeInput-\"+this.props.index} name={\"resume-gradeInput-\"+this.props.index} onChange={this.changeGradeValue.bind(this)} value={this.props.resumePlaceholder.grade}>\r\n                                <option value=\"internship\">Стажер</option>\r\n                                <option value=\"junior\">Начинающий специалист</option>\r\n                                <option value=\"middle\">Специалист</option>\r\n                                <option value=\"senior\">Главный специалист</option>\r\n                                <option value=\"director\">Управляющий отдела</option>\r\n                                <option value=\"senior-director\">Генеральный директор</option>\r\n                            </select>\r\n                        </p>\r\n                        <ul className=\"resume__header-color\">\r\n                            <button className={\"resume__header-color-el bg-light-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-light-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-light-black\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-gray \" + (this.props.cvPlaceholder.bg_header_color === 'bg-blue-gray' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-blue-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-blue-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-blue-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-blue-black\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-gray \" + (this.props.cvPlaceholder.bg_header_color === 'bg-violet-gray' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-violet-gray\"/>\r\n                            <button className={\"resume__header-color-el bg-violet-black \" + (this.props.cvPlaceholder.bg_header_color === 'bg-violet-black' ? ('selected'):(''))} onClick={this.changeResumeHeaderColor} value=\"bg-violet-black\"/>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"resume-close-btn\"  onClick={this.closeRedactPopup}>\r\n                    <img src={closeIcon} alt=\"closeIcon\"/>\r\n                </button>\r\n                {this.props.resumeIndex !== this.props.resumeData.cvs.length ?(\r\n                    <button className=\"resume-delete-btn\"  onClick={this.deleteResume}>\r\n                        <img src={deleteIcon} alt=\"deleteIcon\"/>\r\n                    </button>\r\n                ):('')}\r\n                \r\n\r\n                <div className=\"resume__main-info rounded\">\r\n                    <p className=\"resume__industry f-pre\">\r\n                        <span>Отрасль: </span>\r\n                        <select required id={\"resume-industryInput-\"+this.props.index} name={\"resume-industryInput-\"+this.props.index} onChange={this.changeIndustryValue.bind(this)} value={this.props.resumePlaceholder.industry}>\r\n                            {industries.map((item)=>{\r\n                                return <option value={item.name}>{item.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </p>\r\n\r\n                    <div className=\"resume__work-type-block input-list\">\r\n                        <p className=\"input-label\">Типы работ:</p>\r\n\r\n                        <ul className=\"resume__work-type-list\">\r\n                            {this.props.resumeWorkType.map((item, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{getWorkTypeValues(item)}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.workTypeDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"resume__work-type input-list\">\r\n                            Выберите, чтобы добавить...\r\n                            <select className=\"select-input\" name=\"workTypeInput\" id=\"workTypeInput\" onChange={this.workTypeInput.bind(this)}>\r\n                                <option value=\"part-day\">неполный день</option>\r\n                                <option value=\"full-day\">полный день</option>\r\n                                <option value=\"part-time\">полная занятность</option>\r\n                                <option value=\"full-time\">волонтерство</option>\r\n                                <option value=\"one-time-job\">разовое задание</option>\r\n                                <option value=\"flexible-schedule\">гибкий график</option>\r\n                                <option value=\"shift-schedule\">сменный график</option>\r\n                                <option value=\"shift-method\">вахтовый метод</option>\r\n                                <option value=\"remote\">удаленная работа</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <p className=\"resume__about\"><textarea className=\"resume__about-input\" name=\"\" id=\"\" placeholder=\"Описание резюме\" onChange={this.changeAboutValue.bind(this)} value={this.props.resumePlaceholder.about}></textarea></p>\r\n\r\n                    {/* <ul className=\"resume__portfolio\">\r\n                        <li className=\"resume__portfolio-el\">\r\n                            <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                <img src=\"\" alt=\"\"/>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"resume__portfolio-el\">\r\n                            <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                <img src=\"\" alt=\"\"/>\r\n                            </a>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div className=\"resume__tags-block input-list\">\r\n                        <ul className=\"resume__tags-list\">\r\n                            {this.props.resumeTags.map((tag, index)=>{\r\n                                return (\r\n                                    <li key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                                        <span>{tag}</span>\r\n                                        <button className=\"el-block__delete-el\" onClick={this.tagDelete}>x</button>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                        <input className=\"resume__tags-input input-list__input-block\" type=\"text\" onKeyDown={this.tagInput.bind(this)} placeholder=\"Введите тег и нажмите пробел...\"/>\r\n                    </div>\r\n                    \r\n                    <input type=\"submit\" className=\"form-submit-btn f-large rounded bold\" onClick={this.saveResumeFormChanges} value=\"Сохранить изменения\"/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    let cvPlaceholder\r\n    if (ownProps.index === state.cvs.cvs.length) {cvPlaceholder = state.cvs.newCv}\r\n    else {cvPlaceholder = state.cvs.placeholder[ownProps.index]}\r\n    return {\r\n        userData: state.user.user,\r\n        resumeData: state.cvs,\r\n        resumePlaceholder: cvPlaceholder,\r\n        resumeTags: cvPlaceholder.tags,\r\n        resumeWorkType:cvPlaceholder.work_type,\r\n        resumeState: cvPlaceholder.state,\r\n        resumeIndex: ownProps.index,\r\n        cvPlaceholder:cvPlaceholder\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddResume: (resumeData) => {\r\n            dispatch(addResume(resumeData))\r\n            .then((data)=>{\r\n                if (data.newCvId !== null && data.newCvId!=='404'){\r\n                }\r\n            })\r\n        },\r\n        onPopupRedactResumeDeactivate: (index) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DEACTIVATE', payload:index})\r\n        },\r\n        onPopupRedactResumeDelete: (index, userId) => {\r\n            dispatch(deleteResume(index))\r\n            .then(data => {\r\n                dispatch(getUserResumes(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onResumeHeaderColorChange: (color, resumeIndex) =>{\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_COLOR', payload:{'color': color, 'index': resumeIndex}})\r\n        },\r\n        onTagAdd: (tag, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ADD_TAG', payload:{'tag': tag, 'index': resumeIndex}})\r\n        },\r\n        onTagDelete: (tagId, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DELETE_TAG', payload:{'tagId': tagId, 'index': resumeIndex}})\r\n        },\r\n        onWorkTypeAdd: (workType, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ADD_WORK_TYPE', payload:{'workType': workType, 'index': resumeIndex}})\r\n        },\r\n        onWorkTypeDelete: (workTypeId, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_DELETE_WORK_TYPE', payload:{'workTypeId': workTypeId, 'index': resumeIndex}})\r\n        },\r\n        onVacancyNameChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_VACANCY_NAME', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onGradeValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_GRADE_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onIndustryValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_INDUSTRY_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onAboutValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_ABOUT_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onSalaryValueChange: (text, resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_CHANGE_SALARY_VALUE', payload:{'text': text, 'index': resumeIndex}})\r\n        },\r\n        onSaveResumeFormChanges:(data, resumeIndex, userId, resumeId) => {\r\n            dispatch(resumeIndex===-1?(addResume(data)):(redactResume(data, resumeId)))\r\n            .then(data => dispatch({type : 'POPUP_REDACT_RESUME_DEACTIVATE', payload:resumeIndex}))\r\n            .then(data => {\r\n                dispatch(getUserResumes(userId))\r\n                .then((data)=>{\r\n                    if (data.data !== null && data.data!=='404'){\r\n                        data.data.map(el=>el.state = '')\r\n                        dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onInputMistake:(mistakeStr, el) => {\r\n            console.log(mistakeStr)\r\n        }\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumeRedactPopup);\r\n","import React, { Component, useEffect } from 'react'\r\nimport {getResume} from '../../actions/serverConnections'\r\nimport {getGradeValues, getWorkTypeValues} from '../../scripts/commonScripts'\r\nimport { connect } from 'react-redux'\r\nimport './resumePopup.css'\r\n\r\nclass ResumePopup extends Component {\r\n    componentDidMount(){\r\n        this.props.onGetResume(this.props.id)\r\n    }\r\n\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onCloseResumePopup();\r\n    }\r\n\r\n    render() {\r\n        if (Object.keys(this.props.openedResume).length !== 0)\r\n        return (\r\n            <div className=\"blur-box active\" onClick={this.popupClose.bind(this)}>\r\n                <div className=\"resume resumes-list-el popup-wrapper rounded vacancy-info\">\r\n                    <section className=\"resume-main\">\r\n                        <div className={\"resume__header white top-rounded \" + this.props.openedResume.bg_header_color}>\r\n                            <div className=\"resume__header-top\">\r\n                                <h2 className=\"resume__header__name bold f-large\">{this.props.openedResume.vacancy_name}</h2>\r\n                                <p>\r\n                                    {this.props.openedResume.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                    <span className=\"resume__header__salary bold f-medium\">{this.props.openedResume.salary} руб.</span>}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"resume__header-bottom\">\r\n                                <p className=\"resume__header__grade\">{getGradeValues(this.props.openedResume.grade)}</p>\r\n\r\n                                <p className=\"resume__publication-date sup\">{this.props.openedResume.pub_date.slice(0,10)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"resume__main-info bottom-rounded full-width\">\r\n                            <p className=\"resume__industry f-pre\">{this.props.openedResume.industry}</p>\r\n\r\n                            <p className=\"resume__work-type\">{this.props.openedResume.work_type.map((el)=>getWorkTypeValues(el)).join(', ')}</p>\r\n\r\n                            <p>{this.props.openedResume.about}</p>\r\n                            \r\n                            <ul className=\"resume__tags-list\">\r\n                                {this.props.openedResume.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button className=\"close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        else return ''\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    openedResume:state.buf.openedResume,\r\n    id:ownProps.id\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onGetResume: (id) => {\r\n        dispatch(getResume(id))\r\n    },\r\n    onCloseResumePopup: () => {\r\n        dispatch({type : 'CLOSE_RESUME_POPUP', payload:null})\r\n\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResumePopup);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addResume} from '../../../actions/serverConnections'\r\nimport {getWorkTypeValues, getGradeValues} from '../../../scripts/commonScripts'\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport ResumeRedactPopup from './ResumeRedactPopup/ResumeRedactPopup'\r\nimport editIcon from '../../../img/edit.svg'\r\nimport ResumePopup from '../../ResumePopup/ResumePopup'\r\n\r\nclass Resumes extends Component {\r\n    addResume = (e) => {\r\n        return fetch('../new_cv.json', {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            data.user = this.props.userData.user\r\n            return data\r\n        })\r\n        .then (data => {\r\n            this.props.onPopupNewResumeActivate(data)\r\n            // return this.props.onAddResume(data, this.props.onPopupRedactResumeActivate)\r\n        })\r\n    }\r\n\r\n    redactResume = (index) =>{\r\n        this.props.onPopupRedactResumeActivate(index)\r\n    }\r\n\r\n    openResumeInfo = (id) =>{\r\n        this.props.onOpenResumeInfo(id)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"resumes-block\">\r\n                {this.props.userState.logged ? (this.props.cvData.cvs.length !== 0 ?(<h2>Ваши Резюме:</h2>):('')):(this.props.cvData.cvs.length !== 0 ?(<h2>Резюме:</h2>):(''))}\r\n                <ul className=\"resumes-list\">\r\n                    {this.props.cvData.cvs.length !== 0 ? \r\n                    (this.props.cvData.cvs.map((el, index)=>\r\n                            (\r\n                            <li key={index} className=\"resume resumes-list-el rounded\">\r\n                                {el.state==='active' ? (<ResumeRedactPopup index={index}></ResumeRedactPopup>) : ('')}\r\n                                <section className={\"resume-main \" + (el.state === 'active' ? ('muted'):(''))}>\r\n                                    <div className={\"resume__header white top-rounded \" + el.bg_header_color}>\r\n                                        <div className=\"resume__header-top\">\r\n                                            <h2 className=\"resume__header__name bold f-large\" onClick={this.openResumeInfo.bind(this, el.id)}>{el.vacancy_name}</h2>\r\n                                            <p>\r\n                                                {el.salary === -1 ? <span className=\"resume__header__salary bold f-medium\">Зарплата не указана</span>:\r\n                                                <span className=\"resume__header__salary bold f-medium\">{el.salary} руб.</span>}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"resume__header-bottom\">\r\n                                            <p className=\"resume__header__grade\">{getGradeValues(el.grade)}</p>\r\n                                            <p className=\"resume__publication-date sup\">{el.pub_date.slice(0,10)}</p>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"resume__main-info rounded\">\r\n                                        <p className=\"resume__industry f-pre\">{el.industry}</p>\r\n            \r\n                                        <p className=\"resume__work-type\">{el.work_type.map((item)=>getWorkTypeValues(item)).join(', ')}</p>\r\n            \r\n                                        <p className=\"resume__about\">{el.about}</p>\r\n            \r\n                                        {/* <ul className=\"resume__portfolio\">\r\n                                            <li className=\"resume__portfolio-el\">\r\n                                                <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                                    <img src=\"\" alt=\"\"/>\r\n                                                </a>\r\n                                            </li>\r\n            \r\n                                            <li className=\"resume__portfolio-el\">\r\n                                                <a className=\"resume__portfolio-el__link\" href=\"#\">\r\n                                                    <img src=\"\" alt=\"\"/>\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul> */}\r\n            \r\n                                        <ul className=\"resume__tags-list\">\r\n                                            {el.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user?(\r\n                                    <button className=\"resume-redact-btn\"  onClick={this.redactResume.bind(this, index)}>\r\n                                        <img src={editIcon} alt=\"editIcon\"/>\r\n                                    </button>\r\n                                ):('')}\r\n                                \r\n                            </li>\r\n                            )\r\n                        )\r\n                    ):('')}\r\n\r\n                    {this.props.cvData.newCv.length!==0 ? (this.props.cvData.newCv.state==='active' ? (<ResumeRedactPopup index={this.props.cvData.cvs.length}></ResumeRedactPopup>) : ('')) : ('')}\r\n                </ul>\r\n                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user && this.props.cvData.newCv.state!=='active' ? (\r\n                    <div className=\"resume-add\">\r\n                        <p>Добавить резюме:</p>\r\n                        <button className=\"resume-add-btn\" onClick={this.addResume.bind(this, 0)}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button>\r\n                    </div>)\r\n                :('')}\r\n                {this.props.cvData.openedResumeId !== -1 ? <ResumePopup id={this.props.cvData.openedResumeId}></ResumePopup> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        cvData: state.cvs,\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactResumeActivate: (resumeIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_RESUME_ACTIVATE', payload:resumeIndex})\r\n        },\r\n        onPopupNewResumeActivate: (newCvData) => {\r\n            dispatch({type : 'POPUP_NEW_RESUME_ACTIVATE', payload:newCvData})\r\n        },\r\n        onOpenResumeInfo: (id) =>{\r\n            dispatch({type : 'OPEN_RESUME_POPUP', payload:id})\r\n        }\r\n\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Resumes);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Cropper from \"react-cropper\";\r\nimport firebase from \"firebase\";\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport closeIcon from '../../../img/close.svg';\r\nimport uploadIcon from '../../../img/upload.svg';\r\n\r\n\r\nclass ImageCropper extends Component {\r\n    cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        this.props.onDeactivateCropper()\r\n        console.log(file)\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                this.props.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + this.props.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        this.props.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        this.props.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getCropperData = () => {\r\n        this.props.onDeactivateCropper()\r\n\r\n        if (typeof this.props.cropperData.instance !== \"undefined\") {\r\n          const croppedImage = this.dataURLtoBlob(this.props.cropperData.instance.getCroppedCanvas().toDataURL());\r\n          this.loadImageToFirebase(croppedImage, this.props.cropperData.imageType)\r\n        }\r\n    };\r\n\r\n    dataURLtoBlob = (dataurl) => {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n\r\n    loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        this.loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    deactivateCropper = () =>{\r\n        this.props.onDeactivateCropper()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.cropperFile){\r\n            if(this.props.cropperData.imageType === 'avatar'){\r\n                this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54')\r\n            }\r\n            else this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-background.png?alt=media&token=1c91f99c-c236-4a28-b291-bfc2263df45b')\r\n        }\r\n\r\n\r\n        return this.props.cropperActive && this.props.cropperFile ? (\r\n            <div className=\"cropper-block\">\r\n                <div\r\n                    className={\"cropper__img-preview \" + this.props.cropperData.imageType}\r\n                    style={{ width: this.props.cropperMaxWidth, height: this.props.cropperMaxHeight, overflow:\"hidden\"}}\r\n                />\r\n\r\n                <Cropper\r\n                style={{ width: \"100%\", height: \"400px\", backgroundColor:\"#fff\" }}\r\n                aspectRatio={this.props.cropperMaxWidth / this.props.cropperMaxHeight}\r\n\r\n                preview=\".cropper__img-preview\"\r\n                src={this.props.cropperFile}\r\n                viewMode={1}\r\n                dragMode='move'\r\n                guides={true}\r\n                minCropBoxHeight={10}\r\n                minCropBoxWidth={10}\r\n                background={false}\r\n                responsive={true}\r\n                autoCropArea={1}\r\n                checkOrientation={false} \r\n                onInitialized={(instance) => {\r\n                    this.props.setCropperInstance(instance);\r\n                }}\r\n                />\r\n                \r\n                <div className=\"cropper-controls\">\r\n                    <button className=\"cropper-upload-btn\" onClick={this.getCropperData}>\r\n                        <img src={uploadIcon} alt=\"uploadIcon\"/>\r\n                    </button>\r\n\r\n                    <button className=\"cropper-close-btn\" onClick={this.deactivateCropper}>\r\n                        <img src={closeIcon} alt=\"closeIcon\"/>\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n        ) : ('')\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cropperMaxWidth:state.profile.buf.cropper.maxWidth,\r\n        cropperMaxHeight:state.profile.buf.cropper.maxHeight,\r\n        cropperFile:state.profile.buf.cropper.file,\r\n        cropperActive:state.profile.buf.cropper.state,\r\n        cropperData:state.profile.buf.cropper,\r\n        userState: state.user,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        setCropperInstance: (instance) => {\r\n            dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onSetCropperFile:(file) => {\r\n            dispatch({type : 'SET_CROPPER_FILE', payload:file})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCropper)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport ImageCropper from \"./ImageCropper\";\r\n\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\nexport class MainPlaceholder extends Component {\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-placeholder rounded\">\r\n                <div className=\"main-placeholder__personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                    <img className=\"main-placeholder__personal__avatar\" src={this.checkOnEmpty(this.props.avatarPhoto, placeholderAvatar)} alt=\"аватар\"/>\r\n                </div>\r\n                <section className=\"main-placeholder__info\">\r\n                    <div className=\"main-placeholder__info-wrapper\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userName}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userDescription}</p>\r\n                        <div className=\"info__common-info\">\r\n                            \r\n                            <p className={'info__common-info__birthday ' + this.props.userBirthday}>{this.props.userBirthday}</p>\r\n                            <p className={'info__common-info__gender ' + this.props.userGender}></p>\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__cz\">{this.props.userCz}</p>\r\n                                <p className=\"living__place\">{this.props.userAddress ? this.props.userAddress.name:''}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"info__contacts__phones\">\r\n                            <p>Контакты:</p>\r\n                            {this.props.userPhones.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                        </div>\r\n\r\n                        <div className=\"info__languages\">\r\n                            <p>Владение языками:</p>\r\n                            {this.props.userLanguages.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                        </div>\r\n                        \r\n                        {this.props.userEducation.length!== 0 ?(\r\n                            <div className=\"info__education\">\r\n                                <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                {this.props.userEducation.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.university},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                                               \r\n                        {this.props.userExperience.length!== 0 ? (\r\n                            <div className=\"info__work-experience\">\r\n                                <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                {this.props.userExperience.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.position}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.company},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                    </div>\r\n                </section>\r\n                \r\n                <ImageCropper></ImageCropper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholderData: state.profile.placeholder,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        userName: state.profile.placeholder.userName,\r\n        avatarPhoto:state.profile.placeholder.photo_url,\r\n        personalBackground:state.profile.placeholder.profile_background,\r\n        userDescription: state.profile.placeholder.description,\r\n        userBirthday: state.profile.placeholder.birthday,\r\n        userGender:state.profile.placeholder.gender,\r\n        userAddress:state.profile.address,\r\n        userCz:state.profile.placeholder.citizenship,\r\n        userPhones:state.profile.userPhones,\r\n        userLanguages: state.profile.language,\r\n        userEducation:state.profile.education,\r\n        userExperience:state.profile.experience,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onUpdateUserName: (userName) => {\r\n        dispatch({type : 'PLACEHOLDER_UPDATE_USER_NAME', payload:userName})\r\n      },\r\n      setCropperInstance: (instance) => {\r\n        dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPlaceholder)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\n\r\nconst RedactPopupSectionBaseInfo = (state, placeholderData, LeafletMapData, profileState, onUsernameChange,onSaveNewAddress, onDescriptionChange, onBDayChange, onCzChange, onCityChange, onChangeGenderToMale, onChangeGenderToFemale, onLanguageDelete, onLanguageGradeChange, onLanguageAdd, onPhoneDelete, onPhoneAdd) => {\r\n    const changeUserNameValue = (e) => {\r\n        let input = e.target.value\r\n        state.onUsernameChange(input)\r\n    }\r\n\r\n    const changeUserDescriptionValue = (e) => {\r\n        state.onDescriptionChange(e.target.value)\r\n    }\r\n\r\n    const changeUserBDay = (e) => {\r\n        state.onBDayChange(e.target.value)\r\n    }\r\n\r\n    const changeCzValue = (e) => {\r\n        state.onCzChange(e.target.value)\r\n    }\r\n\r\n    const saveNewAddress = (e) => {\r\n        state.onSaveNewAddress({\r\n            name:state.LeafletMapData.name,\r\n            lat:state.LeafletMapData.lat,\r\n            lng:state.LeafletMapData.lng\r\n\r\n        })\r\n    }\r\n\r\n    const changeGender = (e) => {\r\n        if (e.target.value === 'male'){\r\n          state.onChangeGenderToMale();\r\n        }\r\n        else if (e.target.value === 'female'){\r\n            state.onChangeGenderToFemale();\r\n        }\r\n    }\r\n\r\n    const deleteLanguage = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onLanguageDelete(state.profileState.language[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const languageGradeChange = (e) =>{\r\n        state.onLanguageGradeChange(e.target.value)\r\n    }\r\n\r\n    const languageInput = (e) =>{\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            let newLanguage = {\r\n                \"grade\": state.profileState.buf.languageGrade,\r\n                \"language\": value\r\n            }\r\n            console.log(state.profileState.language.filter((el) => el.language === newLanguage.language))\r\n            if(state.profileState.language.filter((el) => el.language === newLanguage.language).length === 0){\r\n                state.onLanguageAdd(newLanguage)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    const deletePhone = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onPhoneDelete(state.profileState.userPhones[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const phoneInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(state.profileState.userPhones.length > 1){\r\n\r\n            }\r\n            else if(state.profileState.userPhones.indexOf(value) === -1){\r\n                state.onPhoneAdd(value)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"popup__input-block\">\r\n                <div className=\"input-field underline-anim\">\r\n                    <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \" onChange={changeUserNameValue} value={placeholderData.userName}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя/никнейм</label>\r\n                </div>\r\n\r\n                <div className=\"gender-radio-box\">\r\n                    <p>Пол:</p>\r\n                    <input className=\"gender-input\" type=\"radio\" id=\"gender-male\" name=\"gender-radio\" value=\"male\" onChange={changeGender}/>\r\n                    <input className=\"gender-input\" type=\"radio\" id=\"gender-female\" name=\"gender-radio\" value=\"female\" onChange={changeGender}/>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"gender-male\">Мужской</label>\r\n                        <label htmlFor=\"gender-female\">Женский</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"textarea-field\">\r\n                    <p>Описание профиля</p>\r\n                    <textarea className=\"popup__textarea-input\" name=\"descriptionInput\" id=\"descriptionInput\" onChange={changeUserDescriptionValue} value={placeholderData.description}></textarea>\r\n                </div>\r\n                \r\n                <div className=\"input-field underlined\">\r\n                    <input className=\"popup__text-input\" id=\"birthdayInput\" name=\"birthdayInput\" type=\"date\" placeholder=\" \" onChange={changeUserBDay} value={placeholderData.birthday}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"birthdayInput\">Дата рождения</label>\r\n                </div>\r\n\r\n                <div className=\"input-field underlined\">\r\n                    <input className=\"popup__text-input\" id=\"czInput\" name=\"czInput\" type=\"text\" placeholder=\" \" onChange={changeCzValue} value={placeholderData.cz}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"czInput\">Гражданство</label>\r\n                </div>\r\n                <div className=\"address-input\">\r\n                    <LeafletMap address={state.profileState.address}></LeafletMap>\r\n                    <button className=\"highlighted sup-btn\" onClick={saveNewAddress}>Сохранить</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Контакты</p>\r\n                \r\n                {state.profileState.userPhones.map((phone, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{phone}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deletePhone}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <input className=\"popup__text-input\" type=\"text\" id=\"phonesInput\" name=\"phonesInput\" placeholder=\"Нажмите пробел после введения номера...\" onKeyDown={phoneInput} maxLength=\"12\"/>\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Владение языками</p>\r\n\r\n                {state.profileState.language.map((el, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{el.language + ' - ' + el.grade}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deleteLanguage}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"popup__select-text-input\">\r\n                    <input className=\"popup__text-input\" type=\"text\" id=\"languageInput\" name=\"languageInput\" placeholder=\"Нажмите пробел после введения языка...\" onKeyDown={languageInput}/>\r\n                    <select name=\"languageGradeInput\" id=\"languageGradeInput\" onChange={languageGradeChange} value={state.profileState.buf.languageGrade}>\r\n                        <option value=\"A1\">A1 - начинающий (Beginner)</option>\r\n                        <option value=\"A2\">A2 - предпродвинутый (Pre-Intermediate)</option>\r\n                        <option value=\"B1\">B1 - продвинутый (Intermediate)</option>\r\n                        <option value=\"B2\">B2 - предпрофессиональный (Upper-Intermediate)</option>\r\n                        <option value=\"C1\">C1 - Профессиональный (Advanced)</option>\r\n                        <option value=\"C2\">C2 - Владение в совершенстве (Mastery)</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onUsernameChange: (username)=>{\r\n            dispatch({type : 'POPUP_REDACT_USERNAME_CHANGE', payload:username})\r\n        },\r\n        onDescriptionChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_DESCRIPTION_CHANGE', payload:text})\r\n        },\r\n        onBDayChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_BIRTHDAY_CHANGE', payload:text})\r\n        },\r\n        onCzChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_CITIZENSHIP_CHANGE', payload:text})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADDRESS_NAME_CHANGE', payload:text})\r\n        }, \r\n        onSaveNewAddress:(address)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADDRESS_CHANGE', payload:address})\r\n        },       \r\n        onChangeGenderToMale: () => {\r\n            dispatch({type : 'CHANGE_GENDER_TO_MALE', payload:null})\r\n        },\r\n        onChangeGenderToFemale: () => {\r\n            dispatch({type : 'CHANGE_GENDER_TO_FEMALE', payload:null})\r\n        },\r\n        onLanguageAdd: (language)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_LANGUAGE', payload:language})\r\n        },\r\n        onLanguageGradeChange: (grade)=>{\r\n            dispatch({type : 'POPUP_REDACT_LANGUAGE_GRADE_CHANGE', payload:grade})\r\n        },\r\n        onLanguageDelete: (languageId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_LANGUAGE', payload:languageId})\r\n        },\r\n        onPhoneAdd: (phone)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_PHONE', payload:phone})\r\n        },\r\n        onPhoneDelete: (phoneId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_PHONE', payload:phoneId})\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionBaseInfo)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst RedactPopupSectionExperience = (state, profileState, onExperienceAdd, onExperienceDelete, onEducationAdd, onEducationDelete) => {\r\n    const experienceAdd = (e) =>{\r\n        e.preventDefault();\r\n        console.log(e.target)\r\n        state.profileState.buf.educationBlocksAmount++\r\n        const newExperience = {\r\n            \"position\": e.target.positionInput.value,\r\n            \"company\": e.target.companyInput.value,\r\n            \"type\":e.target.experienceTypeInput.value,\r\n            \"start_year\":e.target.experienceStartDateInput.value,\r\n            \"end_year\":e.target.experienceEndDateInput.value\r\n        }\r\n        state.onExperienceAdd(newExperience)\r\n\r\n    }\r\n\r\n    const educationAdd = (e) =>{\r\n        e.preventDefault();\r\n        state.profileState.buf.educationBlocksAmount++\r\n        const newEducation = {\r\n            \"profession\": e.target.professionInput.value,\r\n            \"university\": e.target.universityInput.value,\r\n            \"type\":e.target.educationTypeInput.value,\r\n            \"start_year\":e.target.educationStartDateInput.value,\r\n            \"end_year\":e.target.educationEndDateInput.value\r\n        }\r\n        state.onEducationAdd(newEducation)\r\n    }\r\n\r\n    const educationDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onEducationDelete(state.profileState.education[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const experienceDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onExperienceDelete(state.profileState.experience[e.target.parentElement.dataset.key])   \r\n    }\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <form className=\"popup__education-input popup__input-block\" onSubmit={educationAdd}>\r\n            {console.log(state)}\r\n            {state.profileState.education.map((el, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{el.profession + ' - ' + el.university}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={educationDelete}>x</button>\r\n                        </div>\r\n                    )\r\n            })}\r\n            <div className=\"input-field underlined\">\r\n                <input className=\"popup__text-input\" id=\"professionInput\" name=\"professionInput\" type=\"input\" placeholder=\" \" required/>\r\n                <label className=\"popup__text-label\" htmlFor=\"professionInput\">Профессия</label>\r\n            </div>\r\n\r\n            <div className=\"input-field underlined\">\r\n                <input className=\"popup__text-input\" id=\"universityInput\" name=\"universityInput\" type=\"input\" placeholder=\" \" required/>\r\n                <label className=\"popup__text-label\" htmlFor=\"universityInput\">Место образования</label>\r\n            </div>\r\n\r\n            <select name=\"educationTypeInput\" id=\"educationTypeInput\">\r\n                <option value=\"course\">Курсы</option>\r\n                <option value=\"primary\">Начальное образование (4 класса)</option>\r\n                <option value=\"basic\">Среднее общее образование (9 классов)</option>\r\n                <option value=\"secondary\">Среднее полное образование (11 классов)</option>\r\n                <option value=\"post-secondary\">Среднее профессиональное образование</option>\r\n                <option value=\"bachelor\">Высшее (бакалавриат)</option>\r\n                <option value=\"specialist\">Высшее (специалитет)</option>\r\n                <option value=\"master\">Высшее (магистратура)</option>\r\n                <option value=\"PhD-asp\">Аспирантура</option>\r\n                <option value=\"PhD-doc\">Докторантура</option>\r\n            </select>\r\n\r\n            <div className=\"popup__date-fields\">\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"educationStartDateInput\" name=\"educationStartDateInput\" type=\"date\" placeholder=\" \" required/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"educationStartDateInput\">Дата начала</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"educationEndDateInput\" name=\"educationEndDateInput\" type=\"date\" placeholder=\" \" required/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"educationEndDateInput\">Дата окончания</label>\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"education-input__submit highlighted sup-btn\" value=\"Сохранить\"/>\r\n        </form>\r\n\r\n        <form className=\"popup__experience-input popup__input-block\" onSubmit={experienceAdd}>\r\n            {state.profileState.experience.map((el, index)=>{\r\n                return (\r\n                    <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                        <span>{el.position + ' - ' + el.company}</span>\r\n                        <button className=\"el-block__delete-el\" onClick={experienceDelete}>x</button>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n            <div className=\"input-field\">\r\n                <input className=\"popup__text-input\" id=\"positionInput\" name=\"positionInput\" type=\"input\" placeholder=\" \"/>\r\n                <label className=\"popup__text-label\" htmlFor=\"positionInput\">Позиция</label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <input className=\"popup__text-input\" id=\"companyInput\" name=\"companyInput\" type=\"input\" placeholder=\" \"/>\r\n                <label className=\"popup__text-label\" htmlFor=\"companyInput\">Компания</label>\r\n            </div>\r\n\r\n            <select name=\"experienceTypeInput\" id=\"experienceTypeInput\">\r\n                <option value=\"internship\">Стажировка</option>\r\n                <option value=\"junior\">Младший специалист</option>\r\n                <option value=\"middle\">Средний специалист</option>\r\n                <option value=\"senior\">Старший специалист</option>\r\n                <option value=\"director\">Руководитель</option>\r\n                <option value=\"senior-director\">Старший руководитель</option>\r\n            </select>\r\n\r\n            <div className=\"popup__date-fields\">\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"experienceStartDateInput\" name=\"experienceStartDateInput\" type=\"date\" placeholder=\" \"/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"experienceStartDateInput\">Дата начала</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <input className=\"popup__text-input\" id=\"experienceEndDateInput\" name=\"experienceEndDateInput\" type=\"date\" placeholder=\" \"/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"experienceEndDateInput\">Дата окончания</label>\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"experience-input__submit highlighted sup-btn\" value=\"Сохранить\"/>\r\n        </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        cropperData:state.profile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onEducationAdd: (education)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_EDUCATION', payload:education})\r\n        },\r\n        onEducationDelete: (educationId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_EDUCATION', payload:educationId})\r\n        },\r\n        onExperienceAdd: (experience)=>{\r\n            dispatch({type : 'POPUP_REDACT_ADD_EXPERIENCE', payload:experience})\r\n        },\r\n        onExperienceDelete: (experienceId)=>{\r\n            dispatch({type : 'POPUP_REDACT_DELETE_EXPERIENCE', payload:experienceId})\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionExperience)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport fileUploader from '../../../../actions/fileUploader';\r\nimport cropIcon from '../../../../img/crop.svg'\r\n\r\nconst RedactPopupSectionImages = (state, placeholderData, cropperData, onDeactivateCropper, onActivateCropper, userState, onChangeAvatar, onChangePersonalBackground) => {\r\n    \r\n    const cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        state.onDeactivateCropper()\r\n        console.log(file)\r\n\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                state.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    const loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image, imageType)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + state.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                console.log(response)\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        state.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        state.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e, imageType) => {\r\n        e.preventDefault();\r\n        const files = e.dataTransfer.files;\r\n        console.log(files);\r\n        loadImageToFirebase(files[0], imageType)\r\n\r\n    }\r\n\r\n    const loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'avatar')}}\r\n            >\r\n                <input type=\"file\" id=\"file-avatar\" hidden name=\"userAvatarInput\" onChange={(event) => {loadUserImage(event, 'avatar')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-avatar\">Загрузить аватар</label>\r\n                \r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.photo_url, 120, 120, 'avatar')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n          \r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"drop-container\" \r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={(event)=>{fileDrop(event, 'personal-background')}}\r\n            >\r\n                <input type=\"file\" id=\"file-back\" hidden name=\"userBackgroundInput\" onChange={(event) => {loadUserImage(event, 'personal-background')}}/>\r\n                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-back\">Загрузить задний фон</label>\r\n\r\n                <button className=\"cropper-activate-btn\" onClick={cropUserImage.bind(this, state.placeholderData.profile_background, 700, 160, 'personal-background')}>\r\n                    <img src={cropIcon} alt=\"обрезать\"/>\r\n                </button>\r\n\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\"></div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state: state,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        cropperData:state.profile.buf.cropper\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onActivateCropper:(file, maxWidth, maxHeight, imageType)=>{\r\n            dispatch({type : 'ACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:[file, maxWidth, maxHeight, imageType]})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionImages)\r\n","export default __webpack_public_path__ + \"static/media/experience.042835b3.svg\";","import React, {Component} from 'react'\r\nimport Loader from '../../Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport './profileRedactPopup.css'\r\nimport MainPlaceholder from './MainPlaceholder'\r\nimport {createNewEmployee, createNewEmployer, updateEmployee, getUserData} from '../../../actions/serverConnections'\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nimport RedactPopupSectionBaseInfo from './redactPopupSections/RedactPopupSectionBaseInfo'\r\nimport RedactPopupSectionExperience from './redactPopupSections/RedactPopupSectionExperience'\r\nimport RedactPopupSectionImages from './redactPopupSections/RedactPopupSectionImages'\r\n\r\nimport baseInfoIcon from '../../../img/baseInfo.svg'\r\nimport experienceIcon from '../../../img/experience.svg'\r\nimport personalizationIcon from '../../../img/personalization.svg'\r\n\r\n\r\nclass ProfileRedactPopup extends Component {\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    saveRedactProfileFormChanges = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"user_id\": this.props.userState.user.id,\r\n            \"gender\":this.props.placeholderData.gender,\r\n            \"name\":this.props.placeholderData.userName,\r\n            \"mailing\": true,\r\n            \"language\": this.props.profileState.language,\r\n            \"birthday\": this.props.placeholderData.birthday,\r\n            \"address\": this.props.profileState.address,\r\n            \"phone\": this.props.profileState.userPhones,\r\n            \"about\": this.props.placeholderData.description,\r\n            \"social_links\": [],\r\n            \"education\": this.props.profileState.education,\r\n            \"experience\": this.props.profileState.experience,\r\n            \"citizenship\": this.props.placeholderData.citizenship,\r\n            \"profile_link\": \"\",\r\n            \"photo_url\": this.props.placeholderData.photo_url,\r\n            \"profile_background\": this.props.placeholderData.profile_background\r\n        }\r\n\r\n        if (this.props.userState.user.user_type === 'employee'){\r\n            this.props.onUpdateEmployee(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n        }\r\n        else this.props.onUpdateEmployer(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    changeSection(section) {\r\n        this.props.onChangeSection(section)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"no-fix-blur-box rounded profile-redact \" + this.props.profileState.state}>\r\n                <div className=\"profile-redact__popup-wrapper\">\r\n                    <MainPlaceholder></MainPlaceholder>\r\n                    <div className=\"profile-redact__form\">\r\n                        <div className=\"profile-redact__form-nav\">\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'baseInfo' ? 'active' : '')} onClick={this.changeSection.bind(this, 'baseInfo')}>\r\n                                <img src={baseInfoIcon} alt=\"Базовая информация\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'experience' ? 'active' : '')} onClick={this.changeSection.bind(this, 'experience')}>\r\n                                <img src={experienceIcon} alt=\"Опыт и образование\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'images' ? 'active' : '')} onClick={this.changeSection.bind(this, 'images')}>\r\n                                <img src={personalizationIcon} alt=\"Персонализация\"/>\r\n                            </button>\r\n                        </div>\r\n                        {this.props.profileState.popupRedactActiveSection === 'baseInfo' ? (<RedactPopupSectionBaseInfo></RedactPopupSectionBaseInfo>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'experience' ? (<RedactPopupSectionExperience></RedactPopupSectionExperience>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'images' ? (<RedactPopupSectionImages></RedactPopupSectionImages>) : ('')}\r\n\r\n                        <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveRedactProfileFormChanges}>Сохранить изменения</button>\r\n                        <button className=\"profile-redact__close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        loaderActive: state.nav.popup.loaderActive,\r\n        cropperActive: state.profile.buf.cropper.state,\r\n        cropperData:state.profile.buf.cropper\r\n\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactProfileDeactivate: () => {\r\n            dispatch({type : 'POPUP_REDACT_PROFILE_DEACTIVATE', payload:null})\r\n        },\r\n        onChangeSection: (section) => {\r\n            dispatch({type : 'POPUP_REDACT_CHANGE_SECTION', payload:section})\r\n        },\r\n        onActivateLoader: ()=>{\r\n            dispatch({type : 'ACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onDeactivateLoader: ()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onCreateNewEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(createNewEmployee(data))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onCreateNewEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onUpdateEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(updateEmployee(data, userId))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onUpdateEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onHasProfile: () => {\r\n          dispatch({type : 'USER_HAS_PROFILE', payload:null})\r\n        },\r\n        onGetUserFetch: (userId, onHasProfile)=> {\r\n          dispatch(getUserData(userId))\r\n          .then((data)=>{\r\n              if (data.userData !== null){\r\n                  console.log(data.userData)\r\n                  onHasProfile()\r\n              }\r\n          })\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileRedactPopup);","import React, { Component } from 'react'\r\nimport Main from './Main/Main'\r\nimport Side from './Side/Side'\r\nimport Resumes from './Resumes/Resumes'\r\nimport ProfileRedactPopup from './ProfileRedactPopup/ProfileRedactPopup'\r\nimport { connect } from 'react-redux'\r\nimport {getUserResumes, getUserData} from '../../actions/serverConnections'\r\nimport './profile.css'\r\nimport Loader from '../Loader/Loader'\r\n\r\n\r\nclass Profile extends Component {\r\n    checkIfNotNull(variable, def){\r\n        console.log(variable)\r\n\r\n        if(typeof(variable) !== \"undefined\") {\r\n            if(variable !== null && variable !== '') {\r\n                return variable\r\n            }\r\n        }\r\n        return def\r\n    }\r\n\r\n    initPlaceholder = () => {\r\n        console.log(this.props.userState.hasProfile)\r\n        if (this.props.userState.hasProfile)\r\n        this.props.onInitializeProfileData({\r\n                state: this.props.profileState.state,\r\n                popupRedactActiveSection: this.props.profileState.popupRedactActiveSection,\r\n                    placeholder: {\r\n                    userName: this.props.userData.name,\r\n                    description: this.checkIfNotNull(this.props.userData.about, ''),\r\n                    avatar: '',\r\n                    gender: this.checkIfNotNull(this.props.userData.gender, ''),\r\n                    birthday: this.checkIfNotNull(this.props.userData.birthday, ''),\r\n                    citizenship: this.checkIfNotNull(this.props.userData.citizenship, ''),\r\n                    profile_link: '',\r\n                    photo_url: this.checkIfNotNull(this.props.userData.photo_url, 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54'),\r\n                    profile_background: this.checkIfNotNull(this.props.userData.profile_background, '')\r\n                },\r\n                address: this.props.userData.address,\r\n                userPhones: this.checkIfNotNull(this.props.userData.phone, []),\r\n                language: this.checkIfNotNull(this.props.userData.language, []),\r\n                education: this.checkIfNotNull(this.props.userData.education, []),\r\n                experience: this.checkIfNotNull(this.props.userData.experience, []),\r\n                social_links: [],\r\n                buf:{\r\n                    languageGrade:'A1',\r\n                    cropper:{\r\n                      state:false,\r\n                      file:this.checkIfNotNull(this.props.userData.photo_url, 'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54'),\r\n                      maxWidth:120,\r\n                      maxHeight:120\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        else \r\n        this.props.onInitializeProfileData({\r\n                state: this.props.profileState.state,\r\n                popupRedactActiveSection:'baseInfo',\r\n                placeholder: {\r\n                    userName: this.props.userData.name,\r\n                    description: '',\r\n                    avatar: '',\r\n                    gender: '',\r\n                    birthday: '',\r\n                    citizenship:'',\r\n                    profile_link: '',\r\n                    photo_url: '',\r\n                    profile_background: ''\r\n                },\r\n                address: null,\r\n                userPhones: [],\r\n                language:[],\r\n                education: [],\r\n                experience: [],\r\n                social_links: [],\r\n                buf:{\r\n                    languageGrade:'A1',\r\n                    cropper:{\r\n                      state:false,\r\n                      file:'https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54',\r\n                      maxWidth:0,\r\n                      maxHeight:0,\r\n                      imageType:''\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if (this.props.userState.logged && this.props.userFetchId === String(this.props.userState.user.id)){\r\n            console.log(this.props.userState.user)\r\n            this.props.onGetLoggedUserFetch(this.props.userFetchId,this.props.onHasProfile, this.initPlaceholder, this.props.history)\r\n        }\r\n        else{\r\n            this.props.onGetUserFetch(this.props.userFetchId, this.props.history, this.props.onHasProfile)\r\n        }        \r\n        this.props.onGetResumes(this.props.userFetchId)\r\n    }\r\n    \r\n    render() {\r\n        if (Object.keys(this.props.userData).length !== 0)\r\n        return (\r\n            <div className=\"small-container profile-wrapper\">\r\n                <div className=\"profile__main\">\r\n                    <Main></Main>\r\n                    \r\n                    <Resumes></Resumes>\r\n                </div>\r\n                <div className=\"profile__side\">\r\n                    <Side></Side>\r\n                </div>\r\n                {this.props.profileState.state === 'active' ? (<ProfileRedactPopup></ProfileRedactPopup>):('')}\r\n            </div>\r\n        )\r\n\r\n        else return <Loader active={true}></Loader>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userFetchId: ownProps.match.params.id,\r\n        history: ownProps.history,\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        placeholderData: state.profile.placeholder,\r\n        resumeData:state.cvs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onInitializeProfileData: (data)=>{\r\n            dispatch({type : 'POPUP_REDACT_INITIALIZE_PROFILE', payload:data}) \r\n        },\r\n        onHasProfile: ()=>{\r\n            dispatch({type : 'USER_HAS_PROFILE', payload:null}) \r\n        },\r\n        onGetLoggedUserFetch: (userId, onHasProfile, initPlaceholder, history)=> {\r\n            dispatch(getUserData(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    console.log(data.userData)\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                        console.log('profile')\r\n                    }\r\n                    initPlaceholder()\r\n\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetUserFetch: (userId, history, onHasProfile)=> {\r\n            dispatch(getUserData(userId))\r\n            .then((data)=>{\r\n                if (data.userData !== null && data.userData!=='404'){\r\n                    if (data.userData.profile_link !== \"empty\"){\r\n                        onHasProfile()\r\n                        console.log('profile')\r\n                    }\r\n                }\r\n                else history.push('/landing')           \r\n            })\r\n        },\r\n        onGetResumes: (fetchId) => {\r\n            console.log(fetchId)\r\n            dispatch(getUserResumes(fetchId))\r\n            .then((data)=>{\r\n                if (data.data !== null && data.data!=='404'){\r\n                    \r\n                    data.data.map(el=>el.state = '')\r\n                    dispatch({type : 'INITIALIZE_RESUME_PLACEHOLDER', payload:data.data}) \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"],"sourceRoot":""}