[{"D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\Popup\\Popup.js":"1","D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\Nav.js":"2","D:\\react тесты\\diploma\\dev\\src\\actions\\serverConnections.js":"3","D:\\react тесты\\diploma\\dev\\src\\reducers\\user.js":"4","D:\\react тесты\\diploma\\dev\\src\\index.js":"5","D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Main\\Main.js":"6","D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Side\\Side.js":"7","D:\\react тесты\\diploma\\dev\\src\\reducers\\nav.js":"8","D:\\react тесты\\diploma\\dev\\src\\reducers\\profile.js":"9","D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Profile.js":"10","D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js":"11","D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js":"12","D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\SearchPanel\\SearchPanel.js":"13","D:\\react тесты\\diploma\\dev\\src\\App.js":"14","D:\\react тесты\\diploma\\dev\\src\\components\\Landing\\Landing.js":"15","D:\\react тесты\\diploma\\dev\\src\\components\\Loader\\Loader.js":"16","D:\\react тесты\\diploma\\dev\\src\\reducers\\reducer.js":"17","D:\\react тесты\\diploma\\dev\\src\\reducers\\userData.js":"18"},{"size":12498,"mtime":1610715838771,"results":"19","hashOfConfig":"20"},{"size":5550,"mtime":1610707915986,"results":"21","hashOfConfig":"20"},{"size":5140,"mtime":1610715291403,"results":"22","hashOfConfig":"20"},{"size":2081,"mtime":1610540459871,"results":"23","hashOfConfig":"20"},{"size":1302,"mtime":1610544336944,"results":"24","hashOfConfig":"20"},{"size":8915,"mtime":1610532220767,"results":"25","hashOfConfig":"20"},{"size":249,"mtime":1609243449107,"results":"26","hashOfConfig":"20"},{"size":2712,"mtime":1610126356059,"results":"27","hashOfConfig":"20"},{"size":3775,"mtime":1610538109310,"results":"28","hashOfConfig":"20"},{"size":5356,"mtime":1610541213260,"results":"29","hashOfConfig":"20"},{"size":15543,"mtime":1610541517269,"results":"30","hashOfConfig":"20"},{"size":3319,"mtime":1610467682835,"results":"31","hashOfConfig":"20"},{"size":1107,"mtime":1609267840303,"results":"32","hashOfConfig":"20"},{"size":572,"mtime":1609663623415,"results":"33","hashOfConfig":"20"},{"size":323,"mtime":1609518574376,"results":"34","hashOfConfig":"20"},{"size":874,"mtime":1609863246673,"results":"35","hashOfConfig":"20"},{"size":330,"mtime":1610467624622,"results":"36","hashOfConfig":"20"},{"size":288,"mtime":1610467562923,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rkbsr4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\Popup\\Popup.js",["83","84","85","86","87","88"],"D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\Nav.js",["89","90"],"import React, { useEffect } from 'react';\r\n\r\nimport Popup from './Popup/Popup'\r\nimport { connect } from 'react-redux'\r\nimport logo from '../../img/logo.svg'\r\nimport arrow from '../../img/arrow.svg'\r\nimport star from '../../img/star.svg'\r\nimport bell from '../../img/bell.svg'\r\nimport SearchPanel from './SearchPanel/SearchPanel'\r\nimport './nav.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Cookies from 'universal-cookie';\r\nimport {logout} from '../../actions/serverConnections'\r\n\r\n\r\nconst Nav = ({logged, navState, onSearchActivate,userState, onSearchDeactivate,onLogout, onRegistrationPopupActivate, onLoginPopupActivate, onNavPositionChangeToFixed, onNavPositionChangeToNone, location, history}) => {\r\n  function searchToggle(){\r\n    if (navState.searchActive){\r\n      onSearchDeactivate();\r\n    }\r\n    else{\r\n      onSearchActivate();\r\n    }\r\n  }\r\n\r\n  function registartionPopupOpen(){\r\n    onRegistrationPopupActivate(history);\r\n  }\r\n\r\n  function loginPopupOpen(){\r\n    onLoginPopupActivate(history);\r\n  }\r\n\r\n  function logoutHandleFormSubmit(e){\r\n    e.preventDefault();\r\n    onLogout()\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (location === '/landing')\r\n      onNavPositionChangeToFixed()\r\n    else {\r\n      onNavPositionChangeToNone()\r\n      if (!logged){\r\n        // history.push('/landing')\r\n      }\r\n    }\r\n  }, [location]);\r\n  \r\n  if (logged)\r\n      return (\r\n  <div className={\"nav-block \"+navState.position}>\r\n    <div className=\"nav-bar\">\r\n      <div className=\"container\">\r\n        <nav className=\"nav\">\r\n          <div className=\"nav__left-side\">\r\n            <Link to=\"/landing\" className=\"nav-el\" >\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Link>\r\n\r\n            <Link to=\"/content\" className=\"f-medium semi link-anim nav-el\">Полезное</Link>\r\n\r\n            <Link to=\"/responses\" className=\"f-medium semi link-anim nav-el\">Отклики</Link>\r\n\r\n            <button  className={\"nav-el nav__search \" + navState.searchActive} onClick={searchToggle}>\r\n              <span className=\"f-medium semi\">Поиск</span> \r\n              <img src={arrow} alt=\"arrow\"/>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"nav__right-side\">\r\n            <button  className=\"icon-anim nav-el\">\r\n              <img src={bell} alt=\"notifications\"/>\r\n            </button>\r\n\r\n            <button  className=\"icon-anim nav-el\">\r\n              <img src={star} alt=\"favourites\"/>\r\n            </button>\r\n\r\n            <Link to={\"/profile/\"+userState.user.id} className=\"f-medium semi link-anim nav-el\">Моя страница</Link>\r\n            <form onSubmit={logoutHandleFormSubmit}>\r\n              <button type=\"submit\">Logout</button>\r\n            </form>\r\n          </div>\r\n          \r\n        </nav>     \r\n      </div> \r\n    </div>\r\n\r\n    <div className={\"search-panel \" + navState.searchActive}>\r\n      <div className=\"container\">\r\n        <div className=\"search-panel__wrapper\">\r\n          <SearchPanel></SearchPanel>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  </div>\r\n  )\r\n  else return(\r\n  <div className={\"nav-block \"+navState.position}>\r\n    <div className=\"nav-bar\">\r\n      <div className=\"container\">\r\n        <nav className=\"nav\">\r\n          <div className=\"nav__left-side\">\r\n            <Link to=\"/landing\" className=\"nav-el\" >\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Link>\r\n\r\n            <Link to=\"/content\" className=\"f-medium semi link-anim nav-el\">Полезное</Link>\r\n\r\n            <button  className={\"nav-el nav__search \" + navState.searchActive} onClick={searchToggle}>\r\n              <span className=\"f-medium semi\" >Поиск</span> \r\n              <img src={arrow} alt=\"\"/>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"nav__right-side\">\r\n            <button className=\"f-medium highlighted-btn semi nav-el\" onClick={registartionPopupOpen}>Начать карьеру</button>\r\n\r\n            <button className=\"f-medium semi link-anim nav-el\" onClick={loginPopupOpen}>Войти</button>\r\n          </div>    \r\n        </nav>     \r\n      </div>  \r\n    </div>\r\n\r\n    <div className={\"search-panel \" + navState.searchActive}>\r\n      <div className=\"container\">\r\n        <div className= \"search-panel__wrapper\">\r\n          <SearchPanel></SearchPanel>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n    \r\n    <Popup history={history}></Popup>\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  return {\r\n    navState: state.nav,\r\n    logged:state.user.logged,\r\n    userState:state.user,\r\n    location:ownProps.location.pathname,\r\n    history:ownProps.history\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    onSearchActivate: () => {\r\n      dispatch({type : 'SEARCH_ACTIVATE', payload:null})\r\n    },\r\n    onSearchDeactivate: () => {\r\n      dispatch({type : 'SEARCH_DEACTIVATE', payload:null})\r\n    },\r\n    onLoginPopupActivate: (history) => {\r\n      history.push('/landing')\r\n      dispatch({type : 'POPUP_ACTIVATE', payload:'login'})\r\n    },\r\n    onRegistrationPopupActivate: (history) => {\r\n      history.push('/landing')\r\n\r\n      dispatch({type : 'POPUP_ACTIVATE', payload:'registration'})\r\n\r\n    },\r\n    onNavPositionChangeToNone: () => {\r\n      dispatch({type : 'CHANGE_NAV_POSITION_TO_NONE', payload:null})\r\n    },\r\n    onNavPositionChangeToFixed: () => {\r\n      dispatch({type : 'CHANGE_NAV_POSITION_TO_FIXED', payload:null})\r\n    },\r\n    onLogout: (token)=>{\r\n      dispatch(logout(token))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n",["91","92"],"D:\\react тесты\\diploma\\dev\\src\\actions\\serverConnections.js",[],"D:\\react тесты\\diploma\\dev\\src\\reducers\\user.js",[],["93","94"],"D:\\react тесты\\diploma\\dev\\src\\index.js",["95"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport reducer from './reducers/reducer'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {createBrowserHistory} from 'history'\nimport Profile from './components/Profile/Profile'\nimport {\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport Nav from './components/Nav/Nav'\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport Landing from './components/Landing/Landing';\n\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));   // reducer\nconst hashHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(hashHistory, store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>  \n      <Route path=\"/\" component={Nav}/>\n\n      <Switch>\n          <Route path=\"/landing\" component={Landing}/>\n          <Route path=\"/profile/:id\" component={Profile}/>\n          <Redirect from=\"*\" to=\"/landing\"/>\n      </Switch>\n    </Router>\n  </Provider>,\n\n  \n  document.getElementById('root')\n);\n\n",["96","97"],"D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Main\\Main.js",["98"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport photoRedactIcon from '../../../img/photovector.svg'\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\n\r\nclass Main extends Component {\r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n\r\n    checkContacts(){\r\n        if (this.props.userData.phone.length !== 0) return (\r\n        <div className=\"info__contacts\">\r\n            <div className=\"contacts__phones\">\r\n                {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    checkEducation(){\r\n        if (this.props.userData.education.length!== 0) return(\r\n        <div className=\"info__education\">\r\n            <h3 className=\"education-head bold headed\">Образование:</h3>\r\n            {this.props.userData.education.map((el, index)=>{\r\n                return (\r\n                    <div className=\"education-block\" key={index}>\r\n                        <p className=\"education-name highlighted\">{el.proffession}</p>\r\n                        <div className=\"education-place\">\r\n                            <p className=\"education-place__institution\">{el.university},</p>\r\n                            <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                            <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>)\r\n    }\r\n\r\n    checkWorkExperience(){\r\n        if (this.props.userData.education.length!== 0) return (\r\n        <div className=\"info__work-experience\">\r\n            <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n            {this.props.userData.exp.map((el, index)=>{\r\n                return (\r\n                    <div className=\"education-block\" key={index}>\r\n                        <p className=\"education-name highlighted\">{el.position}</p>\r\n                        <div className=\"education-place\">\r\n                            <p className=\"education-place__institution\">{el.company},</p>\r\n                            <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n    \r\n                            <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userState.hasProfile && this.props.userState.user.id === this.props.userData.user_id){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\">\r\n                        <img className=\"personal__avatar\" src={placeholderAvatar} alt=\"аватар\"/>\r\n\r\n                        <button className=\"photo-redact-btn\"  onClick={this.redactProfile}>\r\n                            <img src={editIcon} alt=\"editIcon\"/>\r\n                        </button>\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        <div className=\"info__common-info\">\r\n                            <p className=\"info__common-info__birthday\">{this.props.userData.birthday}</p>\r\n                            <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__place\">{this.props.userData.city}</p>\r\n                                <p className=\"living__cz\">{this.props.userData.cz}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {this.checkContacts()}\r\n                        \r\n                        {this.checkEducation()}\r\n                                               \r\n                        {this.checkWorkExperience()}\r\n                        \r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user_id)\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\">\r\n                    <img className=\"personal__avatar\" src={placeholderAvatar} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    {/* {\r\n                        this.props.userState.user.id === this.props.userData.user_id ? (\r\n                            <div>\r\n                                <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                                {this.goPhrase()}\r\n\r\n                                <button className=\"profile-redact-btn\" onClick={this.redactProfile}>\r\n                                    <img src={plusIcon} alt=\"plusIcon\"/>\r\n                                </button> \r\n                            </div>\r\n                            \r\n                        ):(\r\n                            <p className=\"info__description\">Профиль пуст</p>\r\n                        )\r\n                    } */}\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-redact-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n        else\r\n        return(\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\">\r\n                        <img className=\"personal__avatar\" src={placeholderAvatar} alt=\"аватар\"/>\r\n\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        <div className=\"info__common-info\">\r\n                            <p className=\"info__common-info__birthday\">{this.props.userData.birthday}</p>\r\n                            <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__place\">{this.props.userData.city}</p>\r\n                                <p className=\"living__cz\">{this.props.userData.cz}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {this.checkContacts()}\r\n    \r\n                        {this.checkEducation()}\r\n\r\n                        {this.checkWorkExperience()}\r\n                    </section>\r\n                </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n",["99","100"],"D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Side\\Side.js",[],"D:\\react тесты\\diploma\\dev\\src\\reducers\\nav.js",[],["101","102"],"D:\\react тесты\\diploma\\dev\\src\\reducers\\profile.js",[],"D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\Profile.js",["103","104"],"D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js",["105","106"],"D:\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js",[],"D:\\react тесты\\diploma\\dev\\src\\components\\Nav\\SearchPanel\\SearchPanel.js",[],"D:\\react тесты\\diploma\\dev\\src\\App.js",[],["107","108"],"D:\\react тесты\\diploma\\dev\\src\\components\\Landing\\Landing.js",[],"D:\\react тесты\\diploma\\dev\\src\\components\\Loader\\Loader.js",[],"D:\\react тесты\\diploma\\dev\\src\\reducers\\reducer.js",[],"D:\\react тесты\\diploma\\dev\\src\\reducers\\userData.js",[],{"ruleId":"109","severity":1,"message":"110","line":7,"column":9,"nodeType":"111","messageId":"112","endLine":7,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":7,"column":28,"nodeType":"111","messageId":"112","endLine":7,"endColumn":45},{"ruleId":"109","severity":1,"message":"114","line":7,"column":47,"nodeType":"111","messageId":"112","endLine":7,"endColumn":61},{"ruleId":"109","severity":1,"message":"115","line":7,"column":63,"nodeType":"111","messageId":"112","endLine":7,"endColumn":74},{"ruleId":"116","severity":1,"message":"117","line":247,"column":106,"nodeType":"118","endLine":247,"endColumn":118},{"ruleId":"109","severity":1,"message":"119","line":329,"column":15,"nodeType":"111","messageId":"112","endLine":329,"endColumn":19},{"ruleId":"109","severity":1,"message":"120","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":16,"suggestions":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"109","severity":1,"message":"131","line":15,"column":8,"nodeType":"111","messageId":"112","endLine":15,"endColumn":11},{"ruleId":"125","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"109","severity":1,"message":"134","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":23},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"109","severity":1,"message":"139","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":40,"column":17,"nodeType":"142","messageId":"143","endLine":40,"endColumn":27},{"ruleId":"109","severity":1,"message":"113","line":6,"column":28,"nodeType":"111","messageId":"112","endLine":6,"endColumn":45},{"ruleId":"109","severity":1,"message":"144","line":116,"column":13,"nodeType":"111","messageId":"112","endLine":116,"endColumn":21},{"ruleId":"125","replacedBy":"145"},{"ruleId":"127","replacedBy":"146"},"no-unused-vars","'createNewEmployee' is defined but never used.","Identifier","unusedVar","'createNewEmployer' is defined but never used.","'updateEmployee' is defined but never used.","'getUserData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'name' is assigned a value but never used.","'Cookies' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logged', 'onNavPositionChangeToFixed', and 'onNavPositionChangeToNone'. Either include them or remove the dependency array. If 'onNavPositionChangeToFixed' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["147"],"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"'App' is defined but never used.",["148"],["149"],"'photoRedactIcon' is defined but never used.",["148"],["149"],["148"],["149"],"'userData' is defined but never used.","no-dupe-keys","Duplicate key 'userPhones'.","ObjectExpression","unexpected","'userName' is assigned a value but never used.",["148"],["149"],{"desc":"150","fix":"151"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [location, logged, onNavPositionChangeToFixed, onNavPositionChangeToNone]",{"range":"152","text":"153"},[1326,1336],"[location, logged, onNavPositionChangeToFixed, onNavPositionChangeToNone]"]