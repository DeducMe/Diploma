[{"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\CompanyProfile.js":"1","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\user.js":"2","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\serverConnections.js":"3","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\leafletMap\\testCities.js":"4","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Search\\SearchMain\\SearchMain.js":"5","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\scripts\\commonScripts.js":"6","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\FavouritesPopup\\FavouritesPopup.js":"7","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\nav.js":"8","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\response.js":"9","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Main\\Main.js":"10","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Vacancies\\VacancyRedactPopup\\VacancyRedactPopup.js":"11","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Landing\\Landing.js":"12","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Side\\Side.js":"13","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\fileUploader.js":"14","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\ResponsePopup\\ResponsePopup.js":"15","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\Popup\\Popup.js":"16","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\search.js":"17","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js":"18","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Resumes\\ResumeRedactPopup\\ResumeRedactPopup.js":"19","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\index.js":"20","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Responses\\ResponsePopup.js":"21","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\ProfileRedactPopup\\MainPlaceholder.js":"22","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ImageCropper.js":"23","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Search\\Search.js":"24","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\companyProfile.js":"25","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Side\\Side.js":"26","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\asyncDispatch.js":"27","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Loader\\Loader.js":"28","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\Nav.js":"29","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\leafletMap\\LeafletMap.js":"30","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js":"31","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Main\\Main.js":"32","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Resumes\\Resumes.js":"33","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ImageCropper.js":"34"},{"size":4526,"mtime":1616093115928,"results":"35","hashOfConfig":"36"},{"size":2230,"mtime":1618393435206,"results":"37","hashOfConfig":"36"},{"size":21109,"mtime":1621161633368,"results":"38","hashOfConfig":"36"},{"size":69503,"mtime":1618218954892,"results":"39","hashOfConfig":"36"},{"size":14084,"mtime":1622374376977,"results":"40","hashOfConfig":"36"},{"size":6245,"mtime":1621596973790,"results":"41","hashOfConfig":"36"},{"size":11072,"mtime":1621597169367,"results":"42","hashOfConfig":"36"},{"size":4671,"mtime":1618502372018,"results":"43","hashOfConfig":"36"},{"size":3697,"mtime":1618132668874,"results":"44","hashOfConfig":"36"},{"size":6637,"mtime":1622377549478,"results":"45","hashOfConfig":"36"},{"size":27068,"mtime":1618921772050,"results":"46","hashOfConfig":"36"},{"size":7030,"mtime":1620433445126,"results":"47","hashOfConfig":"36"},{"size":249,"mtime":1614354532959,"results":"48","hashOfConfig":"36"},{"size":462,"mtime":1612661823022,"results":"49","hashOfConfig":"36"},{"size":3508,"mtime":1618572694483,"results":"50","hashOfConfig":"36"},{"size":13934,"mtime":1622373674892,"results":"51","hashOfConfig":"36"},{"size":6694,"mtime":1620432779942,"results":"52","hashOfConfig":"36"},{"size":6870,"mtime":1622377094679,"results":"53","hashOfConfig":"36"},{"size":18024,"mtime":1618921750577,"results":"54","hashOfConfig":"36"},{"size":1841,"mtime":1618741093134,"results":"55","hashOfConfig":"36"},{"size":6778,"mtime":1620433560099,"results":"56","hashOfConfig":"36"},{"size":3091,"mtime":1616668818571,"results":"57","hashOfConfig":"36"},{"size":7266,"mtime":1620433207124,"results":"58","hashOfConfig":"36"},{"size":1699,"mtime":1620432695318,"results":"59","hashOfConfig":"36"},{"size":3664,"mtime":1616094655715,"results":"60","hashOfConfig":"36"},{"size":249,"mtime":1616174226855,"results":"61","hashOfConfig":"36"},{"size":1497,"mtime":1618505244217,"results":"62","hashOfConfig":"36"},{"size":872,"mtime":1618396102638,"results":"63","hashOfConfig":"36"},{"size":12491,"mtime":1622375781311,"results":"64","hashOfConfig":"36"},{"size":3983,"mtime":1622375645909,"results":"65","hashOfConfig":"36"},{"size":6942,"mtime":1622377619343,"results":"66","hashOfConfig":"36"},{"size":11360,"mtime":1622377567263,"results":"67","hashOfConfig":"36"},{"size":6988,"mtime":1620433070821,"results":"68","hashOfConfig":"36"},{"size":6082,"mtime":1620432489302,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yz14pr",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\CompanyProfile.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\user.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\serverConnections.js",[],["143","144"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\leafletMap\\testCities.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Search\\SearchMain\\SearchMain.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\scripts\\commonScripts.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\FavouritesPopup\\FavouritesPopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\nav.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\response.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Main\\Main.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Vacancies\\VacancyRedactPopup\\VacancyRedactPopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Landing\\Landing.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\Side\\Side.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\fileUploader.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\ResponsePopup\\ResponsePopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\Popup\\Popup.js",["145"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport './popup.css'\r\nimport {registrateNewUser, loginUser} from '../../../actions/serverConnections.js'\r\nimport Loader from '../../Loader/Loader'\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\n\r\nclass Popup extends Component {\r\n  \r\n  changeSubject(){\r\n    console.log(this.props.popupState.subject)\r\n    if (this.props.popupState.subject === 'employee'){\r\n      this.props.onSubjectChangeToEmployer();\r\n    }\r\n    else if (this.props.popupState.subject === 'employer'){\r\n      this.props.onSubjectChangeToEmployee();\r\n    }\r\n    console.log(this.props.popupState.submitValue)\r\n  }\r\n\r\n  checkUserType(){\r\n    if (this.props.popupState.subject === 'employee'){\r\n      return 'соискатель';\r\n    }\r\n    else{\r\n      return 'работодатель';\r\n    }\r\n  }\r\n\r\n \r\n  recaptchaCheck(value) {\r\n    console.log(\"Captcha value:\", value);\r\n  }\r\n\r\n  handleCloseBtnClick(e){\r\n    e.preventDefault()\r\n    this.popupClose()\r\n  }\r\n\r\n  popupClose(){\r\n    console.log('s')\r\n    this.props.onResetValidation()\r\n    \r\n    this.props.onPopupClose();\r\n  }\r\n\r\n  fetchError = (type) =>{\r\n    if (type === 'wrong-data'){\r\n      this.props.onWrongPasswordInput('*Неверный логин или пароль')\r\n    }\r\n    else if(type === 'wrong-email'){\r\n      this.props.onWrongEmailInput('*Такой э-мэйл не зарегестрирован')\r\n    }\r\n    else if(type === 'wrong-password'){\r\n      this.props.onWrongPasswordInput('*Пароль неверен')\r\n    }\r\n    else if(type === 'email-occupied'){\r\n      this.props.onWrongEmailInput('*Такой э-мэйл уже занят')\r\n    }\r\n    this.props.onDeactivateLoader()\r\n\r\n  }\r\n\r\n  redirectUser = (userId) =>{\r\n    this.props.onLoginUser();\r\n    this.getAvatarFromFirebase()\r\n    localStorage['user'] = JSON.stringify(this.props.userState)\r\n    if (this.props.userState.user_type === 'employee'){\r\n      this.props.history.push(\"/profile/\" + userId);\r\n    }\r\n    else{\r\n      this.props.history.push(\"/company/\" + userId);\r\n\r\n    }\r\n    this.popupClose();\r\n\r\n    this.props.onDeactivateLoader()\r\n  }\r\n\r\n  loginUser(login, password){\r\n    this.props.onActivateLoader()\r\n\r\n    this.props.onLoginUserCheck({\r\n      \"email\": login,\r\n      \"password\": password\r\n    }, this.redirectUser, this.fetchError) // server response here\r\n  }\r\n\r\n  registrateUser(data){\r\n    this.props.onActivateLoader()\r\n\r\n    this.props.onRegistrationUserFetch(data, this.redirectUser, this.fetchError, this.props.onLoginUserCheck)\r\n  }\r\n\r\n  validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  validatePassword(password){\r\n    var re = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,}/;   // 4 or more characters\r\n                                                      // a digit\r\n                                                      // a lower-case letter\r\n                                                      // an upper-case letter\r\n    return re.test(password);\r\n  }\r\n\r\n  async registrationJsonCreate(login, password, username, type){\r\n    return {\r\n      \"name\": username,\r\n      \"email\": login,\r\n      \"password\": password,\r\n      \"user_type\": type\r\n    }\r\n    \r\n  }\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    let login = e.target.loginInput.value\r\n    let password = e.target.passwordInput.value\r\n    let validateInputs = [this.validateEmail(login), this.validatePassword(password)]\r\n    this.props.onResetValidation()\r\n    setTimeout(()=>{\r\n      if (validateInputs.includes(false)){\r\n        if (!this.validateEmail(login)){\r\n          this.props.onWrongEmailInput('*Неверный формат э-мэйл')\r\n        }\r\n        if (!this.validatePassword(password)){\r\n          this.props.onWrongPasswordInput('*В пароле должно содержаться не менее 4 символов, как минимум 1 цифра, 1 заглавная буква и 1 прописная буква')\r\n        }\r\n      }\r\n      else{\r\n        if (this.props.popupState.type === 'login'){\r\n          this.loginUser(login, password)\r\n\r\n        }\r\n        else if (this.props.popupState.type === 'registration'){\r\n          let username = e.target.nameInput.value\r\n\r\n          this.registrationJsonCreate(login, password, username, this.props.popupState.subject)\r\n          .then(data => this.registrateUser(data))\r\n\r\n        }\r\n      }\r\n    },0)\r\n  } \r\n\r\n  handleEsc = (e) => {\r\n    if (e.keyCode === 27) {\r\n      this.popupClose()\r\n    }\r\n  }\r\n  \r\n  getAvatarFromFirebase = () =>{   //пришлось делать кучу изменений состояний, потому что один flutter разработчик решил, что он не будет сохранять url. \r\n    const storageRef = fileUploader.storage().ref()\r\n    const fileRef = storageRef.child('user-avatar' + this.props.userState.id)\r\n    fileRef.getDownloadURL()\r\n    .then((response) => this.props.onSetUserMiniAvatar(response))\r\n    .catch(err => this.props.onSetUserMiniAvatar('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54'))\r\n  }\r\n  \r\n  checkZoneClick(e){\r\n    if (e.target.id === 'loginBlurBox' || e.target.id === 'registrationBlurBox'){\r\n      this.popupClose()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    // window.addEventListener('click', this.handleAreaClick)\r\n    window.addEventListener('keydown', this.handleEsc)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // window.removeEventListener('click', this.handleAreaClick)\r\n    window.removeEventListener('keydown', this.handleEsc)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.popupState.type === 'login')\r\n      return (\r\n\r\n    <div className={\"blur-box \" + this.props.popupState.state} onClick={this.checkZoneClick.bind(this)} id=\"loginBlurBox\">\r\n      <div className=\"popup-wrapper rounded\">\r\n        <h2 className=\"popup-header\">Вход</h2>\r\n\r\n        <form className=\"\" action=\"\" method=\"post\" onSubmit={this.handleFormSubmit}>\r\n          <div className={\"input-field underline-anim wrong-\" + this.props.wrongEmail}>\r\n            <input className=\"popup__text-input\" id=\"loginInput\" name=\"loginInput\" type=\"text\" placeholder=\" \"/>\r\n            <label className=\"popup__text-label\" htmlFor=\"loginInput\">Логин</label>\r\n          </div>\r\n\r\n          <p className={\"email-input-hint \" + this.props.wrongEmail}>{this.props.wrongEmailError}</p>\r\n          \r\n          <div className={\"input-field underline-anim wrong-\" + this.props.wrongPassword}>\r\n            <input className=\"popup__text-input\" id=\"passwordInput\" name=\"passwordInput\" type=\"password\" placeholder=\" \"/>\r\n            <label className=\"popup__text-label\" htmlFor=\"passwordInput\">Пароль</label>\r\n          </div>\r\n\r\n          <p className={\"password-input-hint \" + this.props.wrongPassword}>{this.props.wrongPasswordError}</p>\r\n          \r\n          <div className=\"checkbox\">\r\n            <input className=\"inp-cbx\" id=\"morning\" type=\"checkbox\"/>\r\n            <label className=\"cbx\" htmlFor=\"morning\"><span>\r\n            <svg width=\"12px\" height=\"10px\">\r\n              <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\r\n            </svg></span><span>Запомните меня!</span></label>\r\n          </div>\r\n          <Loader active={this.props.loaderActive}></Loader>\r\n          <input className=\"form-submit-btn f-large rounded\" type=\"submit\" value=\"Войти!\"/>\r\n          <button className=\"close-popup-btn\" onClick={this.handleCloseBtnClick.bind(this)} tabIndex=\"-1\">x</button>\r\n\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n        )\r\n    else return (\r\n\r\n    <div className={\"blur-box \" + this.props.popupState.state} onClick={this.checkZoneClick.bind(this)} id=\"registrationBlurBox\">\r\n      <div className=\"popup-wrapper rounded\">\r\n        <h2 className=\"popup-header\">Регистрация</h2>\r\n\r\n        <form method=\"post\" onSubmit={this.handleFormSubmit}>         \r\n\r\n          <div className={\"input-field underline-anim wrong-\" + this.props.wrongEmail}>\r\n            <input className=\"popup__text-input\" id=\"loginInput\" name=\"loginInput\" type=\"text\" placeholder=\" \"/>\r\n            <label className=\"popup__text-label\" htmlFor=\"loginInput\">Логин (почта)</label>\r\n          </div>\r\n\r\n          <p className={\"email-input-hint \" + this.props.wrongEmail}>{this.props.wrongEmailError}</p>\r\n          \r\n          <div className={\"input-field underline-anim wrong-\" + this.props.wrongPassword}>\r\n            <input className=\"popup__text-input\" id=\"passwordInput\" name=\"passwordInput\" type=\"password\" placeholder=\" \"/>\r\n            <label className=\"popup__text-label\" htmlFor=\"passwordInput\">Пароль</label>\r\n          </div>\r\n\r\n          <div className=\"input-field underline-anim\">\r\n            <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \"/>\r\n            <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя</label>\r\n          </div>\r\n\r\n          <ReCAPTCHA\r\n            sitekey=\"6LcEwOYaAAAAAJwcQq13zkbJrEZtHkNX-2Z3dDBN\"\r\n            onChange={this.recaptchaCheck}\r\n            size = \"compact\"\r\n          />\r\n\r\n          <p className={\"password-input-hint \" + this.props.wrongPassword}>{this.props.wrongPasswordError}</p>\r\n\r\n          <div className=\"togglebox\" >\r\n            <span>Я - </span>\r\n            <div className=\"main-capsule\">\r\n              <input type=\"checkbox\" id=\"hidcheck\" hidden onClick={this.changeSubject.bind(this)} />\r\n              <label className=\"capsule\" htmlFor=\"hidcheck\" id=\"capsule-id\" >\r\n                <div className=\"circle\"></div>\r\n                <div className=\"text-signs\">\r\n                  <span id=\"on\"></span>\r\n                </div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"checkbox\">\r\n            <p>Вы будете зарегистрированы как {this.checkUserType()}</p>\r\n            <input className=\"inp-cbx\" id=\"morning\" type=\"checkbox\"/>\r\n            <label className=\"cbx\" htmlFor=\"morning\"><span>\r\n            <svg width=\"12px\" height=\"10px\">\r\n              <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\r\n            </svg></span><span>Запомните меня!</span></label>\r\n          </div>\r\n          <Loader active={this.props.loaderActive}></Loader>\r\n\r\n\r\n          <input className=\"form-submit-btn f-large rounded\" type=\"submit\" value={this.props.submitValue}/>\r\n\r\n          <button className=\"close-popup-btn\" onClick={this.handleCloseBtnClick.bind(this)}  tabIndex=\"-1\">x</button>\r\n\r\n          <p>\r\nНажимая «Зарегистрироваться», вы подтверждаете, что ознакомлены, полностью согласны и принимаете условия <a href=\"#\">«Соглашения об оказании услуг по содействию в трудоустройстве (оферта)»</a></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  return {\r\n    submitValue: state.nav.popup.submitValue,\r\n    wrongEmail:state.nav.popup.wrongEmail,\r\n    wrongPassword:state.nav.popup.wrongPassword,\r\n    popupActive: state.nav.popup.state,\r\n    popupState: state.nav.popup,\r\n    loaderActive: state.nav.popup.loginPopupLoaderActive,\r\n    wrongEmailError:state.nav.popup.wrongEmailError,\r\n    wrongPasswordError:state.nav.popup.wrongPasswordError,\r\n    userState:state.user.user\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    onSetUserMiniAvatar: (photo) => {\r\n      dispatch({type : 'SET_USER_MINI_AVATAR', payload:photo})\r\n    },\r\n    onSubjectChangeToEmployer: () => {\r\n      dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n    },\r\n    onSubjectChangeToEmployee: () => {\r\n      dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYEE', payload:null})\r\n    },\r\n    onPopupClose: () => {\r\n      dispatch({type : 'POPUP_CLOSE', payload:null})\r\n    },\r\n    onWrongEmailInput: (errorMsg) => {\r\n      dispatch({type : 'WRONG_EMAIL_INPUT', payload:errorMsg})\r\n    },\r\n    onWrongPasswordInput: (errorMsg) => {\r\n      dispatch({type : 'WRONG_PASSWORD_INPUT', payload:errorMsg})\r\n    },\r\n    onResetValidation: ()=>{\r\n      dispatch({type : 'RESET_VALIDATION', payload:null})\r\n    },\r\n    onLoginUser: () => {\r\n      dispatch({type : 'USER_LOGIN', payload:null})\r\n    },\r\n\r\n    onLoginUserCheck: (data, redirectUser, fetchError) =>{\r\n      dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n      \r\n      dispatch(loginUser(data))\r\n      .then(data => {\r\n        console.log(data)\r\n        if (data.data !== null && data.data !== 0 && data.data !== undefined){\r\n          redirectUser(data.data.id)\r\n        }\r\n        else{\r\n          fetchError('wrong-data')\r\n        }\r\n\r\n      })\r\n    },\r\n    onRegistrationUserFetch: (data, redirectUser, fetchError, onLoginUserCheck) => {\r\n      const userCredentials = data\r\n      dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n      dispatch(registrateNewUser(userCredentials))\r\n      .then(data => {\r\n        console.log(data)\r\n        if (data.data !== null && data.data !== 0 && data.data !== undefined){\r\n          onLoginUserCheck(userCredentials, redirectUser, fetchError)\r\n        }\r\n        else{\r\n          fetchError('email-occupied')\r\n        }\r\n\r\n      })\r\n      \r\n    },\r\n    \r\n    onActivateLoader: ()=>{\r\n      dispatch({type : 'LOGIN_ACTIVATE_LOADER', payload:null})\r\n    },\r\n    onDeactivateLoader: ()=>{\r\n      dispatch({type : 'LOGIN_DEACTIVATE_LOADER', payload:null})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\r\n",["146","147"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\search.js",[],["148","149"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Resumes\\ResumeRedactPopup\\ResumeRedactPopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\index.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Responses\\ResponsePopup.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\ProfileRedactPopup\\MainPlaceholder.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\ImageCropper.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Search\\Search.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\reducers\\companyProfile.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Side\\Side.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\actions\\asyncDispatch.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Loader\\Loader.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Nav\\Nav.js",["150"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\leafletMap\\LeafletMap.js",["151"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js",["152"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\nimport ImageCropper from \"./ImageCropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\nexport class MainPlaceholder extends Component {\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-placeholder rounded\">\r\n                <div className=\"main-placeholder__personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.personalBackground, personalBackground)})`}}>\r\n                    <img className=\"main-placeholder__personal__avatar\" src={this.checkOnEmpty(this.props.avatarPhoto, placeholderAvatar)} alt=\"аватар\"/>\r\n                </div>\r\n                <section className=\"main-placeholder__info\">\r\n                    <div className=\"main-placeholder__info-wrapper\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userName}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userDescription}</p>\r\n                        <div className=\"info__common-info\">\r\n                            \r\n                            <p className={'info__common-info__birthday ' + this.props.userBirthday?.substring(0, 10)}>{this.props.userBirthday?.substring(0, 10)}</p>\r\n                            <p className={'info__common-info__gender ' + this.props.userGender}></p>\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__cz\">{this.props.userCz}</p>\r\n                                <p className=\"living__place\">{this.props.userAddress ? this.props.userAddress.name:''}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"info__contacts__phones\">\r\n                            <p>Контакты:</p>\r\n                            {this.props.userPhones.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                        </div>\r\n\r\n                        <div className=\"info__languages\">\r\n                            <p>Владение языками:</p>\r\n                            {this.props.userLanguages.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                        </div>\r\n                        \r\n                        {this.props.userEducation.length!== 0 ?(\r\n                            <div className=\"info__education\">\r\n                                <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                {this.props.userEducation.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.university},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                                               \r\n                        {this.props.userExperience.length!== 0 ? (\r\n                            <div className=\"info__work-experience\">\r\n                                <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                {this.props.userExperience.map((el, index)=>{\r\n                                    console.log('education', el)\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.position}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.company},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year.substring(0, 10) + ' - ' + el.end_year.substring(0, 10)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                    </div>\r\n                </section>\r\n                \r\n                <ImageCropper avatar={this.props.avatarPhoto} background={this.props.personalBackground}></ImageCropper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholderData: state.profile.placeholder,\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        userName: state.profile.placeholder.userName,\r\n        avatarPhoto:state.profile.placeholder.photo_url,\r\n        personalBackground:state.profile.placeholder.profile_background,\r\n        userDescription: state.profile.placeholder.description,\r\n        userBirthday: state.profile.placeholder.birthday,\r\n        userGender:state.profile.placeholder.gender,\r\n        userAddress:state.profile.address,\r\n        userCz:state.profile.placeholder.citizenship,\r\n        userPhones:state.profile.userPhones,\r\n        userLanguages: state.profile.language,\r\n        userEducation:state.profile.education,\r\n        userExperience:state.profile.experience,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onUpdateUserName: (userName) => {\r\n        dispatch({type : 'PLACEHOLDER_UPDATE_USER_NAME', payload:userName})\r\n      },\r\n      setCropperInstance: (instance) => {\r\n        dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPlaceholder)\r\n","D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Main\\Main.js",["153","154"],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\Profile\\Resumes\\Resumes.js",[],"D:\\Сашка\\кодим\\react тесты\\diploma\\dev\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ImageCropper.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":283,"column":106,"nodeType":"161","endLine":283,"endColumn":118},{"ruleId":"155","replacedBy":"162"},{"ruleId":"157","replacedBy":"163"},{"ruleId":"155","replacedBy":"164"},{"ruleId":"157","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":235,"column":113,"nodeType":"168","endLine":235,"endColumn":185},{"ruleId":"169","severity":1,"message":"170","line":40,"column":8,"nodeType":"171","endLine":40,"endColumn":13,"suggestions":"172"},{"ruleId":"159","severity":1,"message":"173","line":50,"column":80,"nodeType":"161","endLine":50,"endColumn":120},{"ruleId":"159","severity":1,"message":"173","line":116,"column":88,"nodeType":"161","endLine":116,"endColumn":128},{"ruleId":"159","severity":1,"message":"173","line":121,"column":88,"nodeType":"161","endLine":121,"endColumn":127},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["174"],["175"],["174"],["175"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onMove'. Either include it or remove the dependency array.","ArrayExpression",["176"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [map, onMove]",{"range":"179","text":"180"},[1406,1411],"[map, onMove]"]