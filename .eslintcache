[{"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\index.js":"1","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\Search.js":"2","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\Nav.js":"3","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\nav.js":"4","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\profile.js":"5","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\companyProfile.js":"6","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Vacancies\\Vacancies.js":"7","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Loader\\Loader.js":"8","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js":"9","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\serverConnections.js":"10","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\MainPlaceholder.js":"11","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionBaseInfo.js":"12","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionImages.js":"13","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionImages.js":"14","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionExperience.js":"15","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\ImageCropper.js":"16","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\SearchMain\\SearchMain.js":"17","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\search.js":"18","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\asyncDispatch.js":"19","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\CompanyProfile.js":"20","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\SearchSide\\SearchSide.js":"21","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\user.js":"22","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\vacancy.js":"23","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Side\\Side.js":"24","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Main\\Main.js":"25","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\scripts\\commonScripts.js":"26","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Vacancies\\VacancyRedactPopup\\VacancyRedactPopup.js":"27","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ImageCropper.js":"28","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Profile.js":"29","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\cvs.js":"30","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ProfileRedactPopup.js":"31","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\fileUploader.js":"32","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js":"33","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\leafletMap\\LeafletMap.js":"34","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Landing\\Landing.js":"35","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Side\\Side.js":"36","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\Popup\\Popup.js":"37","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Resumes\\ResumeRedactPopup\\ResumeRedactPopup.js":"38","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\SearchPanel\\SearchPanel.js":"39"},{"size":1593,"mtime":1616847789815,"results":"40","hashOfConfig":"41"},{"size":2266,"mtime":1616864273544,"results":"42","hashOfConfig":"41"},{"size":8018,"mtime":1616847789708,"results":"43","hashOfConfig":"41"},{"size":3809,"mtime":1616847789829,"results":"44","hashOfConfig":"41"},{"size":6451,"mtime":1616847789831,"results":"45","hashOfConfig":"41"},{"size":3664,"mtime":1616847789827,"results":"46","hashOfConfig":"41"},{"size":5644,"mtime":1616847789695,"results":"47","hashOfConfig":"41"},{"size":874,"mtime":1616847789705,"results":"48","hashOfConfig":"41"},{"size":7013,"mtime":1616847789728,"results":"49","hashOfConfig":"41"},{"size":11767,"mtime":1616867991255,"results":"50","hashOfConfig":"41"},{"size":3091,"mtime":1616847789683,"results":"51","hashOfConfig":"41"},{"size":4687,"mtime":1616847789689,"results":"52","hashOfConfig":"41"},{"size":5022,"mtime":1616847789690,"results":"53","hashOfConfig":"41"},{"size":5161,"mtime":1616847789733,"results":"54","hashOfConfig":"41"},{"size":8610,"mtime":1616847789732,"results":"55","hashOfConfig":"41"},{"size":5843,"mtime":1616847789725,"results":"56","hashOfConfig":"41"},{"size":10552,"mtime":1616868829743,"results":"57","hashOfConfig":"41"},{"size":2934,"mtime":1616868408548,"results":"58","hashOfConfig":"41"},{"size":321,"mtime":1616851365217,"results":"59","hashOfConfig":"41"},{"size":4526,"mtime":1616847789677,"results":"60","hashOfConfig":"41"},{"size":241,"mtime":1616847789747,"results":"61","hashOfConfig":"41"},{"size":2050,"mtime":1616847789836,"results":"62","hashOfConfig":"41"},{"size":11142,"mtime":1616847789838,"results":"63","hashOfConfig":"41"},{"size":249,"mtime":1616847789740,"results":"64","hashOfConfig":"41"},{"size":12994,"mtime":1616847789721,"results":"65","hashOfConfig":"41"},{"size":4030,"mtime":1616847789841,"results":"66","hashOfConfig":"41"},{"size":24306,"mtime":1616847789697,"results":"67","hashOfConfig":"41"},{"size":5982,"mtime":1616847789682,"results":"68","hashOfConfig":"41"},{"size":7491,"mtime":1616847789723,"results":"69","hashOfConfig":"41"},{"size":6672,"mtime":1616847789828,"results":"70","hashOfConfig":"41"},{"size":5662,"mtime":1616847789686,"results":"71","hashOfConfig":"41"},{"size":462,"mtime":1616847789674,"results":"72","hashOfConfig":"41"},{"size":6775,"mtime":1616847789726,"results":"73","hashOfConfig":"41"},{"size":3764,"mtime":1616847789750,"results":"74","hashOfConfig":"41"},{"size":323,"mtime":1616847789702,"results":"75","hashOfConfig":"41"},{"size":249,"mtime":1616847789692,"results":"76","hashOfConfig":"41"},{"size":11832,"mtime":1616847789713,"results":"77","hashOfConfig":"41"},{"size":15504,"mtime":1616847789736,"results":"78","hashOfConfig":"41"},{"size":5498,"mtime":1616868783606,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"gozzt4",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\index.js",["170"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport reducer from './reducers/reducer'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport {createBrowserHistory} from 'history'\r\nimport Profile from './components/Profile/Profile'\r\nimport CompanyProfile from './components/CompanyProfile/CompanyProfile'\r\nimport Search from './components/Search/Search'\r\n\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\"\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport Nav from './components/Nav/Nav'\r\nimport { syncHistoryWithStore } from 'react-router-redux';\r\nimport Landing from './components/Landing/Landing';\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  ));   // reducer\r\nconst hashHistory = createBrowserHistory();\r\nconst history = syncHistoryWithStore(hashHistory, store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>  \r\n      <Route path=\"/\" component={Nav}/>\r\n\r\n      <Switch>\r\n          <Route path=\"/landing\" component={Landing}/>\r\n          <Route path=\"/search\" component={Search}/>\r\n          <Route path=\"/profile/:id\" component={Profile}/>\r\n          <Route path=\"/company/:id\" component={CompanyProfile}/>\r\n          <Redirect from=\"*\" to=\"/landing\"/>\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n",["171","172"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\Search.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\Nav.js",["173"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Popup from './Popup/Popup'\r\nimport OptionsPopup from './OptionsPopup/OptionsPopup'\r\n\r\nimport logo from '../../img/logo.svg'\r\nimport arrow from '../../img/arrow.svg'\r\nimport star from '../../img/star.svg'\r\nimport bell from '../../img/bell.svg'\r\nimport SearchPanel from './SearchPanel/SearchPanel'\r\nimport './nav.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {logout} from '../../actions/serverConnections'\r\nimport placeholderAvatar from '../../img/placeholder-avatar.jpg'\r\n\r\n\r\n\r\nconst Nav = ({logged, navState, onSearchActivate, userState, onSearchDeactivate, onDropDownActivate, onDropDownDeactivate, onOptionsPopupActivate, onOptionsPopupDeactivate, onLogout, onRegistrationPopupActivate,userData, onLoginPopupActivate, onNavPositionChangeToFixed, onNavPositionChangeToNone, location, history}) => {\r\n  function searchToggle(){\r\n    if (navState.searchActive){\r\n      onSearchDeactivate();\r\n    }\r\n    else{\r\n      onSearchActivate();\r\n    }\r\n  }\r\n\r\n  function registartionPopupOpen(){\r\n    onRegistrationPopupActivate(history);\r\n  }\r\n\r\n  function loginPopupOpen(){\r\n    onLoginPopupActivate(history);\r\n  }\r\n\r\n  function logoutHandleFormSubmit(e){\r\n    e.preventDefault();\r\n    onLogout()\r\n  }\r\n\r\n  function dropdownToggle(){\r\n    if (navState.dropDownState === ''){\r\n      onDropDownActivate();\r\n    }\r\n    else{\r\n      onDropDownDeactivate();\r\n    }\r\n  }\r\n\r\n  function optionsPopupToggle(){\r\n    if (navState.optionsPopup.optionsPopupState === ''){\r\n      onOptionsPopupActivate();\r\n    }\r\n    else{\r\n      onOptionsPopupDeactivate();\r\n    }\r\n  }\r\n\r\n  function checkOnEmpty(el, returnValue){\r\n    if (el !== \"\"){\r\n        return el\r\n    }\r\n\r\n    return returnValue\r\n  }\r\n\r\n  function getUserProfileLink() {\r\n    return \"/\"+(userState.user.user_type === 'employee' ? 'profile' : 'company')+\"/\"+userState.user.id\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (location === '/landing')\r\n      onNavPositionChangeToFixed()\r\n    else {\r\n      onNavPositionChangeToNone()\r\n      if (!logged){\r\n        // history.push('/landing')\r\n      }\r\n    }\r\n  }, [location]);\r\n  \r\n  if (logged)\r\n      return (\r\n  <div className={\"nav-block \"+navState.position}>\r\n    <div className=\"nav-bar\">\r\n      <div className=\"container\">\r\n        <nav className=\"nav\">\r\n          <div className=\"nav__left-side\">\r\n            <Link to=\"/landing\" className=\"nav-el\" >\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Link>\r\n\r\n            <Link to=\"/content\" className=\"f-medium semi link-anim nav-el\">Полезное</Link>\r\n\r\n            <Link to=\"/responses\" className=\"f-medium semi link-anim nav-el\">Отклики</Link>\r\n\r\n            <button  className={\"nav-el nav__search \" + navState.searchActive} onClick={searchToggle}>\r\n              <span className=\"f-medium semi\">Поиск</span> \r\n              <img src={arrow} alt=\"arrow\"/>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"nav__right-side\">\r\n            <button  className=\"icon-anim nav-el\">\r\n              <img src={bell} alt=\"notifications\"/>\r\n            </button>\r\n\r\n            <button  className=\"icon-anim nav-el\">\r\n              <img src={star} alt=\"favourites\"/>\r\n            </button>\r\n            <div className=\"nav__profile-data nav-el\">\r\n              <div className=\"nav__profile-data__main link-anim\" onClick={dropdownToggle}>\r\n                <Link to={getUserProfileLink()} className=\"f-medium semi flex\">\r\n                  <img className=\"nav__profile-data__avatar\" src={checkOnEmpty(userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </Link>\r\n                <button className=\"nav__profile-data__options-btn\">{userState.user.name}</button>\r\n              </div>\r\n              \r\n              <div className={\"nav__profile-data__dropdown bottom-rounded \" + navState.dropDownState}>\r\n                <ul className=\"dropdown__list\">\r\n                  <li className=\"dropdown__list-el\">\r\n                    <Link to={getUserProfileLink()} className=\"semi\">Моя страница</Link>\r\n                  </li>\r\n                  <li className=\"dropdown__list-el\" onClick={optionsPopupToggle}>\r\n                    <button to={getUserProfileLink()} className=\"semi\">Настройки</button>\r\n                  </li>\r\n                  <li className=\"dropdown__list-el\" onClick={logoutHandleFormSubmit}>\r\n                    <button className=\"semi\">Выход</button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>     \r\n      </div> \r\n    </div>\r\n\r\n    <div className={\"search-panel \" + navState.searchActive}>\r\n      <div className=\"container\">\r\n        <div className=\"search-panel__wrapper\">\r\n          <SearchPanel history={history}></SearchPanel>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n\r\n    {navState.optionsPopup.optionsPopupState === 'active'?(<OptionsPopup history={history}></OptionsPopup>):('')}\r\n  </div>\r\n  )\r\n  else return(\r\n  <div className={\"nav-block \"+navState.position}>\r\n    <div className=\"nav-bar\">\r\n      <div className=\"container\">\r\n        <nav className=\"nav\">\r\n          <div className=\"nav__left-side\">\r\n            <Link to=\"/landing\" className=\"nav-el\" >\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Link>\r\n\r\n            <Link to=\"/content\" className=\"f-medium semi link-anim nav-el\">Полезное</Link>\r\n\r\n            <button  className={\"nav-el nav__search \" + navState.searchActive} onClick={searchToggle}>\r\n              <span className=\"f-medium semi\" >Поиск</span> \r\n              <img src={arrow} alt=\"\"/>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"nav__right-side\">\r\n            <button className=\"f-medium highlighted-btn semi nav-el\" onClick={registartionPopupOpen}>Начать карьеру</button>\r\n\r\n            <button className=\"f-medium semi link-anim nav-el\" onClick={loginPopupOpen}>Войти</button>\r\n          </div>    \r\n        </nav>     \r\n      </div>  \r\n    </div>\r\n\r\n    <div className={\"search-panel \" + navState.searchActive}>\r\n      <div className=\"container\">\r\n        <div className= \"search-panel__wrapper\">\r\n          <SearchPanel history={history}></SearchPanel>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n    \r\n    <Popup history={history}></Popup>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  return {\r\n    navState: state.nav,\r\n    logged:state.user.logged,\r\n    userState:state.user,\r\n    userData:state.userData,\r\n    location:ownProps.location.pathname,\r\n    history:ownProps.history\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    onSearchActivate: () => {\r\n      dispatch({type : 'SEARCH_ACTIVATE', payload:null})\r\n    },\r\n    onSearchDeactivate: () => {\r\n      dispatch({type : 'SEARCH_DEACTIVATE', payload:null})\r\n    },\r\n    onLoginPopupActivate: (history) => {\r\n      history.push('/landing')\r\n      dispatch({type : 'POPUP_ACTIVATE', payload:'login'})\r\n    },\r\n    onRegistrationPopupActivate: (history) => {\r\n      history.push('/landing')\r\n      dispatch({type : 'POPUP_ACTIVATE', payload:'registration'})\r\n    },\r\n    onOptionsPopupActivate: () => {\r\n      dispatch({type : 'OPTIONS_POPUP_ACTIVATE', payload:null})\r\n    },\r\n    onOptionsPopupDeactivate: () => {\r\n      dispatch({type : 'OPTIONS_POPUP_DEACTIVATE', payload:null})\r\n    },\r\n    onDropDownActivate: () => {\r\n      dispatch({type : 'DROPDOWN_ACTIVATE', payload:null})\r\n    },\r\n    onDropDownDeactivate: () => {\r\n      dispatch({type : 'DROPDOWN_DEACTIVATE', payload:null})\r\n    },\r\n    onNavPositionChangeToNone: () => {\r\n      dispatch({type : 'CHANGE_NAV_POSITION_TO_NONE', payload:null})\r\n    },\r\n    onNavPositionChangeToFixed: () => {\r\n      dispatch({type : 'CHANGE_NAV_POSITION_TO_FIXED', payload:null})\r\n    },\r\n    onLogout: (token)=>{\r\n      dispatch(logout(token))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n",["174","175"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\nav.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\profile.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\companyProfile.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Vacancies\\Vacancies.js",["176"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './vacancy.css'\r\nimport { addVacancy} from '../../../actions/serverConnections'\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport VacancyRedactPopup from './VacancyRedactPopup/VacancyRedactPopup'\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\nclass Vacancy extends Component {\r\n    addVacancy = (e) => {\r\n        return fetch('../new_vacancy.json', {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            data.user_id = this.props.userData.user_id\r\n            return data\r\n        })\r\n        .then (data => {\r\n            this.props.onPopupNewVacancyActivate(data)\r\n        })\r\n    }\r\n\r\n    redactVacancy = (index) =>{\r\n        this.props.onPopupRedactVacancyActivate(index)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"resumes-block\">\r\n                {this.props.userState.logged ? (this.props.vacancyData.vacancies.length !== 0 ?(<h2>Ваши вакансии:</h2>):('')):(this.props.vacancyData.vacancies.length !== 0 ?(<h2>Вакансии:</h2>):(''))}\r\n                <ul className=\"resumes-list\">\r\n                    {this.props.vacancyData.vacancies.length !== 0 ? \r\n                    (this.props.vacancyData.vacancies.map((el, index)=>\r\n                            (\r\n                            <li key={index} className=\"resume resumes-list-el rounded\">\r\n                                {el.state==='active' ? (<VacancyRedactPopup index={index}></VacancyRedactPopup>) : ('')}\r\n                                <section className={\"resume-main \" + (el.state === 'active' ? ('muted'):(''))}>\r\n                                    <div className={\"resume__header white top-rounded \" + this.props.vacancyData.vacancies[index].bg_header_color}>\r\n                                        <div className=\"resume__header-top\">\r\n                                            <h2 className=\"resume__header__name bold f-large\">{el.vacancy_name}</h2>\r\n                                            <p><span className=\"resume__header__salary bold f-medium\">{el.salary}</span><span className=\"bold f-medium\"> руб.</span></p>\r\n                                        </div>\r\n                                        <div className=\"resume__header-bottom\">\r\n                                            <p className=\"resume__header__grade\">{el.grade}</p>\r\n                                            <p className=\"resume__publication-date sup\">{el.pub_date.slice(0,10)}</p>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"resume__main-info rounded\">\r\n                                        <p className=\"resume__industry f-pre\">{el.industry}</p>\r\n            \r\n                                        <p className=\"resume__work-type\">{el.work_type.join(', ')}</p>\r\n            \r\n                                        <p className=\"resume__about\">{el.about}</p>\r\n            \r\n                                        \r\n                                        <ul className=\"resume__tags-list\">\r\n                                            {el.tags.map((tag, index)=><li key={index} className=\"resume__tags-list-el\">{tag}</li>)}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user?(\r\n                                    <button className=\"resume-redact-btn\"  onClick={this.redactVacancy.bind(this, index)}>\r\n                                        <img src={editIcon} alt=\"editIcon\"/>\r\n                                    </button>\r\n                                ):('')}\r\n                                \r\n                            </li>\r\n                            )\r\n                        )\r\n                    ):('')}\r\n\r\n                    {this.props.vacancyData.newVacancy.length!==0 ? (this.props.vacancyData.newVacancy.state==='active' ? (<VacancyRedactPopup index={this.props.vacancyData.vacancies.length}></VacancyRedactPopup>) : ('')) : ('')}\r\n                </ul>\r\n                {this.props.userState.logged && this.props.userState.user.id === this.props.userData.user && this.props.vacancyData.newVacancy.state!=='active' ? (\r\n                    <div className=\"resume-add\">\r\n                        <p>Добавить вакансию:</p>\r\n                        <button className=\"resume-add-btn\" onClick={this.addVacancy.bind(this, 0)}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button>\r\n                    </div>)\r\n                :('')}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        userState: state.user,\r\n        userData: state.userData,\r\n        vacancyData: state.vacancy,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactVacancyActivate: (vacancyIndex) => {\r\n            dispatch({type : 'POPUP_REDACT_VACANCY_ACTIVATE', payload:vacancyIndex})\r\n        },\r\n        onPopupNewVacancyActivate: (newVacancyData) => {\r\n            dispatch({type : 'POPUP_NEW_VACANCY_ACTIVATE', payload:newVacancyData})\r\n        },\r\n\r\n    }\r\n    }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vacancy);","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\ProfileRedactPopup.js",["177","178"],"import React, {Component} from 'react'\r\nimport Loader from '../../Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport './profileRedactPopup.css'\r\nimport MainPlaceholder from './MainPlaceholder'\r\nimport {createNewEmployee, createNewEmployer, updateEmployee, getUserData} from '../../../actions/serverConnections'\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nimport RedactPopupSectionBaseInfo from './redactPopupSections/RedactPopupSectionBaseInfo'\r\nimport RedactPopupSectionExperience from './redactPopupSections/RedactPopupSectionExperience'\r\nimport RedactPopupSectionImages from './redactPopupSections/RedactPopupSectionImages'\r\n\r\nimport baseInfoIcon from '../../../img/baseInfo.svg'\r\nimport experienceIcon from '../../../img/experience.svg'\r\nimport personalizationIcon from '../../../img/personalization.svg'\r\n\r\n\r\nclass ProfileRedactPopup extends Component {\r\n    popupClose(e){\r\n        e.preventDefault()\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    saveRedactProfileFormChanges = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            \"user_id\": this.props.userState.user.id,\r\n            \"gender\":this.props.placeholderData.gender,\r\n            \"name\":this.props.placeholderData.userName,\r\n            \"mailing\": true,\r\n            \"language\": this.props.profileState.language,\r\n            \"birthday\": this.props.placeholderData.birthday,\r\n            \"address\": this.props.profileState.address,\r\n            \"phone\": this.props.profileState.userPhones,\r\n            \"about\": this.props.placeholderData.description,\r\n            \"social_links\": [],\r\n            \"education\": this.props.profileState.education,\r\n            \"experience\": this.props.profileState.experience,\r\n            \"citizenship\": this.props.placeholderData.citizenship,\r\n            \"profile_link\": \"\",\r\n            \"photo_url\": this.props.placeholderData.photo_url,\r\n            \"profile_background\": this.props.placeholderData.profile_background\r\n        }\r\n\r\n        if (this.props.userState.user.user_type === 'employee'){\r\n            this.props.onUpdateEmployee(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n        }\r\n        else this.props.onUpdateEmployer(data, this.props.userState.user.id, this.props.onGetUserFetch, this.props.onHasProfile)\r\n\r\n        this.props.onPopupRedactProfileDeactivate();\r\n    }\r\n\r\n    changeSection(section) {\r\n        this.props.onChangeSection(section)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"no-fix-blur-box rounded profile-redact \" + this.props.profileState.state}>\r\n                <div className=\"profile-redact__popup-wrapper\">\r\n                    <MainPlaceholder></MainPlaceholder>\r\n                    <div className=\"profile-redact__form\">\r\n                        <div className=\"profile-redact__form-nav\">\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'baseInfo' ? 'active' : '')} onClick={this.changeSection.bind(this, 'baseInfo')}>\r\n                                <img src={baseInfoIcon} alt=\"Базовая информация\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'experience' ? 'active' : '')} onClick={this.changeSection.bind(this, 'experience')}>\r\n                                <img src={experienceIcon} alt=\"Опыт и образование\"/>\r\n                            </button>\r\n                            <button className={\"popup-nav-btn rounded \" + (this.props.profileState.popupRedactActiveSection === 'images' ? 'active' : '')} onClick={this.changeSection.bind(this, 'images')}>\r\n                                <img src={personalizationIcon} alt=\"Персонализация\"/>\r\n                            </button>\r\n                        </div>\r\n                        {this.props.profileState.popupRedactActiveSection === 'baseInfo' ? (<RedactPopupSectionBaseInfo></RedactPopupSectionBaseInfo>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'experience' ? (<RedactPopupSectionExperience></RedactPopupSectionExperience>) : ('')}\r\n                        {this.props.profileState.popupRedactActiveSection === 'images' ? (<RedactPopupSectionImages></RedactPopupSectionImages>) : ('')}\r\n\r\n                        <button className=\"form-submit-btn f-large rounded bold\" onClick={this.saveRedactProfileFormChanges}>Сохранить изменения</button>\r\n                        <button className=\"profile-redact__close-popup-btn\" onClick={this.popupClose.bind(this)} tabIndex=\"-1\">x</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        profileState: state.profile,\r\n        userState: state.user,\r\n        placeholderData: state.profile.placeholder,\r\n        loaderActive: state.nav.popup.loaderActive,\r\n        cropperActive: state.profile.buf.cropper.state,\r\n        cropperData:state.profile.buf.cropper\r\n\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onPopupRedactProfileDeactivate: () => {\r\n            dispatch({type : 'POPUP_REDACT_PROFILE_DEACTIVATE', payload:null})\r\n        },\r\n        onChangeSection: (section) => {\r\n            dispatch({type : 'POPUP_REDACT_CHANGE_SECTION', payload:section})\r\n        },\r\n        onActivateLoader: ()=>{\r\n            dispatch({type : 'ACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onDeactivateLoader: ()=>{\r\n            dispatch({type : 'DEACTIVATE_PROFILE_REDACT_LOADER', payload:null})\r\n        },\r\n        onCreateNewEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(createNewEmployee(data))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onCreateNewEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onUpdateEmployee:(data, userId, onGetUserFetch, onHasProfile)=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n            dispatch(updateEmployee(data, userId))\r\n            .then(data => onGetUserFetch(userId, onHasProfile))\r\n        },\r\n        onUpdateEmployer:()=>{\r\n            dispatch({type : 'WAITING_FOR_FETCH', payload:null})\r\n        },\r\n        onHasProfile: () => {\r\n          dispatch({type : 'USER_HAS_PROFILE', payload:null})\r\n        },\r\n        onGetUserFetch: (userId, onHasProfile)=> {\r\n          dispatch(getUserData(userId))\r\n          .then((data)=>{\r\n              if (data.userData !== null){\r\n                  console.log(data.userData)\r\n                  onHasProfile()\r\n              }\r\n          })\r\n        },\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileRedactPopup);",["179","180"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\serverConnections.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\MainPlaceholder.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionBaseInfo.js",["181"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LeafletMap from '../../../leafletMap/LeafletMap'\r\n\r\n\r\nconst RedactPopupSectionBaseInfo = (state, profileState, placeholderData) => {\r\n    const changeUserNameValue = (e) => {\r\n        let input = e.target.value\r\n        state.onUsernameChange(input)\r\n    }\r\n\r\n    const changeUserDescriptionValue = (e) => {\r\n        state.onDescriptionChange(e.target.value)\r\n    }\r\n\r\n    const saveNewAddress = (e) => {\r\n        state.onSaveNewAddress({\r\n            name:state.LeafletMapData.name,\r\n            lat:state.LeafletMapData.lat,\r\n            lng:state.LeafletMapData.lng\r\n\r\n        })\r\n    }\r\n\r\n    const deletePhone = (e) =>{\r\n        e.preventDefault()\r\n        console.log(e.target.parentElement.dataset.key)\r\n        state.onPhoneDelete(state.placeholderData.phone[e.target.parentElement.dataset.key])\r\n    }\r\n\r\n    const phoneInput = (e) =>{\r\n        console.log(e)\r\n        const value = e.target.value.split(' ').join('')\r\n        if (e.keyCode === 9 || e.keyCode === 32){\r\n            e.preventDefault()\r\n            if(state.placeholderData.phone.length > 1){\r\n\r\n            }\r\n            else if(state.placeholderData.phone.indexOf(value) === -1){\r\n                state.onPhoneAdd(value)\r\n                e.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"popup-redact-section\">\r\n            <div className=\"popup__input-block\">\r\n                <div className=\"input-field underline-anim\">\r\n                    <input className=\"popup__text-input\" id=\"nameInput\" name=\"nameInput\" type=\"text\" placeholder=\" \" onChange={changeUserNameValue} value={state.placeholderData.name}/>\r\n                    <label className=\"popup__text-label\" htmlFor=\"nameInput\">Имя/никнейм</label>\r\n                </div>\r\n\r\n                <div className=\"textarea-field\">\r\n                    <p>Описание профиля</p>\r\n                    <textarea className=\"popup__textarea-input\" name=\"descriptionInput\" id=\"descriptionInput\" onChange={changeUserDescriptionValue} value={state.placeholderData.about}></textarea>\r\n                </div>\r\n\r\n                <div className=\"address-input\">\r\n                    <LeafletMap address={state.profileState.address}></LeafletMap>\r\n                    <button className=\"highlighted sup-btn\" onClick={saveNewAddress}>Сохранить</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"list-input-field popup__input-block\">\r\n                <p>Телефоны</p>\r\n                {state.placeholderData.phone.map((phone, index)=>{\r\n                    return (\r\n                        <div key={index} className=\"list-input-field__el-block\" data-key={index}>\r\n                            <span>{phone}</span>\r\n                            <button className=\"el-block__delete-el\" onClick={deletePhone}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <input className=\"popup__text-input\" type=\"text\" id=\"phonesInput\" name=\"phonesInput\" placeholder=\"Нажмите пробел после введения номера...\" onKeyDown={phoneInput} maxLength=\"12\"/>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        state:state,\r\n        profileState: state.companyProfile,\r\n        userState: state.user,\r\n        placeholderData: state.companyProfile.placeholder,\r\n        LeafletMapData:state.buf.leafletMap.data\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onUsernameChange: (username)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_USERNAME_CHANGE', payload:username})\r\n        },\r\n        onDescriptionChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DESCRIPTION_CHANGE', payload:text})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_CHANGE', payload:text})\r\n        },        \r\n        onPhoneAdd: (phone)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADD_PHONE', payload:phone})\r\n        },\r\n        onPhoneDelete: (phoneId)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_DELETE_PHONE', payload:phoneId})\r\n        },\r\n        onAddressChange: (text)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_NAME_CHANGE', payload:text})\r\n        }, \r\n        onSaveNewAddress:(address)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_ADDRESS_CHANGE', payload:address})\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedactPopupSectionBaseInfo)\r\n\r\n","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionImages.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionImages.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\redactPopupSections\\RedactPopupSectionExperience.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\ImageCropper.js",["182"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\SearchMain\\SearchMain.js",["183","184","185","186"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\search.js",["187"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\asyncDispatch.js",["188"],"import {getSearchQueries} from './serverConnections'\r\n\r\nexport const searchLoaderActivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'SEARCH_START_LOADING'\r\n    })\r\n}\r\n\r\nexport const searchLoaderDeactivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'SEARCH_STOP_LOADING'\r\n    })\r\n}\r\n\r\n","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\CompanyProfile.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Search\\SearchSide\\SearchSide.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\user.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\vacancy.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Side\\Side.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Main\\Main.js",["189","190","191"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport plusIcon from '../../../img/plusIcon.svg'\r\nimport placeholderAvatar from '../../../img/placeholder-avatar.jpg'\r\nimport './main.css'\r\nimport photoRedactIcon from '../../../img/photovector.svg'\r\nimport personalBackground from'../../../img/personal-background.png'\r\n\r\nimport editIcon from '../../../img/edit.svg'\r\n\r\n\r\nclass Main extends Component {\r\n    goPhrase(){\r\n        if (this.props.userState.user.user_type === \"employee\"){\r\n            return <p className=\"info__go-phrase highlighted\">Пора начать свою карьеру!</p>\r\n        }\r\n        return <p className=\"info__go-phrase highlighted\">Пора найти команду!</p>\r\n    }\r\n\r\n    checkOnEmpty(el, returnValue){\r\n        if (el !== \"\"){\r\n            return el\r\n        }\r\n\r\n        return returnValue\r\n    }\r\n\r\n    redactProfile = () =>{\r\n        this.props.onPopupRedactProfileActivate()\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        if (this.props.userState.hasProfile && this.props.userState.user.id === this.props.userData.user){\r\n            return (\r\n                <div className=\"main rounded\">\r\n                    <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                        <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n\r\n                        <button className=\"profile-redact-btn\"  onClick={this.redactProfile}>\r\n                            <img src={editIcon} alt=\"editIcon\"/>\r\n                        </button>\r\n                    </section>\r\n    \r\n                    <section className=\"info\">\r\n                        <div className=\"info-head\">\r\n                            <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                        </div>\r\n                        \r\n                        <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                        <div className=\"info__common-info\">\r\n                            <p className=\"info__common-info__birthday\">{this.props.userData.birthday}</p>\r\n                            <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n\r\n                            <div className=\"info__common-info__living\">\r\n                                <p className=\"living__place\">{this.props.userData.address?this.props.userData.address.name:''}</p>\r\n                                <p className=\"living__cz\">{this.props.userData.citizenship}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {this.props.userData.phone.length !== 0  ? (\r\n                            <div className=\"info__contacts\">\r\n                                <p>Контакты:</p>\r\n                                <div className=\"info__contacts__phones\">\r\n                                    {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                                </div>\r\n                            </div>):('')}\r\n\r\n                        {this.props.userData.language.length !== 0 ? (\r\n                        <div className=\"info__languages\">\r\n                            <p>Владение языками:</p>\r\n                            {this.props.userData.language.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                        </div>):('')}\r\n                        {this.props.userData.education.length!== 0 ?(\r\n                            <div className=\"info__education\">\r\n                                <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                                {this.props.userData.education.map((el, index)=>{\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.university},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                                               \r\n                        {this.props.userData.experience.length!== 0 ? (\r\n                            <div className=\"info__work-experience\">\r\n                                <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                                {this.props.userData.experience.map((el, index)=>{\r\n                                    return (\r\n                                        <div className=\"education-block\" key={index}>\r\n                                            <p className=\"education-name highlighted\">{el.position}</p>\r\n                                            <div className=\"education-place\">\r\n                                                <p className=\"education-place__institution\">{el.company},</p>\r\n                                                <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                                <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>):('')}\r\n                        \r\n                    </section>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        \r\n        else if (this.props.userState.user.id === this.props.userData.user){\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"info__description\">Чтобы создать профиль нажмите на кнопку и введите информацию о себе!</p>\r\n                        {this.goPhrase()}\r\n\r\n                        <button className=\"profile-add-btn\" onClick={this.redactProfile}>\r\n                            <img src={plusIcon} alt=\"plusIcon\"/>\r\n                        </button> \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )}\r\n        else\r\n        return(\r\n            <div className=\"main rounded\">\r\n                <section className=\"personal top-rounded\" style={{backgroundImage: `url(${this.checkOnEmpty(this.props.userData.profile_background, personalBackground)})`}}>\r\n                    <img className=\"personal__avatar\" src={this.checkOnEmpty(this.props.userData.photo_url, placeholderAvatar)} alt=\"аватар\"/>\r\n\r\n                </section>\r\n\r\n                <section className=\"info\">\r\n                    <div className=\"info-head\">\r\n                        <h2 className=\"info__name bold\">{this.props.userData.name}</h2>\r\n                    </div>\r\n                    \r\n                    <p className=\"info__description\">{this.props.userData.about}</p>\r\n\r\n                    <div className=\"info__common-info\">\r\n                        <p className=\"info__common-info__birthday\">{this.props.userData.birthday}</p>\r\n                        <p className={\"info__common-info__gender \" + this.props.userData.gender}></p>\r\n\r\n                        <div className=\"info__common-info__living\">\r\n                            <p className=\"living__place\">{this.props.userData.address?this.props.userData.address.name:''}</p>\r\n                            <p className=\"living__cz\">{this.props.userData.citizenship}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {(this.props.userData.phone.length !== 0 && this.props.userData.phone !== null) ? (\r\n                        <div className=\"info__contacts\">\r\n                            <p>Контакты:</p>\r\n                            <div className=\"info__contacts__phones\">\r\n                                {this.props.userData.phone.map((phone, index) => <a key={index} className=\"contacts__phones-el\" href={\"tel:\"+phone}>{phone}</a> )}\r\n                            </div>\r\n                        </div>):('')}\r\n                        \r\n                    {(this.props.userData.language.length !== 0 && this.props.userData.language !== null)  ? (\r\n                    <div className=\"info__languages\">\r\n                        <p>Владение языками:</p>\r\n                        {this.props.userData.language.map((language, index) => <a key={index} className=\"languages-el\">{language.language + ' - ' + language.grade}</a> )}\r\n                    </div>):('')}\r\n                    {console.log(this.props.userData.education.length)}\r\n                    \r\n                    {this.props.userData.education.length !== 0 ?(\r\n                        <div className=\"info__education\">\r\n                            <h3 className=\"education-head bold headed\">Образование:</h3>\r\n                            {this.props.userData.education.map((el, index)=>{\r\n                                return (\r\n                                    <div className=\"education-block\" key={index}>\r\n                                        <p className=\"education-name highlighted\">{el.profession}</p>\r\n                                        <div className=\"education-place\">\r\n                                            <p className=\"education-place__institution\">{el.university},</p>\r\n                                            <p className=\"education-place__grade\">&nbsp;{el.type}</p>     \r\n                                            <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>):('')}\r\n                                            \r\n                    {this.props.userData.experience.length!== 0 ? (\r\n                        <div className=\"info__work-experience\">\r\n                            <h3 className=\"courses-head bold headed\">Опыт Работы:</h3>\r\n                            {this.props.userData.experience.map((el, index)=>{\r\n                                return (\r\n                                    <div className=\"education-block\" key={index}>\r\n                                        <p className=\"education-name highlighted\">{el.position}</p>\r\n                                        <div className=\"education-place\">\r\n                                            <p className=\"education-place__institution\">{el.company},</p>\r\n                                            <p className=\"education-place__grade\">&nbsp;{el.type},</p>     \r\n                                            <p className=\"education-place__longing\">{el.start_year + ' - ' + el.end_year}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>):('')}\r\n                </section>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userState: state.user,\r\n      userData: state.userData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      onSubjectChangeToEmployer: () => {\r\n        dispatch({type : 'CHANGE_SUBJECT_TO_EMPLOYER', payload:null})\r\n      },\r\n      onPopupRedactProfileActivate: () => {\r\n        dispatch({type : 'POPUP_REDACT_PROFILE_ACTIVATE', payload:null})\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\scripts\\commonScripts.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Vacancies\\VacancyRedactPopup\\VacancyRedactPopup.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ImageCropper.js",["192"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Cropper from \"react-cropper\";\r\nimport firebase from \"firebase\";\r\nimport fileUploader from '../../../actions/fileUploader';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport closeIcon from '../../../img/close.svg';\r\nimport uploadIcon from '../../../img/upload.svg';\r\n\r\n\r\nclass ImageCropper extends Component {\r\n    cropUserImage = (file, maxWidth, maxHeight, imageType) => {\r\n        this.props.onDeactivateCropper()\r\n        setTimeout(()=>{\r\n            if (file !== undefined){\r\n                this.props.onActivateCropper(file, maxWidth, maxHeight, imageType)\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    loadImageToFirebase = (image, imageType) =>{\r\n        console.log(image)\r\n        if (image !== undefined){\r\n            const storageRef = fileUploader.storage().ref()\r\n            const fileRef = storageRef.child('user-' + imageType + this.props.userState.user.id)\r\n            fileRef.put(image).then((response)=>{\r\n                fileRef.getDownloadURL()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if (imageType === 'avatar'){\r\n                        this.props.onChangeAvatar(response)\r\n                    }\r\n                    else if(imageType === 'personal-background'){\r\n                        this.props.onChangePersonalBackground(response)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getCropperData = () => {\r\n        this.props.onDeactivateCropper()\r\n\r\n        if (typeof this.props.cropperData.instance !== \"undefined\") {\r\n          const croppedImage = this.dataURLtoBlob(this.props.cropperData.instance.getCroppedCanvas().toDataURL());\r\n          this.loadImageToFirebase(croppedImage, this.props.cropperData.imageType)\r\n        }\r\n    };\r\n\r\n    dataURLtoBlob = (dataurl) => {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    loadUserImage = (e, imageType) =>{\r\n        const file = e.target.files[0];\r\n        this.loadImageToFirebase(file, imageType)\r\n    }\r\n\r\n    deactivateCropper = () =>{\r\n        this.props.onDeactivateCropper()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.cropperFile){\r\n            if(this.props.cropperData.imageType === 'avatar'){\r\n                this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-avatar.jpg?alt=media&token=5058f243-49e5-4df4-8686-899c6ce12c54')\r\n            }\r\n            else this.props.onSetCropperFile('https://firebasestorage.googleapis.com/v0/b/diploma-55e3f.appspot.com/o/placeholder-background.png?alt=media&token=1c91f99c-c236-4a28-b291-bfc2263df45b')\r\n        }\r\n\r\n        return this.props.cropperActive ? (\r\n            <div className=\"cropper-block\">\r\n                {console.log(this.props.cropperFile)}\r\n                <div\r\n                    className={\"cropper__img-preview \" + this.props.cropperData.imageType}\r\n                    style={{ width: this.props.cropperMaxWidth, height: this.props.cropperMaxHeight, overflow:\"hidden\"}}\r\n                />\r\n\r\n                <Cropper\r\n                style={{ width: \"100%\", maxHeight: \"400px\",minHeight: \"400px\", backgroundColor:\"#fff\" }}\r\n                aspectRatio={this.props.cropperMaxWidth / this.props.cropperMaxHeight}\r\n\r\n                preview=\".cropper__img-preview\"\r\n                src={this.props.cropperFile}\r\n                viewMode={1}\r\n                dragMode='move'\r\n                guides={true}\r\n                minCropBoxHeight={10}\r\n                minCropBoxWidth={10}\r\n                background={false}\r\n                responsive={true}\r\n                autoCropArea={1}\r\n                checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                onInitialized={(instance) => {\r\n                    this.props.setCropperInstance(instance);\r\n                }}\r\n                />\r\n                \r\n                <div className=\"cropper-controls\">\r\n                    <button className=\"cropper-upload-btn\" onClick={this.getCropperData}>\r\n                        <img src={uploadIcon} alt=\"uploadIcon\"/>\r\n                    </button>\r\n\r\n                    <button className=\"cropper-close-btn\" onClick={this.deactivateCropper}>\r\n                        <img src={closeIcon} alt=\"closeIcon\"/>\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n        ) : ('')\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cropperMaxWidth:state.companyProfile.buf.cropper.maxWidth,\r\n        cropperMaxHeight:state.companyProfile.buf.cropper.maxHeight,\r\n        cropperFile:state.companyProfile.buf.cropper.file,\r\n        cropperActive:state.companyProfile.buf.cropper.state,\r\n        cropperData:state.companyProfile.buf.cropper,\r\n        userState: state.user,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        setCropperInstance: (instance) => {\r\n            dispatch({type : 'SET_CROPPER_INSTANCE', payload:instance})\r\n        },\r\n        onChangeAvatar: (fileUrl)=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_AVATAR_CHANGE', payload:fileUrl})\r\n        },\r\n        onChangePersonalBackground: (fileUrl)=>{\r\n            dispatch({type : 'POPUP_EMPLOYER_REDACT_PERSONAL_BACKGROUND_CHANGE', payload:fileUrl})\r\n        },\r\n        onDeactivateCropper:()=>{\r\n            dispatch({type : 'PROFILE_EMPLOYER_REDACT_DEACTIVATE_IMAGE_CROPPER', payload:null})\r\n        },\r\n        onSetCropperFile:(file) => {\r\n            dispatch({type : 'SET_CROPPER_FILE', payload:file})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCropper)\r\n","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\reducers\\cvs.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\ProfileRedactPopup\\ProfileRedactPopup.js",["193","194"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\actions\\fileUploader.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\ProfileRedactPopup\\MainPlaceholder.js",["195","196"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\leafletMap\\LeafletMap.js",["197","198"],"import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { useState } from 'react';\r\nimport '../../css/leaflet.css'\r\nimport '../../css/geosearch.css'\r\nimport L from \"leaflet\";\r\nimport { MapContainer , TileLayer, useMapEvents, Marker, Popup, useMap } from \"react-leaflet\";\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\n\r\n\r\n// import marker icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nconst searchControl = new GeoSearchControl({\r\n  provider: new OpenStreetMapProvider(),\r\n});\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n\r\nfunction DisplayPosition({onChangeMapPosition}) {\r\n    const map = useMap()\r\n    \r\n    const onMove = () => {\r\n        const pos = map.getCenter()\r\n        onChangeMapPosition({\r\n            name:searchControl.searchElement.input.value,\r\n            lat:pos.lat,\r\n            lng:pos.lng\r\n        })\r\n    }\r\n  \r\n    useEffect(() => {\r\n      map.on('move', onMove)\r\n      return () => {\r\n        map.off('move', onMove)\r\n      }\r\n    }, [map, onMove])\r\n\r\n    return null\r\n  }\r\n  \r\n\r\nfunction findStartPosition(data, map){\r\n    // provider.search({ query: \"99 Southwark St, London SE1 0JF, UK\" })\r\n    // .then(value => {})\r\n    var lat = data.lat;\r\n    var lng = data.lng;\r\n    var label = data.name;\r\n    var marker = L.marker([lat, lng]).addTo(map)\r\n    marker.bindPopup(label).openPopup();\r\n    map.setView([lat, lng], 13)\r\n\r\n}\r\n\r\nfunction selectPosition() {\r\n    // onSelectPosition()\r\n}\r\n\r\nfunction LocationMarker() {\r\n    const [position, setPosition] = useState(null)\r\n    const map = useMapEvents({\r\n      click() {\r\n        map.locate()\r\n      },\r\n      locationfound(e) {\r\n        setPosition(e.latlng)\r\n        map.flyTo(e.latlng, map.getZoom())\r\n      },\r\n    })\r\n  \r\n    return position === null ? null : (\r\n      <Marker position={position}>\r\n        <Popup>Вы здесь</Popup>\r\n        <button onClick={selectPosition}>выбрать позицию</button>\r\n      </Marker>\r\n    )\r\n}\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png\",\r\n  iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\r\n});\r\n\r\nfunction MapComp ({address, onChangeMapPosition}) {\r\n    console.log(address)\r\n    \r\n    function initMap(map){\r\n        map.addControl(searchControl);\r\n    }\r\n\r\n    const center = (!address && address !== undefined) ? [address.lat, address.lng] : [0, 0];\r\n    return (\r\n        <MapContainer \r\n            style={{ height: \"30vh\" }}\r\n            center={center}\r\n            zoom=\"10\"\r\n            whenCreated={map=>{\r\n                initMap(map)\r\n                if (!address && address !== undefined) findStartPosition(address, map)\r\n            }}\r\n        >\r\n            <TileLayer\r\n            attribution=\"&copy; <a href='https://osm.org/copyright'>OpenStreetMap</a> contributors\"\r\n            url={\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}\r\n            />\r\n            <LocationMarker></LocationMarker>\r\n            <DisplayPosition onChangeMapPosition={onChangeMapPosition}></DisplayPosition>\r\n        </MapContainer >\r\n    \r\n    );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {\r\n        address:ownProps.address\r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onLeafletMapInit: (m) => {\r\n            dispatch({type : 'INIT_LEAFLET_MAP', payload:m})\r\n        },\r\n        onChangeMapPosition: (position) => {\r\n            dispatch({type : 'CHANGE_LEAFLET_MAP_POSITION', payload:position})\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapComp);\r\n\r\n","C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Landing\\Landing.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\CompanyProfile\\Side\\Side.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\Popup\\Popup.js",["199"],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Profile\\Resumes\\ResumeRedactPopup\\ResumeRedactPopup.js",[],"C:\\Users\\123\\Desktop\\diploma\\Diploma\\src\\components\\Nav\\SearchPanel\\SearchPanel.js",["200"],{"ruleId":"201","severity":1,"message":"202","line":18,"column":8,"nodeType":"203","messageId":"204","endLine":18,"endColumn":11},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":81,"column":6,"nodeType":"211","endLine":81,"endColumn":16,"suggestions":"212"},{"ruleId":"205","replacedBy":"213"},{"ruleId":"207","replacedBy":"214"},{"ruleId":"201","severity":1,"message":"215","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":20},{"ruleId":"201","severity":1,"message":"216","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"217","line":6,"column":28,"nodeType":"203","messageId":"204","endLine":6,"endColumn":45},{"ruleId":"205","replacedBy":"218"},{"ruleId":"207","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":111,"column":9,"nodeType":"222","messageId":"223","endLine":111,"endColumn":24},{"ruleId":"201","severity":1,"message":"224","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":9},{"ruleId":"201","severity":1,"message":"226","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":37,"column":9,"nodeType":"229","messageId":"230","endLine":53,"endColumn":10},{"ruleId":"231","severity":1,"message":"232","line":211,"column":50,"nodeType":"233","messageId":"234","endLine":211,"endColumn":52},{"ruleId":"231","severity":1,"message":"232","line":37,"column":34,"nodeType":"233","messageId":"234","endLine":37,"endColumn":36},{"ruleId":"201","severity":1,"message":"235","line":1,"column":9,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"236","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":75,"column":84,"nodeType":"239","endLine":75,"endColumn":124},{"ruleId":"237","severity":1,"message":"238","line":174,"column":80,"nodeType":"239","endLine":174,"endColumn":120},{"ruleId":"201","severity":1,"message":"224","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":16},{"ruleId":"201","severity":1,"message":"216","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"240","line":8,"column":8,"nodeType":"203","messageId":"204","endLine":8,"endColumn":20},{"ruleId":"201","severity":1,"message":"241","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":52,"column":80,"nodeType":"239","endLine":52,"endColumn":120},{"ruleId":"201","severity":1,"message":"242","line":18,"column":7,"nodeType":"203","messageId":"204","endLine":18,"endColumn":15},{"ruleId":"209","severity":1,"message":"243","line":24,"column":11,"nodeType":"244","endLine":31,"endColumn":6},{"ruleId":"237","severity":1,"message":"245","line":232,"column":106,"nodeType":"239","endLine":232,"endColumn":118},{"ruleId":"231","severity":1,"message":"232","line":102,"column":50,"nodeType":"233","messageId":"234","endLine":102,"endColumn":52},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logged', 'onNavPositionChangeToFixed', and 'onNavPositionChangeToNone'. Either include them or remove the dependency array. If 'onNavPositionChangeToFixed' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["248"],["246"],["247"],"'addVacancy' is defined but never used.","'Loader' is defined but never used.","'createNewEmployer' is defined but never used.",["246"],["247"],"no-dupe-keys","Duplicate key 'onAddressChange'.","ObjectExpression","unexpected","'firebase' is defined but never used.","'e' is defined but never used.","'placeholderAvatar' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getSearchQueries' is defined but never used.","'photoRedactIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fileUploader' is defined but never used.","'Cropper' is defined but never used.","'provider' is assigned a value but never used.","The 'onMove' function makes the dependencies of useEffect Hook (at line 38) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'onMove' in its own useCallback() Hook.","VariableDeclarator","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},"Update the dependencies array to be: [location, logged, onNavPositionChangeToFixed, onNavPositionChangeToNone]",{"range":"251","text":"252"},[2138,2148],"[location, logged, onNavPositionChangeToFixed, onNavPositionChangeToNone]"]